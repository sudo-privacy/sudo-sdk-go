// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.18.1
// source: protobuf/mpc_virtual_service/platform/cron.proto

package cron

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	_ "sudoprivacy.com/go/sudosdk/protobuf/basic/protobuf/virtualservice/platformpb/options"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Cron_JobType int32

const (
	Cron_UNKNOWN_JOBTYPE Cron_JobType = 0
	Cron_TEST            Cron_JobType = 1
	Cron_TASK            Cron_JobType = 2
)

// Enum value maps for Cron_JobType.
var (
	Cron_JobType_name = map[int32]string{
		0: "UNKNOWN_JOBTYPE",
		1: "TEST",
		2: "TASK",
	}
	Cron_JobType_value = map[string]int32{
		"UNKNOWN_JOBTYPE": 0,
		"TEST":            1,
		"TASK":            2,
	}
)

func (x Cron_JobType) Enum() *Cron_JobType {
	p := new(Cron_JobType)
	*p = x
	return p
}

func (x Cron_JobType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Cron_JobType) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_mpc_virtual_service_platform_cron_proto_enumTypes[0].Descriptor()
}

func (Cron_JobType) Type() protoreflect.EnumType {
	return &file_protobuf_mpc_virtual_service_platform_cron_proto_enumTypes[0]
}

func (x Cron_JobType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Cron_JobType.Descriptor instead.
func (Cron_JobType) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_mpc_virtual_service_platform_cron_proto_rawDescGZIP(), []int{0, 0}
}

type Cron_JobStatus int32

const (
	Cron_UNKNOWN_JOBSTATUS Cron_JobStatus = 0
	Cron_ACTIVE            Cron_JobStatus = 1
	Cron_INACTIVE          Cron_JobStatus = 2
)

// Enum value maps for Cron_JobStatus.
var (
	Cron_JobStatus_name = map[int32]string{
		0: "UNKNOWN_JOBSTATUS",
		1: "ACTIVE",
		2: "INACTIVE",
	}
	Cron_JobStatus_value = map[string]int32{
		"UNKNOWN_JOBSTATUS": 0,
		"ACTIVE":            1,
		"INACTIVE":          2,
	}
)

func (x Cron_JobStatus) Enum() *Cron_JobStatus {
	p := new(Cron_JobStatus)
	*p = x
	return p
}

func (x Cron_JobStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Cron_JobStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_mpc_virtual_service_platform_cron_proto_enumTypes[1].Descriptor()
}

func (Cron_JobStatus) Type() protoreflect.EnumType {
	return &file_protobuf_mpc_virtual_service_platform_cron_proto_enumTypes[1]
}

func (x Cron_JobStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Cron_JobStatus.Descriptor instead.
func (Cron_JobStatus) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_mpc_virtual_service_platform_cron_proto_rawDescGZIP(), []int{0, 1}
}

type Cron_RepeatPolicy int32

const (
	Cron_UNKNOWN_POLICY Cron_RepeatPolicy = 0
	Cron_NO_REPEAT      Cron_RepeatPolicy = 1
	Cron_DAILY          Cron_RepeatPolicy = 2
	Cron_WEEKLY         Cron_RepeatPolicy = 3
	Cron_MONTHLY        Cron_RepeatPolicy = 4
	Cron_HOURLY         Cron_RepeatPolicy = 5
	Cron_MINUTELY       Cron_RepeatPolicy = 6
)

// Enum value maps for Cron_RepeatPolicy.
var (
	Cron_RepeatPolicy_name = map[int32]string{
		0: "UNKNOWN_POLICY",
		1: "NO_REPEAT",
		2: "DAILY",
		3: "WEEKLY",
		4: "MONTHLY",
		5: "HOURLY",
		6: "MINUTELY",
	}
	Cron_RepeatPolicy_value = map[string]int32{
		"UNKNOWN_POLICY": 0,
		"NO_REPEAT":      1,
		"DAILY":          2,
		"WEEKLY":         3,
		"MONTHLY":        4,
		"HOURLY":         5,
		"MINUTELY":       6,
	}
)

func (x Cron_RepeatPolicy) Enum() *Cron_RepeatPolicy {
	p := new(Cron_RepeatPolicy)
	*p = x
	return p
}

func (x Cron_RepeatPolicy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Cron_RepeatPolicy) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_mpc_virtual_service_platform_cron_proto_enumTypes[2].Descriptor()
}

func (Cron_RepeatPolicy) Type() protoreflect.EnumType {
	return &file_protobuf_mpc_virtual_service_platform_cron_proto_enumTypes[2]
}

func (x Cron_RepeatPolicy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Cron_RepeatPolicy.Descriptor instead.
func (Cron_RepeatPolicy) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_mpc_virtual_service_platform_cron_proto_rawDescGZIP(), []int{0, 2}
}

type Cron struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Cron) Reset() {
	*x = Cron{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_mpc_virtual_service_platform_cron_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cron) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cron) ProtoMessage() {}

func (x *Cron) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_mpc_virtual_service_platform_cron_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cron.ProtoReflect.Descriptor instead.
func (*Cron) Descriptor() ([]byte, []int) {
	return file_protobuf_mpc_virtual_service_platform_cron_proto_rawDescGZIP(), []int{0}
}

type Job struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Job:
	//	*Job_TestJob_
	//	*Job_TaskJob_
	Job isJob_Job `protobuf_oneof:"job"`
}

func (x *Job) Reset() {
	*x = Job{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_mpc_virtual_service_platform_cron_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Job) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Job) ProtoMessage() {}

func (x *Job) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_mpc_virtual_service_platform_cron_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Job.ProtoReflect.Descriptor instead.
func (*Job) Descriptor() ([]byte, []int) {
	return file_protobuf_mpc_virtual_service_platform_cron_proto_rawDescGZIP(), []int{1}
}

func (m *Job) GetJob() isJob_Job {
	if m != nil {
		return m.Job
	}
	return nil
}

func (x *Job) GetTestJob() *Job_TestJob {
	if x, ok := x.GetJob().(*Job_TestJob_); ok {
		return x.TestJob
	}
	return nil
}

func (x *Job) GetTaskJob() *Job_TaskJob {
	if x, ok := x.GetJob().(*Job_TaskJob_); ok {
		return x.TaskJob
	}
	return nil
}

type isJob_Job interface {
	isJob_Job()
}

type Job_TestJob_ struct {
	TestJob *Job_TestJob `protobuf:"bytes,6,opt,name=test_job,json=testJob,proto3,oneof"`
}

type Job_TaskJob_ struct {
	TaskJob *Job_TaskJob `protobuf:"bytes,7,opt,name=task_job,json=taskJob,proto3,oneof"`
}

func (*Job_TestJob_) isJob_Job() {}

func (*Job_TaskJob_) isJob_Job() {}

type CreateOrUpdateCronJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TusitaCron bool             `protobuf:"varint,1,opt,name=tusita_cron,json=tusitaCron,proto3" json:"tusita_cron,omitempty"`
	Schedules  []*Cron_Schedule `protobuf:"bytes,2,rep,name=schedules,proto3" json:"schedules,omitempty"`
	JobType    Cron_JobType     `protobuf:"varint,3,opt,name=job_type,json=jobType,proto3,enum=protobuf.platform.cron.Cron_JobType" json:"job_type,omitempty"`
	JobTypeId  uint64           `protobuf:"varint,4,opt,name=job_type_id,json=jobTypeId,proto3" json:"job_type_id,omitempty"`
	Job        *Job             `protobuf:"bytes,5,opt,name=job,proto3" json:"job,omitempty"`
}

func (x *CreateOrUpdateCronJobRequest) Reset() {
	*x = CreateOrUpdateCronJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_mpc_virtual_service_platform_cron_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrUpdateCronJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrUpdateCronJobRequest) ProtoMessage() {}

func (x *CreateOrUpdateCronJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_mpc_virtual_service_platform_cron_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrUpdateCronJobRequest.ProtoReflect.Descriptor instead.
func (*CreateOrUpdateCronJobRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_mpc_virtual_service_platform_cron_proto_rawDescGZIP(), []int{2}
}

func (x *CreateOrUpdateCronJobRequest) GetTusitaCron() bool {
	if x != nil {
		return x.TusitaCron
	}
	return false
}

func (x *CreateOrUpdateCronJobRequest) GetSchedules() []*Cron_Schedule {
	if x != nil {
		return x.Schedules
	}
	return nil
}

func (x *CreateOrUpdateCronJobRequest) GetJobType() Cron_JobType {
	if x != nil {
		return x.JobType
	}
	return Cron_UNKNOWN_JOBTYPE
}

func (x *CreateOrUpdateCronJobRequest) GetJobTypeId() uint64 {
	if x != nil {
		return x.JobTypeId
	}
	return 0
}

func (x *CreateOrUpdateCronJobRequest) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

type CreateOrUpdateCronJobResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entry *Cron_Entry `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
}

func (x *CreateOrUpdateCronJobResponse) Reset() {
	*x = CreateOrUpdateCronJobResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_mpc_virtual_service_platform_cron_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrUpdateCronJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrUpdateCronJobResponse) ProtoMessage() {}

func (x *CreateOrUpdateCronJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_mpc_virtual_service_platform_cron_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrUpdateCronJobResponse.ProtoReflect.Descriptor instead.
func (*CreateOrUpdateCronJobResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_mpc_virtual_service_platform_cron_proto_rawDescGZIP(), []int{3}
}

func (x *CreateOrUpdateCronJobResponse) GetEntry() *Cron_Entry {
	if x != nil {
		return x.Entry
	}
	return nil
}

type ListCronJobsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TusitaCron bool         `protobuf:"varint,1,opt,name=tusita_cron,json=tusitaCron,proto3" json:"tusita_cron,omitempty"`
	JobType    Cron_JobType `protobuf:"varint,2,opt,name=job_type,json=jobType,proto3,enum=protobuf.platform.cron.Cron_JobType" json:"job_type,omitempty"`
	JobTypeId  uint64       `protobuf:"varint,3,opt,name=job_type_id,json=jobTypeId,proto3" json:"job_type_id,omitempty"`
	JobTypeIds []uint64     `protobuf:"varint,4,rep,packed,name=job_type_ids,json=jobTypeIds,proto3" json:"job_type_ids,omitempty"`
}

func (x *ListCronJobsRequest) Reset() {
	*x = ListCronJobsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_mpc_virtual_service_platform_cron_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCronJobsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCronJobsRequest) ProtoMessage() {}

func (x *ListCronJobsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_mpc_virtual_service_platform_cron_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCronJobsRequest.ProtoReflect.Descriptor instead.
func (*ListCronJobsRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_mpc_virtual_service_platform_cron_proto_rawDescGZIP(), []int{4}
}

func (x *ListCronJobsRequest) GetTusitaCron() bool {
	if x != nil {
		return x.TusitaCron
	}
	return false
}

func (x *ListCronJobsRequest) GetJobType() Cron_JobType {
	if x != nil {
		return x.JobType
	}
	return Cron_UNKNOWN_JOBTYPE
}

func (x *ListCronJobsRequest) GetJobTypeId() uint64 {
	if x != nil {
		return x.JobTypeId
	}
	return 0
}

func (x *ListCronJobsRequest) GetJobTypeIds() []uint64 {
	if x != nil {
		return x.JobTypeIds
	}
	return nil
}

type ListCronJobsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*Cron_Entry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *ListCronJobsResponse) Reset() {
	*x = ListCronJobsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_mpc_virtual_service_platform_cron_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCronJobsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCronJobsResponse) ProtoMessage() {}

func (x *ListCronJobsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_mpc_virtual_service_platform_cron_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCronJobsResponse.ProtoReflect.Descriptor instead.
func (*ListCronJobsResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_mpc_virtual_service_platform_cron_proto_rawDescGZIP(), []int{5}
}

func (x *ListCronJobsResponse) GetEntries() []*Cron_Entry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type DeleteCronJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TusitaCron bool         `protobuf:"varint,1,opt,name=tusita_cron,json=tusitaCron,proto3" json:"tusita_cron,omitempty"`
	JobType    Cron_JobType `protobuf:"varint,2,opt,name=job_type,json=jobType,proto3,enum=protobuf.platform.cron.Cron_JobType" json:"job_type,omitempty"`
	JobTypeId  uint64       `protobuf:"varint,3,opt,name=job_type_id,json=jobTypeId,proto3" json:"job_type_id,omitempty"`
}

func (x *DeleteCronJobRequest) Reset() {
	*x = DeleteCronJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_mpc_virtual_service_platform_cron_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCronJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCronJobRequest) ProtoMessage() {}

func (x *DeleteCronJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_mpc_virtual_service_platform_cron_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCronJobRequest.ProtoReflect.Descriptor instead.
func (*DeleteCronJobRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_mpc_virtual_service_platform_cron_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteCronJobRequest) GetTusitaCron() bool {
	if x != nil {
		return x.TusitaCron
	}
	return false
}

func (x *DeleteCronJobRequest) GetJobType() Cron_JobType {
	if x != nil {
		return x.JobType
	}
	return Cron_UNKNOWN_JOBTYPE
}

func (x *DeleteCronJobRequest) GetJobTypeId() uint64 {
	if x != nil {
		return x.JobTypeId
	}
	return 0
}

type Cron_Schedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Second uint64            `protobuf:"varint,1,opt,name=second,proto3" json:"second,omitempty"`
	Minute uint64            `protobuf:"varint,2,opt,name=minute,proto3" json:"minute,omitempty"`
	Hour   uint64            `protobuf:"varint,3,opt,name=hour,proto3" json:"hour,omitempty"`
	Dom    uint64            `protobuf:"varint,4,opt,name=dom,proto3" json:"dom,omitempty"`
	Month  uint64            `protobuf:"varint,5,opt,name=month,proto3" json:"month,omitempty"`
	Dow    uint64            `protobuf:"varint,6,opt,name=dow,proto3" json:"dow,omitempty"`
	Year   uint64            `protobuf:"varint,7,opt,name=year,proto3" json:"year,omitempty"`
	Repeat Cron_RepeatPolicy `protobuf:"varint,8,opt,name=repeat,proto3,enum=protobuf.platform.cron.Cron_RepeatPolicy" json:"repeat,omitempty"`
}

func (x *Cron_Schedule) Reset() {
	*x = Cron_Schedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_mpc_virtual_service_platform_cron_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cron_Schedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cron_Schedule) ProtoMessage() {}

func (x *Cron_Schedule) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_mpc_virtual_service_platform_cron_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cron_Schedule.ProtoReflect.Descriptor instead.
func (*Cron_Schedule) Descriptor() ([]byte, []int) {
	return file_protobuf_mpc_virtual_service_platform_cron_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Cron_Schedule) GetSecond() uint64 {
	if x != nil {
		return x.Second
	}
	return 0
}

func (x *Cron_Schedule) GetMinute() uint64 {
	if x != nil {
		return x.Minute
	}
	return 0
}

func (x *Cron_Schedule) GetHour() uint64 {
	if x != nil {
		return x.Hour
	}
	return 0
}

func (x *Cron_Schedule) GetDom() uint64 {
	if x != nil {
		return x.Dom
	}
	return 0
}

func (x *Cron_Schedule) GetMonth() uint64 {
	if x != nil {
		return x.Month
	}
	return 0
}

func (x *Cron_Schedule) GetDow() uint64 {
	if x != nil {
		return x.Dow
	}
	return 0
}

func (x *Cron_Schedule) GetYear() uint64 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *Cron_Schedule) GetRepeat() Cron_RepeatPolicy {
	if x != nil {
		return x.Repeat
	}
	return Cron_UNKNOWN_POLICY
}

type Cron_Entry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Schedules []*Cron_Schedule `protobuf:"bytes,1,rep,name=schedules,proto3" json:"schedules,omitempty"`
	JobType   Cron_JobType     `protobuf:"varint,2,opt,name=job_type,json=jobType,proto3,enum=protobuf.platform.cron.Cron_JobType" json:"job_type,omitempty"`
	JobTypeId uint64           `protobuf:"varint,3,opt,name=job_type_id,json=jobTypeId,proto3" json:"job_type_id,omitempty"`
	Next      int64            `protobuf:"varint,4,opt,name=next,proto3" json:"next,omitempty"`
	Status    Cron_JobStatus   `protobuf:"varint,5,opt,name=status,proto3,enum=protobuf.platform.cron.Cron_JobStatus" json:"status,omitempty"`
	Job       *Job             `protobuf:"bytes,6,opt,name=job,proto3" json:"job,omitempty"`
}

func (x *Cron_Entry) Reset() {
	*x = Cron_Entry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_mpc_virtual_service_platform_cron_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cron_Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cron_Entry) ProtoMessage() {}

func (x *Cron_Entry) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_mpc_virtual_service_platform_cron_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cron_Entry.ProtoReflect.Descriptor instead.
func (*Cron_Entry) Descriptor() ([]byte, []int) {
	return file_protobuf_mpc_virtual_service_platform_cron_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Cron_Entry) GetSchedules() []*Cron_Schedule {
	if x != nil {
		return x.Schedules
	}
	return nil
}

func (x *Cron_Entry) GetJobType() Cron_JobType {
	if x != nil {
		return x.JobType
	}
	return Cron_UNKNOWN_JOBTYPE
}

func (x *Cron_Entry) GetJobTypeId() uint64 {
	if x != nil {
		return x.JobTypeId
	}
	return 0
}

func (x *Cron_Entry) GetNext() int64 {
	if x != nil {
		return x.Next
	}
	return 0
}

func (x *Cron_Entry) GetStatus() Cron_JobStatus {
	if x != nil {
		return x.Status
	}
	return Cron_UNKNOWN_JOBSTATUS
}

func (x *Cron_Entry) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

type Job_TestJob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Job_TestJob) Reset() {
	*x = Job_TestJob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_mpc_virtual_service_platform_cron_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Job_TestJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Job_TestJob) ProtoMessage() {}

func (x *Job_TestJob) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_mpc_virtual_service_platform_cron_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Job_TestJob.ProtoReflect.Descriptor instead.
func (*Job_TestJob) Descriptor() ([]byte, []int) {
	return file_protobuf_mpc_virtual_service_platform_cron_proto_rawDescGZIP(), []int{1, 0}
}

type Job_TaskJob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId uint64 `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *Job_TaskJob) Reset() {
	*x = Job_TaskJob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_mpc_virtual_service_platform_cron_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Job_TaskJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Job_TaskJob) ProtoMessage() {}

func (x *Job_TaskJob) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_mpc_virtual_service_platform_cron_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Job_TaskJob.ProtoReflect.Descriptor instead.
func (*Job_TaskJob) Descriptor() ([]byte, []int) {
	return file_protobuf_mpc_virtual_service_platform_cron_proto_rawDescGZIP(), []int{1, 1}
}

func (x *Job_TaskJob) GetTaskId() uint64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

var File_protobuf_mpc_virtual_service_platform_cron_proto protoreflect.FileDescriptor

var file_protobuf_mpc_virtual_service_platform_cron_proto_rawDesc = []byte{
	0x0a, 0x30, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x6d, 0x70, 0x63, 0x5f, 0x76,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x63, 0x72, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x63, 0x72, 0x6f, 0x6e, 0x1a, 0x38, 0x73, 0x75, 0x64, 0x6f,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x6d, 0x70, 0x63, 0x5f, 0x76, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfe, 0x05, 0x0a, 0x04, 0x43, 0x72, 0x6f, 0x6e, 0x1a, 0xdf, 0x01,
	0x0a, 0x08, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x73, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f,
	0x75, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x68, 0x6f, 0x75, 0x72, 0x12, 0x10,
	0x0a, 0x03, 0x64, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x64, 0x6f, 0x6d,
	0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6f, 0x77, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x03, 0x64, 0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x41, 0x0a, 0x06,
	0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x63, 0x72, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x70, 0x65, 0x61,
	0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x06, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x1a,
	0xb0, 0x02, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x43, 0x0a, 0x09, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x63, 0x72, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x6f, 0x6e, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x52, 0x09, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x3f,
	0x0a, 0x08, 0x6a, 0x6f, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x63, 0x72, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x6f, 0x6e, 0x2e, 0x4a,
	0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1e, 0x0a, 0x0b, 0x6a, 0x6f, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x6e,
	0x65, 0x78, 0x74, 0x12, 0x3e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x63, 0x72, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x6f,
	0x6e, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x2d, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x63, 0x72, 0x6f, 0x6e, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a,
	0x6f, 0x62, 0x22, 0x32, 0x0a, 0x07, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a,
	0x0f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x4a, 0x4f, 0x42, 0x54, 0x59, 0x50, 0x45,
	0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x45, 0x53, 0x54, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04,
	0x54, 0x41, 0x53, 0x4b, 0x10, 0x02, 0x22, 0x3c, 0x0a, 0x09, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x15, 0x0a, 0x11, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x4a,
	0x4f, 0x42, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43,
	0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x4e, 0x41, 0x43, 0x54, 0x49,
	0x56, 0x45, 0x10, 0x02, 0x22, 0x6f, 0x0a, 0x0c, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f,
	0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x5f, 0x52,
	0x45, 0x50, 0x45, 0x41, 0x54, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x41, 0x49, 0x4c, 0x59,
	0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x57, 0x45, 0x45, 0x4b, 0x4c, 0x59, 0x10, 0x03, 0x12, 0x0b,
	0x0a, 0x07, 0x4d, 0x4f, 0x4e, 0x54, 0x48, 0x4c, 0x59, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x48,
	0x4f, 0x55, 0x52, 0x4c, 0x59, 0x10, 0x05, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x49, 0x4e, 0x55, 0x54,
	0x45, 0x4c, 0x59, 0x10, 0x06, 0x22, 0xbf, 0x01, 0x0a, 0x03, 0x4a, 0x6f, 0x62, 0x12, 0x40, 0x0a,
	0x08, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x6a, 0x6f, 0x62, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x63, 0x72, 0x6f, 0x6e, 0x2e, 0x4a, 0x6f, 0x62, 0x2e, 0x54, 0x65, 0x73,
	0x74, 0x4a, 0x6f, 0x62, 0x48, 0x00, 0x52, 0x07, 0x74, 0x65, 0x73, 0x74, 0x4a, 0x6f, 0x62, 0x12,
	0x40, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6a, 0x6f, 0x62, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x63, 0x72, 0x6f, 0x6e, 0x2e, 0x4a, 0x6f, 0x62, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x4a, 0x6f, 0x62, 0x48, 0x00, 0x52, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x4a, 0x6f,
	0x62, 0x1a, 0x09, 0x0a, 0x07, 0x54, 0x65, 0x73, 0x74, 0x4a, 0x6f, 0x62, 0x1a, 0x22, 0x0a, 0x07,
	0x54, 0x61, 0x73, 0x6b, 0x4a, 0x6f, 0x62, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64,
	0x42, 0x05, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x22, 0x99, 0x02, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x6f, 0x6e, 0x4a, 0x6f,
	0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x75, 0x73, 0x69,
	0x74, 0x61, 0x5f, 0x63, 0x72, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x74,
	0x75, 0x73, 0x69, 0x74, 0x61, 0x43, 0x72, 0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x09, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x63, 0x72, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x6f, 0x6e, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x42, 0x03, 0xc0, 0x3e, 0x01, 0x52, 0x09, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x73, 0x12, 0x3f, 0x0a, 0x08, 0x6a, 0x6f, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x63, 0x72, 0x6f, 0x6e, 0x2e, 0x43,
	0x72, 0x6f, 0x6e, 0x2e, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x6a, 0x6f, 0x62,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x6a, 0x6f, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6a, 0x6f, 0x62, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x63, 0x72, 0x6f, 0x6e, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03,
	0x6a, 0x6f, 0x62, 0x22, 0x59, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x6f, 0x6e, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x63, 0x72, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x6f,
	0x6e, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x22, 0xb9,
	0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x6f, 0x6e, 0x4a, 0x6f, 0x62, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x75, 0x73, 0x69, 0x74, 0x61,
	0x5f, 0x63, 0x72, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x74, 0x75, 0x73,
	0x69, 0x74, 0x61, 0x43, 0x72, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x08, 0x6a, 0x6f, 0x62, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x63, 0x72,
	0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x6f, 0x6e, 0x2e, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x07, 0x6a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x6a, 0x6f, 0x62, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6a,
	0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x6a, 0x6f, 0x62, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0a,
	0x6a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x73, 0x22, 0x54, 0x0a, 0x14, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x72, 0x6f, 0x6e, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3c, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x63, 0x72, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x6f,
	0x6e, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x22, 0x98, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x72, 0x6f, 0x6e, 0x4a,
	0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x75, 0x73,
	0x69, 0x74, 0x61, 0x5f, 0x63, 0x72, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x74, 0x75, 0x73, 0x69, 0x74, 0x61, 0x43, 0x72, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x08, 0x6a, 0x6f,
	0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x63, 0x72, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x6f, 0x6e, 0x2e, 0x4a, 0x6f, 0x62, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x6a,
	0x6f, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x6a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x42, 0x35, 0x5a, 0x33, 0x70,
	0x61, 0x61, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x70, 0x62, 0x2f, 0x63, 0x72,
	0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protobuf_mpc_virtual_service_platform_cron_proto_rawDescOnce sync.Once
	file_protobuf_mpc_virtual_service_platform_cron_proto_rawDescData = file_protobuf_mpc_virtual_service_platform_cron_proto_rawDesc
)

func file_protobuf_mpc_virtual_service_platform_cron_proto_rawDescGZIP() []byte {
	file_protobuf_mpc_virtual_service_platform_cron_proto_rawDescOnce.Do(func() {
		file_protobuf_mpc_virtual_service_platform_cron_proto_rawDescData = protoimpl.X.CompressGZIP(file_protobuf_mpc_virtual_service_platform_cron_proto_rawDescData)
	})
	return file_protobuf_mpc_virtual_service_platform_cron_proto_rawDescData
}

var file_protobuf_mpc_virtual_service_platform_cron_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_protobuf_mpc_virtual_service_platform_cron_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_protobuf_mpc_virtual_service_platform_cron_proto_goTypes = []interface{}{
	(Cron_JobType)(0),                     // 0: protobuf.platform.cron.Cron.JobType
	(Cron_JobStatus)(0),                   // 1: protobuf.platform.cron.Cron.JobStatus
	(Cron_RepeatPolicy)(0),                // 2: protobuf.platform.cron.Cron.RepeatPolicy
	(*Cron)(nil),                          // 3: protobuf.platform.cron.Cron
	(*Job)(nil),                           // 4: protobuf.platform.cron.Job
	(*CreateOrUpdateCronJobRequest)(nil),  // 5: protobuf.platform.cron.CreateOrUpdateCronJobRequest
	(*CreateOrUpdateCronJobResponse)(nil), // 6: protobuf.platform.cron.CreateOrUpdateCronJobResponse
	(*ListCronJobsRequest)(nil),           // 7: protobuf.platform.cron.ListCronJobsRequest
	(*ListCronJobsResponse)(nil),          // 8: protobuf.platform.cron.ListCronJobsResponse
	(*DeleteCronJobRequest)(nil),          // 9: protobuf.platform.cron.DeleteCronJobRequest
	(*Cron_Schedule)(nil),                 // 10: protobuf.platform.cron.Cron.Schedule
	(*Cron_Entry)(nil),                    // 11: protobuf.platform.cron.Cron.Entry
	(*Job_TestJob)(nil),                   // 12: protobuf.platform.cron.Job.TestJob
	(*Job_TaskJob)(nil),                   // 13: protobuf.platform.cron.Job.TaskJob
}
var file_protobuf_mpc_virtual_service_platform_cron_proto_depIdxs = []int32{
	12, // 0: protobuf.platform.cron.Job.test_job:type_name -> protobuf.platform.cron.Job.TestJob
	13, // 1: protobuf.platform.cron.Job.task_job:type_name -> protobuf.platform.cron.Job.TaskJob
	10, // 2: protobuf.platform.cron.CreateOrUpdateCronJobRequest.schedules:type_name -> protobuf.platform.cron.Cron.Schedule
	0,  // 3: protobuf.platform.cron.CreateOrUpdateCronJobRequest.job_type:type_name -> protobuf.platform.cron.Cron.JobType
	4,  // 4: protobuf.platform.cron.CreateOrUpdateCronJobRequest.job:type_name -> protobuf.platform.cron.Job
	11, // 5: protobuf.platform.cron.CreateOrUpdateCronJobResponse.entry:type_name -> protobuf.platform.cron.Cron.Entry
	0,  // 6: protobuf.platform.cron.ListCronJobsRequest.job_type:type_name -> protobuf.platform.cron.Cron.JobType
	11, // 7: protobuf.platform.cron.ListCronJobsResponse.entries:type_name -> protobuf.platform.cron.Cron.Entry
	0,  // 8: protobuf.platform.cron.DeleteCronJobRequest.job_type:type_name -> protobuf.platform.cron.Cron.JobType
	2,  // 9: protobuf.platform.cron.Cron.Schedule.repeat:type_name -> protobuf.platform.cron.Cron.RepeatPolicy
	10, // 10: protobuf.platform.cron.Cron.Entry.schedules:type_name -> protobuf.platform.cron.Cron.Schedule
	0,  // 11: protobuf.platform.cron.Cron.Entry.job_type:type_name -> protobuf.platform.cron.Cron.JobType
	1,  // 12: protobuf.platform.cron.Cron.Entry.status:type_name -> protobuf.platform.cron.Cron.JobStatus
	4,  // 13: protobuf.platform.cron.Cron.Entry.job:type_name -> protobuf.platform.cron.Job
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_protobuf_mpc_virtual_service_platform_cron_proto_init() }
func file_protobuf_mpc_virtual_service_platform_cron_proto_init() {
	if File_protobuf_mpc_virtual_service_platform_cron_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protobuf_mpc_virtual_service_platform_cron_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cron); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_mpc_virtual_service_platform_cron_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Job); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_mpc_virtual_service_platform_cron_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrUpdateCronJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_mpc_virtual_service_platform_cron_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrUpdateCronJobResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_mpc_virtual_service_platform_cron_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCronJobsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_mpc_virtual_service_platform_cron_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCronJobsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_mpc_virtual_service_platform_cron_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCronJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_mpc_virtual_service_platform_cron_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cron_Schedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_mpc_virtual_service_platform_cron_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cron_Entry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_mpc_virtual_service_platform_cron_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Job_TestJob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_mpc_virtual_service_platform_cron_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Job_TaskJob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_protobuf_mpc_virtual_service_platform_cron_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Job_TestJob_)(nil),
		(*Job_TaskJob_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protobuf_mpc_virtual_service_platform_cron_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protobuf_mpc_virtual_service_platform_cron_proto_goTypes,
		DependencyIndexes: file_protobuf_mpc_virtual_service_platform_cron_proto_depIdxs,
		EnumInfos:         file_protobuf_mpc_virtual_service_platform_cron_proto_enumTypes,
		MessageInfos:      file_protobuf_mpc_virtual_service_platform_cron_proto_msgTypes,
	}.Build()
	File_protobuf_mpc_virtual_service_platform_cron_proto = out.File
	file_protobuf_mpc_virtual_service_platform_cron_proto_rawDesc = nil
	file_protobuf_mpc_virtual_service_platform_cron_proto_goTypes = nil
	file_protobuf_mpc_virtual_service_platform_cron_proto_depIdxs = nil
}
