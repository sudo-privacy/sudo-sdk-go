// Copyright 2022 Sudo Technology Co., Ltd.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.18.1
// source: sudo/infra_adapter/infra_adapter.proto

package protobuf

import (
	common "github.com/sudo-privacy/sudo-sdk-go/protobuf/basic/protobuf/common"
	enums "github.com/sudo-privacy/sudo-sdk-go/protobuf/basic/protobuf/enums"
	infra_adapter "github.com/sudo-privacy/sudo-sdk-go/protobuf/basic/protobuf/infra_adapter"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SyncStatus int32

const (
	SyncStatus_UNKNOWN   SyncStatus = 0
	SyncStatus_DEPLOYING SyncStatus = 1
	SyncStatus_SUCCESS   SyncStatus = 2
	SyncStatus_FAILED    SyncStatus = 3
	SyncStatus_UPDATING  SyncStatus = 4
)

// Enum value maps for SyncStatus.
var (
	SyncStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "DEPLOYING",
		2: "SUCCESS",
		3: "FAILED",
		4: "UPDATING",
	}
	SyncStatus_value = map[string]int32{
		"UNKNOWN":   0,
		"DEPLOYING": 1,
		"SUCCESS":   2,
		"FAILED":    3,
		"UPDATING":  4,
	}
)

func (x SyncStatus) Enum() *SyncStatus {
	p := new(SyncStatus)
	*p = x
	return p
}

func (x SyncStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SyncStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_sudo_infra_adapter_infra_adapter_proto_enumTypes[0].Descriptor()
}

func (SyncStatus) Type() protoreflect.EnumType {
	return &file_sudo_infra_adapter_infra_adapter_proto_enumTypes[0]
}

func (x SyncStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SyncStatus.Descriptor instead.
func (SyncStatus) EnumDescriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{0}
}

type DatabaseType int32

const (
	DatabaseType_DATABASETYPE_MYSQL  DatabaseType = 0
	DatabaseType_DATABASETYPE_HIVE   DatabaseType = 1
	DatabaseType_DATABASETYPE_ORACLE DatabaseType = 2
)

// Enum value maps for DatabaseType.
var (
	DatabaseType_name = map[int32]string{
		0: "DATABASETYPE_MYSQL",
		1: "DATABASETYPE_HIVE",
		2: "DATABASETYPE_ORACLE",
	}
	DatabaseType_value = map[string]int32{
		"DATABASETYPE_MYSQL":  0,
		"DATABASETYPE_HIVE":   1,
		"DATABASETYPE_ORACLE": 2,
	}
)

func (x DatabaseType) Enum() *DatabaseType {
	p := new(DatabaseType)
	*p = x
	return p
}

func (x DatabaseType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DatabaseType) Descriptor() protoreflect.EnumDescriptor {
	return file_sudo_infra_adapter_infra_adapter_proto_enumTypes[1].Descriptor()
}

func (DatabaseType) Type() protoreflect.EnumType {
	return &file_sudo_infra_adapter_infra_adapter_proto_enumTypes[1]
}

func (x DatabaseType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DatabaseType.Descriptor instead.
func (DatabaseType) EnumDescriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{1}
}

type KillResult_Code int32

const (
	KillResult_SUCCESS   KillResult_Code = 0
	KillResult_FAILED    KillResult_Code = 1
	KillResult_NOT_EXIST KillResult_Code = 2
)

// Enum value maps for KillResult_Code.
var (
	KillResult_Code_name = map[int32]string{
		0: "SUCCESS",
		1: "FAILED",
		2: "NOT_EXIST",
	}
	KillResult_Code_value = map[string]int32{
		"SUCCESS":   0,
		"FAILED":    1,
		"NOT_EXIST": 2,
	}
)

func (x KillResult_Code) Enum() *KillResult_Code {
	p := new(KillResult_Code)
	*p = x
	return p
}

func (x KillResult_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KillResult_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_sudo_infra_adapter_infra_adapter_proto_enumTypes[2].Descriptor()
}

func (KillResult_Code) Type() protoreflect.EnumType {
	return &file_sudo_infra_adapter_infra_adapter_proto_enumTypes[2]
}

func (x KillResult_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KillResult_Code.Descriptor instead.
func (KillResult_Code) EnumDescriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{5, 0}
}

type Health_Status int32

const (
	Health_IDLE    Health_Status = 0
	Health_BUSY    Health_Status = 1
	Health_INVALID Health_Status = 2
)

// Enum value maps for Health_Status.
var (
	Health_Status_name = map[int32]string{
		0: "IDLE",
		1: "BUSY",
		2: "INVALID",
	}
	Health_Status_value = map[string]int32{
		"IDLE":    0,
		"BUSY":    1,
		"INVALID": 2,
	}
)

func (x Health_Status) Enum() *Health_Status {
	p := new(Health_Status)
	*p = x
	return p
}

func (x Health_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Health_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_sudo_infra_adapter_infra_adapter_proto_enumTypes[3].Descriptor()
}

func (Health_Status) Type() protoreflect.EnumType {
	return &file_sudo_infra_adapter_infra_adapter_proto_enumTypes[3]
}

func (x Health_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Health_Status.Descriptor instead.
func (Health_Status) EnumDescriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{6, 0}
}

type OperatorMachine_Status int32

const (
	OperatorMachine_UNKNOWN_STATUS OperatorMachine_Status = 0
	OperatorMachine_IDLE           OperatorMachine_Status = 1
	OperatorMachine_RESERVED       OperatorMachine_Status = 2
	OperatorMachine_BUSY           OperatorMachine_Status = 3
	OperatorMachine_DEAD           OperatorMachine_Status = 4
)

// Enum value maps for OperatorMachine_Status.
var (
	OperatorMachine_Status_name = map[int32]string{
		0: "UNKNOWN_STATUS",
		1: "IDLE",
		2: "RESERVED",
		3: "BUSY",
		4: "DEAD",
	}
	OperatorMachine_Status_value = map[string]int32{
		"UNKNOWN_STATUS": 0,
		"IDLE":           1,
		"RESERVED":       2,
		"BUSY":           3,
		"DEAD":           4,
	}
)

func (x OperatorMachine_Status) Enum() *OperatorMachine_Status {
	p := new(OperatorMachine_Status)
	*p = x
	return p
}

func (x OperatorMachine_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OperatorMachine_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_sudo_infra_adapter_infra_adapter_proto_enumTypes[4].Descriptor()
}

func (OperatorMachine_Status) Type() protoreflect.EnumType {
	return &file_sudo_infra_adapter_infra_adapter_proto_enumTypes[4]
}

func (x OperatorMachine_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OperatorMachine_Status.Descriptor instead.
func (OperatorMachine_Status) EnumDescriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{7, 0}
}

type RevokeBlockResponse_Code int32

const (
	RevokeBlockResponse_SUCCESS   RevokeBlockResponse_Code = 0
	RevokeBlockResponse_FAILED    RevokeBlockResponse_Code = 1
	RevokeBlockResponse_NOT_EXIST RevokeBlockResponse_Code = 2
)

// Enum value maps for RevokeBlockResponse_Code.
var (
	RevokeBlockResponse_Code_name = map[int32]string{
		0: "SUCCESS",
		1: "FAILED",
		2: "NOT_EXIST",
	}
	RevokeBlockResponse_Code_value = map[string]int32{
		"SUCCESS":   0,
		"FAILED":    1,
		"NOT_EXIST": 2,
	}
)

func (x RevokeBlockResponse_Code) Enum() *RevokeBlockResponse_Code {
	p := new(RevokeBlockResponse_Code)
	*p = x
	return p
}

func (x RevokeBlockResponse_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RevokeBlockResponse_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_sudo_infra_adapter_infra_adapter_proto_enumTypes[5].Descriptor()
}

func (RevokeBlockResponse_Code) Type() protoreflect.EnumType {
	return &file_sudo_infra_adapter_infra_adapter_proto_enumTypes[5]
}

func (x RevokeBlockResponse_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RevokeBlockResponse_Code.Descriptor instead.
func (RevokeBlockResponse_Code) EnumDescriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{24, 0}
}

type UpdateProgressRequest_Category int32

const (
	UpdateProgressRequest_GENERAL     UpdateProgressRequest_Category = 0
	UpdateProgressRequest_INPUT       UpdateProgressRequest_Category = 1
	UpdateProgressRequest_OUTPUT      UpdateProgressRequest_Category = 2
	UpdateProgressRequest_COMPUTATION UpdateProgressRequest_Category = 3
	UpdateProgressRequest_ERROR       UpdateProgressRequest_Category = 4
)

// Enum value maps for UpdateProgressRequest_Category.
var (
	UpdateProgressRequest_Category_name = map[int32]string{
		0: "GENERAL",
		1: "INPUT",
		2: "OUTPUT",
		3: "COMPUTATION",
		4: "ERROR",
	}
	UpdateProgressRequest_Category_value = map[string]int32{
		"GENERAL":     0,
		"INPUT":       1,
		"OUTPUT":      2,
		"COMPUTATION": 3,
		"ERROR":       4,
	}
)

func (x UpdateProgressRequest_Category) Enum() *UpdateProgressRequest_Category {
	p := new(UpdateProgressRequest_Category)
	*p = x
	return p
}

func (x UpdateProgressRequest_Category) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateProgressRequest_Category) Descriptor() protoreflect.EnumDescriptor {
	return file_sudo_infra_adapter_infra_adapter_proto_enumTypes[6].Descriptor()
}

func (UpdateProgressRequest_Category) Type() protoreflect.EnumType {
	return &file_sudo_infra_adapter_infra_adapter_proto_enumTypes[6]
}

func (x UpdateProgressRequest_Category) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateProgressRequest_Category.Descriptor instead.
func (UpdateProgressRequest_Category) EnumDescriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{33, 0}
}

type CompleteStageRequest_Code int32

const (
	CompleteStageRequest_UNKNOWN        CompleteStageRequest_Code = 0
	CompleteStageRequest_SUCCESS        CompleteStageRequest_Code = 1
	CompleteStageRequest_INVALID_PARAM  CompleteStageRequest_Code = 2
	CompleteStageRequest_INTERNAL_ERROR CompleteStageRequest_Code = 3
	CompleteStageRequest_KILLED         CompleteStageRequest_Code = 4
)

// Enum value maps for CompleteStageRequest_Code.
var (
	CompleteStageRequest_Code_name = map[int32]string{
		0: "UNKNOWN",
		1: "SUCCESS",
		2: "INVALID_PARAM",
		3: "INTERNAL_ERROR",
		4: "KILLED",
	}
	CompleteStageRequest_Code_value = map[string]int32{
		"UNKNOWN":        0,
		"SUCCESS":        1,
		"INVALID_PARAM":  2,
		"INTERNAL_ERROR": 3,
		"KILLED":         4,
	}
)

func (x CompleteStageRequest_Code) Enum() *CompleteStageRequest_Code {
	p := new(CompleteStageRequest_Code)
	*p = x
	return p
}

func (x CompleteStageRequest_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CompleteStageRequest_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_sudo_infra_adapter_infra_adapter_proto_enumTypes[7].Descriptor()
}

func (CompleteStageRequest_Code) Type() protoreflect.EnumType {
	return &file_sudo_infra_adapter_infra_adapter_proto_enumTypes[7]
}

func (x CompleteStageRequest_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CompleteStageRequest_Code.Descriptor instead.
func (CompleteStageRequest_Code) EnumDescriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{34, 0}
}

type BlockStatus_State int32

const (
	BlockStatus_RUNNING             BlockStatus_State = 0
	BlockStatus_SUCCEEDED           BlockStatus_State = 1
	BlockStatus_ERROR               BlockStatus_State = 2
	BlockStatus_CANCELED            BlockStatus_State = 3
	BlockStatus_UNKNOWN             BlockStatus_State = 4
	BlockStatus_INVALID_PARAM_ERROR BlockStatus_State = 5
)

// Enum value maps for BlockStatus_State.
var (
	BlockStatus_State_name = map[int32]string{
		0: "RUNNING",
		1: "SUCCEEDED",
		2: "ERROR",
		3: "CANCELED",
		4: "UNKNOWN",
		5: "INVALID_PARAM_ERROR",
	}
	BlockStatus_State_value = map[string]int32{
		"RUNNING":             0,
		"SUCCEEDED":           1,
		"ERROR":               2,
		"CANCELED":            3,
		"UNKNOWN":             4,
		"INVALID_PARAM_ERROR": 5,
	}
)

func (x BlockStatus_State) Enum() *BlockStatus_State {
	p := new(BlockStatus_State)
	*p = x
	return p
}

func (x BlockStatus_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BlockStatus_State) Descriptor() protoreflect.EnumDescriptor {
	return file_sudo_infra_adapter_infra_adapter_proto_enumTypes[8].Descriptor()
}

func (BlockStatus_State) Type() protoreflect.EnumType {
	return &file_sudo_infra_adapter_infra_adapter_proto_enumTypes[8]
}

func (x BlockStatus_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BlockStatus_State.Descriptor instead.
func (BlockStatus_State) EnumDescriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{49, 0}
}

type OnlinePredictResponseItem_Status int32

const (
	OnlinePredictResponseItem_SUCCESS OnlinePredictResponseItem_Status = 0
	// 所有party都没有数据, 无法进行任何有意义的预测
	// 此时result是空的
	OnlinePredictResponseItem_NOT_FOUND_ANYWHERE OnlinePredictResponseItem_Status = 1
	OnlinePredictResponseItem_PARTIAL            OnlinePredictResponseItem_Status = 2
)

// Enum value maps for OnlinePredictResponseItem_Status.
var (
	OnlinePredictResponseItem_Status_name = map[int32]string{
		0: "SUCCESS",
		1: "NOT_FOUND_ANYWHERE",
		2: "PARTIAL",
	}
	OnlinePredictResponseItem_Status_value = map[string]int32{
		"SUCCESS":            0,
		"NOT_FOUND_ANYWHERE": 1,
		"PARTIAL":            2,
	}
)

func (x OnlinePredictResponseItem_Status) Enum() *OnlinePredictResponseItem_Status {
	p := new(OnlinePredictResponseItem_Status)
	*p = x
	return p
}

func (x OnlinePredictResponseItem_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OnlinePredictResponseItem_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_sudo_infra_adapter_infra_adapter_proto_enumTypes[9].Descriptor()
}

func (OnlinePredictResponseItem_Status) Type() protoreflect.EnumType {
	return &file_sudo_infra_adapter_infra_adapter_proto_enumTypes[9]
}

func (x OnlinePredictResponseItem_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OnlinePredictResponseItem_Status.Descriptor instead.
func (OnlinePredictResponseItem_Status) EnumDescriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{64, 0}
}

type PartyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InnerId uint64 `protobuf:"varint,1,opt,name=inner_id,json=innerId,proto3" json:"inner_id,omitempty"`
	PartyId string `protobuf:"bytes,2,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	// entry point (nginx) to connect to operators via WebSocket
	OpService string `protobuf:"bytes,4,opt,name=op_service,json=opService,proto3" json:"op_service,omitempty"`
	// host of the actual (reserved) operator master to process the stage
	OpHost string `protobuf:"bytes,5,opt,name=op_host,json=opHost,proto3" json:"op_host,omitempty"`
	// port of the actual (reserved) operator master to process the stage
	OpPort              uint32                      `protobuf:"varint,6,opt,name=op_port,json=opPort,proto3" json:"op_port,omitempty"`
	ResourceType        enums.Resource_Type         `protobuf:"varint,7,opt,name=resource_type,json=resourceType,proto3,enum=sudo.protobuf.enums.Resource_Type" json:"resource_type,omitempty"`
	ResourceRequirement *common.ResourceRequirement `protobuf:"bytes,8,opt,name=resource_requirement,json=resourceRequirement,proto3" json:"resource_requirement,omitempty"`
}

func (x *PartyInfo) Reset() {
	*x = PartyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyInfo) ProtoMessage() {}

func (x *PartyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyInfo.ProtoReflect.Descriptor instead.
func (*PartyInfo) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{0}
}

func (x *PartyInfo) GetInnerId() uint64 {
	if x != nil {
		return x.InnerId
	}
	return 0
}

func (x *PartyInfo) GetPartyId() string {
	if x != nil {
		return x.PartyId
	}
	return ""
}

func (x *PartyInfo) GetOpService() string {
	if x != nil {
		return x.OpService
	}
	return ""
}

func (x *PartyInfo) GetOpHost() string {
	if x != nil {
		return x.OpHost
	}
	return ""
}

func (x *PartyInfo) GetOpPort() uint32 {
	if x != nil {
		return x.OpPort
	}
	return 0
}

func (x *PartyInfo) GetResourceType() enums.Resource_Type {
	if x != nil {
		return x.ResourceType
	}
	return enums.Resource_UNKNOWN_TYPE
}

func (x *PartyInfo) GetResourceRequirement() *common.ResourceRequirement {
	if x != nil {
		return x.ResourceRequirement
	}
	return nil
}

type Block struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// task may contain many stage
	TaskId    uint64            `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Id        *BlockID          `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Operators []*OperatorConfig `protobuf:"bytes,3,rep,name=operators,proto3" json:"operators,omitempty"`
	// Operators ignore this
	Priority uint32 `protobuf:"varint,4,opt,name=priority,proto3" json:"priority,omitempty"`
	// deprecated.
	XDeprecatedPartyUriMap map[string]string `protobuf:"bytes,5,rep,name=_deprecated_party_uri_map,json=DeprecatedPartyUriMap,proto3" json:"_deprecated_party_uri_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// include resource cfg,visiable to server furnace
	PartyInfos []*PartyInfo `protobuf:"bytes,6,rep,name=party_infos,json=partyInfos,proto3" json:"party_infos,omitempty"`
	TaskName   string       `protobuf:"bytes,13,opt,name=task_name,json=taskName,proto3" json:"task_name,omitempty"` // task name, used for front end display
}

func (x *Block) Reset() {
	*x = Block{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{1}
}

func (x *Block) GetTaskId() uint64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *Block) GetId() *BlockID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Block) GetOperators() []*OperatorConfig {
	if x != nil {
		return x.Operators
	}
	return nil
}

func (x *Block) GetPriority() uint32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *Block) GetXDeprecatedPartyUriMap() map[string]string {
	if x != nil {
		return x.XDeprecatedPartyUriMap
	}
	return nil
}

func (x *Block) GetPartyInfos() []*PartyInfo {
	if x != nil {
		return x.PartyInfos
	}
	return nil
}

func (x *Block) GetTaskName() string {
	if x != nil {
		return x.TaskName
	}
	return ""
}

// CreateBlockRequest is a simple wrapper for block. its created
// when tusita calls furnace.
// it stores important information to furnace, but useless to operator
type CreateBlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Block *Block `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	// this block is created by which project
	ProjectId uint64 `protobuf:"varint,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// this block is created by which party
	OwnerPartyId string `protobuf:"bytes,3,opt,name=owner_party_id,json=ownerPartyId,proto3" json:"owner_party_id,omitempty"`
	// this block is created by which user
	OwnerUserId uint64 `protobuf:"varint,4,opt,name=owner_user_id,json=ownerUserId,proto3" json:"owner_user_id,omitempty"`
	// stage type before DSL
	OriginStageType enums.Stage_Type `protobuf:"varint,6,opt,name=origin_stage_type,json=originStageType,proto3,enum=sudo.protobuf.enums.Stage_Type" json:"origin_stage_type,omitempty"`
	// type of the job, such as model fit or predict
	JobType enums.Job_Type `protobuf:"varint,7,opt,name=job_type,json=jobType,proto3,enum=sudo.protobuf.enums.Job_Type" json:"job_type,omitempty"`
	// project name, used for front end display
	ProjectName string `protobuf:"bytes,8,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
}

func (x *CreateBlockRequest) Reset() {
	*x = CreateBlockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBlockRequest) ProtoMessage() {}

func (x *CreateBlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBlockRequest.ProtoReflect.Descriptor instead.
func (*CreateBlockRequest) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{2}
}

func (x *CreateBlockRequest) GetBlock() *Block {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *CreateBlockRequest) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *CreateBlockRequest) GetOwnerPartyId() string {
	if x != nil {
		return x.OwnerPartyId
	}
	return ""
}

func (x *CreateBlockRequest) GetOwnerUserId() uint64 {
	if x != nil {
		return x.OwnerUserId
	}
	return 0
}

func (x *CreateBlockRequest) GetOriginStageType() enums.Stage_Type {
	if x != nil {
		return x.OriginStageType
	}
	return enums.Stage_unknown
}

func (x *CreateBlockRequest) GetJobType() enums.Job_Type {
	if x != nil {
		return x.JobType
	}
	return enums.Job_UNKNOWN_TYPE
}

func (x *CreateBlockRequest) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

type OperatorConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperatorType string `protobuf:"bytes,1,opt,name=operator_type,json=operatorType,proto3" json:"operator_type,omitempty"`
	// json
	GlobalConfig string `protobuf:"bytes,2,opt,name=global_config,json=globalConfig,proto3" json:"global_config,omitempty"`
	// json
	PartyConfig string                                 `protobuf:"bytes,3,opt,name=party_config,json=partyConfig,proto3" json:"party_config,omitempty"`
	Inputs      map[string]*infra_adapter.DataLocation `protobuf:"bytes,4,rep,name=inputs,proto3" json:"inputs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Outputs     map[string]*infra_adapter.DataLocation `protobuf:"bytes,5,rep,name=outputs,proto3" json:"outputs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// deprecated
	//
	// Deprecated: Do not use.
	Parties []string `protobuf:"bytes,6,rep,name=parties,proto3" json:"parties,omitempty"`
	// only visiable to client, indicates which servers to connect
	// client will find destination url through party_infos,
	// the client (inner_id=0) is always included, [0, a, b, c ...]
	PartyInnerIds []uint64 `protobuf:"varint,7,rep,packed,name=party_inner_ids,json=partyInnerIds,proto3" json:"party_inner_ids,omitempty"`
	// used in PaaS, since operator_type_str in operator is different with it in PaaS
	OpTypeEnum enums.Stage_Type `protobuf:"varint,8,opt,name=op_type_enum,json=opTypeEnum,proto3,enum=sudo.protobuf.enums.Stage_Type" json:"op_type_enum,omitempty"`
	Version    *Version         `protobuf:"bytes,9,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *OperatorConfig) Reset() {
	*x = OperatorConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperatorConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperatorConfig) ProtoMessage() {}

func (x *OperatorConfig) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperatorConfig.ProtoReflect.Descriptor instead.
func (*OperatorConfig) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{3}
}

func (x *OperatorConfig) GetOperatorType() string {
	if x != nil {
		return x.OperatorType
	}
	return ""
}

func (x *OperatorConfig) GetGlobalConfig() string {
	if x != nil {
		return x.GlobalConfig
	}
	return ""
}

func (x *OperatorConfig) GetPartyConfig() string {
	if x != nil {
		return x.PartyConfig
	}
	return ""
}

func (x *OperatorConfig) GetInputs() map[string]*infra_adapter.DataLocation {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *OperatorConfig) GetOutputs() map[string]*infra_adapter.DataLocation {
	if x != nil {
		return x.Outputs
	}
	return nil
}

// Deprecated: Do not use.
func (x *OperatorConfig) GetParties() []string {
	if x != nil {
		return x.Parties
	}
	return nil
}

func (x *OperatorConfig) GetPartyInnerIds() []uint64 {
	if x != nil {
		return x.PartyInnerIds
	}
	return nil
}

func (x *OperatorConfig) GetOpTypeEnum() enums.Stage_Type {
	if x != nil {
		return x.OpTypeEnum
	}
	return enums.Stage_unknown
}

func (x *OperatorConfig) GetVersion() *Version {
	if x != nil {
		return x.Version
	}
	return nil
}

type BlockID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StageId       uint64 `protobuf:"varint,1,opt,name=stage_id,json=stageId,proto3" json:"stage_id,omitempty"`
	InnerId       uint64 `protobuf:"varint,2,opt,name=inner_id,json=innerId,proto3" json:"inner_id,omitempty"`
	CoordinatorId string `protobuf:"bytes,3,opt,name=coordinator_id,json=coordinatorId,proto3" json:"coordinator_id,omitempty"`
}

func (x *BlockID) Reset() {
	*x = BlockID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockID) ProtoMessage() {}

func (x *BlockID) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockID.ProtoReflect.Descriptor instead.
func (*BlockID) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{4}
}

func (x *BlockID) GetStageId() uint64 {
	if x != nil {
		return x.StageId
	}
	return 0
}

func (x *BlockID) GetInnerId() uint64 {
	if x != nil {
		return x.InnerId
	}
	return 0
}

func (x *BlockID) GetCoordinatorId() string {
	if x != nil {
		return x.CoordinatorId
	}
	return ""
}

type KillResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code KillResult_Code `protobuf:"varint,1,opt,name=code,proto3,enum=sudo.protobuf.infra_adapter.KillResult_Code" json:"code,omitempty"`
}

func (x *KillResult) Reset() {
	*x = KillResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KillResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KillResult) ProtoMessage() {}

func (x *KillResult) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KillResult.ProtoReflect.Descriptor instead.
func (*KillResult) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{5}
}

func (x *KillResult) GetCode() KillResult_Code {
	if x != nil {
		return x.Code
	}
	return KillResult_SUCCESS
}

type Health struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status Health_Status `protobuf:"varint,1,opt,name=status,proto3,enum=sudo.protobuf.infra_adapter.Health_Status" json:"status,omitempty"`
}

func (x *Health) Reset() {
	*x = Health{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Health) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Health) ProtoMessage() {}

func (x *Health) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Health.ProtoReflect.Descriptor instead.
func (*Health) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{6}
}

func (x *Health) GetStatus() Health_Status {
	if x != nil {
		return x.Status
	}
	return Health_IDLE
}

type OperatorMachine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OperatorMachine) Reset() {
	*x = OperatorMachine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperatorMachine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperatorMachine) ProtoMessage() {}

func (x *OperatorMachine) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperatorMachine.ProtoReflect.Descriptor instead.
func (*OperatorMachine) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{7}
}

type StageList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []*BlockID `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *StageList) Reset() {
	*x = StageList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StageList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StageList) ProtoMessage() {}

func (x *StageList) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StageList.ProtoReflect.Descriptor instead.
func (*StageList) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{8}
}

func (x *StageList) GetIds() []*BlockID {
	if x != nil {
		return x.Ids
	}
	return nil
}

type ShowDatabasesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatasourceName string                                   `protobuf:"bytes,1,opt,name=datasource_name,json=datasourceName,proto3" json:"datasource_name,omitempty"`
	Connection     *infra_adapter.DataLocation_DBConnection `protobuf:"bytes,2,opt,name=connection,proto3" json:"connection,omitempty"`
}

func (x *ShowDatabasesRequest) Reset() {
	*x = ShowDatabasesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowDatabasesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowDatabasesRequest) ProtoMessage() {}

func (x *ShowDatabasesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowDatabasesRequest.ProtoReflect.Descriptor instead.
func (*ShowDatabasesRequest) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{9}
}

func (x *ShowDatabasesRequest) GetDatasourceName() string {
	if x != nil {
		return x.DatasourceName
	}
	return ""
}

func (x *ShowDatabasesRequest) GetConnection() *infra_adapter.DataLocation_DBConnection {
	if x != nil {
		return x.Connection
	}
	return nil
}

type ShowTablesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatasourceName string                                   `protobuf:"bytes,1,opt,name=datasource_name,json=datasourceName,proto3" json:"datasource_name,omitempty"`
	Database       string                                   `protobuf:"bytes,2,opt,name=database,proto3" json:"database,omitempty"`
	Connection     *infra_adapter.DataLocation_DBConnection `protobuf:"bytes,3,opt,name=connection,proto3" json:"connection,omitempty"`
}

func (x *ShowTablesRequest) Reset() {
	*x = ShowTablesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowTablesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowTablesRequest) ProtoMessage() {}

func (x *ShowTablesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowTablesRequest.ProtoReflect.Descriptor instead.
func (*ShowTablesRequest) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{10}
}

func (x *ShowTablesRequest) GetDatasourceName() string {
	if x != nil {
		return x.DatasourceName
	}
	return ""
}

func (x *ShowTablesRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *ShowTablesRequest) GetConnection() *infra_adapter.DataLocation_DBConnection {
	if x != nil {
		return x.Connection
	}
	return nil
}

type DescTableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatasourceName string                                   `protobuf:"bytes,1,opt,name=datasource_name,json=datasourceName,proto3" json:"datasource_name,omitempty"`
	Database       string                                   `protobuf:"bytes,2,opt,name=database,proto3" json:"database,omitempty"`
	Table          string                                   `protobuf:"bytes,3,opt,name=table,proto3" json:"table,omitempty"`
	FetchRowCount  bool                                     `protobuf:"varint,4,opt,name=fetch_row_count,json=fetchRowCount,proto3" json:"fetch_row_count,omitempty"`
	Connection     *infra_adapter.DataLocation_DBConnection `protobuf:"bytes,5,opt,name=connection,proto3" json:"connection,omitempty"`
}

func (x *DescTableRequest) Reset() {
	*x = DescTableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescTableRequest) ProtoMessage() {}

func (x *DescTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescTableRequest.ProtoReflect.Descriptor instead.
func (*DescTableRequest) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{11}
}

func (x *DescTableRequest) GetDatasourceName() string {
	if x != nil {
		return x.DatasourceName
	}
	return ""
}

func (x *DescTableRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *DescTableRequest) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *DescTableRequest) GetFetchRowCount() bool {
	if x != nil {
		return x.FetchRowCount
	}
	return false
}

func (x *DescTableRequest) GetConnection() *infra_adapter.DataLocation_DBConnection {
	if x != nil {
		return x.Connection
	}
	return nil
}

type WalkDirRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatasourceName string `protobuf:"bytes,1,opt,name=datasource_name,json=datasourceName,proto3" json:"datasource_name,omitempty"`
	// 文件路径
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *WalkDirRequest) Reset() {
	*x = WalkDirRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalkDirRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalkDirRequest) ProtoMessage() {}

func (x *WalkDirRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalkDirRequest.ProtoReflect.Descriptor instead.
func (*WalkDirRequest) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{12}
}

func (x *WalkDirRequest) GetDatasourceName() string {
	if x != nil {
		return x.DatasourceName
	}
	return ""
}

func (x *WalkDirRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type DescFileNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: use file instead
	//
	// Deprecated: Do not use.
	DatasourceName string `protobuf:"bytes,1,opt,name=datasource_name,json=datasourceName,proto3" json:"datasource_name,omitempty"`
	// Deprecated: use file instead
	//
	// Deprecated: Do not use.
	Filepath string `protobuf:"bytes,2,opt,name=filepath,proto3" json:"filepath,omitempty"`
	// 对象文件的具体信息
	File *infra_adapter.DataLocation_File `protobuf:"bytes,4,opt,name=file,proto3" json:"file,omitempty"`
	// it could be extremely slow for large file, false by default
	NeedRowCount bool `protobuf:"varint,3,opt,name=need_row_count,json=needRowCount,proto3" json:"need_row_count,omitempty"`
}

func (x *DescFileNodeRequest) Reset() {
	*x = DescFileNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescFileNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescFileNodeRequest) ProtoMessage() {}

func (x *DescFileNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescFileNodeRequest.ProtoReflect.Descriptor instead.
func (*DescFileNodeRequest) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{13}
}

// Deprecated: Do not use.
func (x *DescFileNodeRequest) GetDatasourceName() string {
	if x != nil {
		return x.DatasourceName
	}
	return ""
}

// Deprecated: Do not use.
func (x *DescFileNodeRequest) GetFilepath() string {
	if x != nil {
		return x.Filepath
	}
	return ""
}

func (x *DescFileNodeRequest) GetFile() *infra_adapter.DataLocation_File {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *DescFileNodeRequest) GetNeedRowCount() bool {
	if x != nil {
		return x.NeedRowCount
	}
	return false
}

type ShowDatabasesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Databases []string `protobuf:"bytes,1,rep,name=databases,proto3" json:"databases,omitempty"`
}

func (x *ShowDatabasesResponse) Reset() {
	*x = ShowDatabasesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowDatabasesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowDatabasesResponse) ProtoMessage() {}

func (x *ShowDatabasesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowDatabasesResponse.ProtoReflect.Descriptor instead.
func (*ShowDatabasesResponse) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{14}
}

func (x *ShowDatabasesResponse) GetDatabases() []string {
	if x != nil {
		return x.Databases
	}
	return nil
}

type ShowTablesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tables []string `protobuf:"bytes,1,rep,name=tables,proto3" json:"tables,omitempty"`
}

func (x *ShowTablesResponse) Reset() {
	*x = ShowTablesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowTablesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowTablesResponse) ProtoMessage() {}

func (x *ShowTablesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowTablesResponse.ProtoReflect.Descriptor instead.
func (*ShowTablesResponse) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{15}
}

func (x *ShowTablesResponse) GetTables() []string {
	if x != nil {
		return x.Tables
	}
	return nil
}

type DescTableResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []*DescTableResponse_TableFieldMetaInfo `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
	// row sample
	Samples  []string `protobuf:"bytes,2,rep,name=samples,proto3" json:"samples,omitempty"`
	RowCount uint64   `protobuf:"varint,3,opt,name=row_count,json=rowCount,proto3" json:"row_count,omitempty"`
}

func (x *DescTableResponse) Reset() {
	*x = DescTableResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescTableResponse) ProtoMessage() {}

func (x *DescTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescTableResponse.ProtoReflect.Descriptor instead.
func (*DescTableResponse) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{16}
}

func (x *DescTableResponse) GetFields() []*DescTableResponse_TableFieldMetaInfo {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *DescTableResponse) GetSamples() []string {
	if x != nil {
		return x.Samples
	}
	return nil
}

func (x *DescTableResponse) GetRowCount() uint64 {
	if x != nil {
		return x.RowCount
	}
	return 0
}

type WalkDirResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 元数据信息
	Nodes []*WalkDirResponse_NodeMetaInfo `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *WalkDirResponse) Reset() {
	*x = WalkDirResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalkDirResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalkDirResponse) ProtoMessage() {}

func (x *WalkDirResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalkDirResponse.ProtoReflect.Descriptor instead.
func (*WalkDirResponse) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{17}
}

func (x *WalkDirResponse) GetNodes() []*WalkDirResponse_NodeMetaInfo {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type DescFileNodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename string `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	// 文件大小，单位为字节。
	Size uint64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	// 10位数Unix时间戳
	LastModified uint64 `protobuf:"varint,3,opt,name=last_modified,json=lastModified,proto3" json:"last_modified,omitempty"`
	// 文件的第一行
	Headers []string `protobuf:"bytes,4,rep,name=headers,proto3" json:"headers,omitempty"`
	// 只有当请求中`need_row_count`为`true`时才会返回。
	RowCount uint64 `protobuf:"varint,5,opt,name=row_count,json=rowCount,proto3" json:"row_count,omitempty"`
}

func (x *DescFileNodeResponse) Reset() {
	*x = DescFileNodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescFileNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescFileNodeResponse) ProtoMessage() {}

func (x *DescFileNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescFileNodeResponse.ProtoReflect.Descriptor instead.
func (*DescFileNodeResponse) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{18}
}

func (x *DescFileNodeResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *DescFileNodeResponse) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *DescFileNodeResponse) GetLastModified() uint64 {
	if x != nil {
		return x.LastModified
	}
	return 0
}

func (x *DescFileNodeResponse) GetHeaders() []string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *DescFileNodeResponse) GetRowCount() uint64 {
	if x != nil {
		return x.RowCount
	}
	return 0
}

type GetRunningsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetRunningsRequest) Reset() {
	*x = GetRunningsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRunningsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRunningsRequest) ProtoMessage() {}

func (x *GetRunningsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRunningsRequest.ProtoReflect.Descriptor instead.
func (*GetRunningsRequest) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{19}
}

type GetRunningsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []*BlockID `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *GetRunningsResponse) Reset() {
	*x = GetRunningsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRunningsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRunningsResponse) ProtoMessage() {}

func (x *GetRunningsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRunningsResponse.ProtoReflect.Descriptor instead.
func (*GetRunningsResponse) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{20}
}

func (x *GetRunningsResponse) GetIds() []*BlockID {
	if x != nil {
		return x.Ids
	}
	return nil
}

type LaunchBlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Block *Block `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
}

func (x *LaunchBlockRequest) Reset() {
	*x = LaunchBlockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LaunchBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LaunchBlockRequest) ProtoMessage() {}

func (x *LaunchBlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LaunchBlockRequest.ProtoReflect.Descriptor instead.
func (*LaunchBlockRequest) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{21}
}

func (x *LaunchBlockRequest) GetBlock() *Block {
	if x != nil {
		return x.Block
	}
	return nil
}

type LaunchBlockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LaunchBlockResponse) Reset() {
	*x = LaunchBlockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LaunchBlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LaunchBlockResponse) ProtoMessage() {}

func (x *LaunchBlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LaunchBlockResponse.ProtoReflect.Descriptor instead.
func (*LaunchBlockResponse) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{22}
}

type RevokeBlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockId *BlockID `protobuf:"bytes,1,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
}

func (x *RevokeBlockRequest) Reset() {
	*x = RevokeBlockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeBlockRequest) ProtoMessage() {}

func (x *RevokeBlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeBlockRequest.ProtoReflect.Descriptor instead.
func (*RevokeBlockRequest) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{23}
}

func (x *RevokeBlockRequest) GetBlockId() *BlockID {
	if x != nil {
		return x.BlockId
	}
	return nil
}

type RevokeBlockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code RevokeBlockResponse_Code `protobuf:"varint,1,opt,name=code,proto3,enum=sudo.protobuf.infra_adapter.RevokeBlockResponse_Code" json:"code,omitempty"`
}

func (x *RevokeBlockResponse) Reset() {
	*x = RevokeBlockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeBlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeBlockResponse) ProtoMessage() {}

func (x *RevokeBlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeBlockResponse.ProtoReflect.Descriptor instead.
func (*RevokeBlockResponse) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{24}
}

func (x *RevokeBlockResponse) GetCode() RevokeBlockResponse_Code {
	if x != nil {
		return x.Code
	}
	return RevokeBlockResponse_SUCCESS
}

type Chunk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chunk []byte `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
}

func (x *Chunk) Reset() {
	*x = Chunk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Chunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chunk) ProtoMessage() {}

func (x *Chunk) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chunk.ProtoReflect.Descriptor instead.
func (*Chunk) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{25}
}

func (x *Chunk) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

type ReadFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: use file instead
	//
	// Deprecated: Do not use.
	FilePath string `protobuf:"bytes,1,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	// Deprecated: Do not use.
	DatasourceName string                           `protobuf:"bytes,2,opt,name=datasource_name,json=datasourceName,proto3" json:"datasource_name,omitempty"`
	File           *infra_adapter.DataLocation_File `protobuf:"bytes,5,opt,name=file,proto3" json:"file,omitempty"`
	PageSize       uint32                           `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageNum        uint64                           `protobuf:"varint,4,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
}

func (x *ReadFileRequest) Reset() {
	*x = ReadFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadFileRequest) ProtoMessage() {}

func (x *ReadFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadFileRequest.ProtoReflect.Descriptor instead.
func (*ReadFileRequest) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{26}
}

// Deprecated: Do not use.
func (x *ReadFileRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

// Deprecated: Do not use.
func (x *ReadFileRequest) GetDatasourceName() string {
	if x != nil {
		return x.DatasourceName
	}
	return ""
}

func (x *ReadFileRequest) GetFile() *infra_adapter.DataLocation_File {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *ReadFileRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ReadFileRequest) GetPageNum() uint64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

type ReadFileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Columns []*SqlColumn `protobuf:"bytes,1,rep,name=columns,proto3" json:"columns,omitempty"`
}

func (x *ReadFileResponse) Reset() {
	*x = ReadFileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadFileResponse) ProtoMessage() {}

func (x *ReadFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadFileResponse.ProtoReflect.Descriptor instead.
func (*ReadFileResponse) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{27}
}

func (x *ReadFileResponse) GetColumns() []*SqlColumn {
	if x != nil {
		return x.Columns
	}
	return nil
}

type RemoveResourcesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Locations []*infra_adapter.DataLocation `protobuf:"bytes,1,rep,name=locations,proto3" json:"locations,omitempty"`
}

func (x *RemoveResourcesRequest) Reset() {
	*x = RemoveResourcesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveResourcesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveResourcesRequest) ProtoMessage() {}

func (x *RemoveResourcesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveResourcesRequest.ProtoReflect.Descriptor instead.
func (*RemoveResourcesRequest) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{28}
}

func (x *RemoveResourcesRequest) GetLocations() []*infra_adapter.DataLocation {
	if x != nil {
		return x.Locations
	}
	return nil
}

type RemoveResourcesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response []*SingleRemoveResourceResponse `protobuf:"bytes,1,rep,name=response,proto3" json:"response,omitempty"`
}

func (x *RemoveResourcesResponse) Reset() {
	*x = RemoveResourcesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveResourcesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveResourcesResponse) ProtoMessage() {}

func (x *RemoveResourcesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveResourcesResponse.ProtoReflect.Descriptor instead.
func (*RemoveResourcesResponse) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{29}
}

func (x *RemoveResourcesResponse) GetResponse() []*SingleRemoveResourceResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type SingleRemoveResourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SingleRemoveResourceResponse) Reset() {
	*x = SingleRemoveResourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingleRemoveResourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleRemoveResourceResponse) ProtoMessage() {}

func (x *SingleRemoveResourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleRemoveResourceResponse.ProtoReflect.Descriptor instead.
func (*SingleRemoveResourceResponse) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{30}
}

func (x *SingleRemoveResourceResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SingleRemoveResourceResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Furnace service requests & responses
type GetStageConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *BlockID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetStageConfigRequest) Reset() {
	*x = GetStageConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStageConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStageConfigRequest) ProtoMessage() {}

func (x *GetStageConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStageConfigRequest.ProtoReflect.Descriptor instead.
func (*GetStageConfigRequest) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{31}
}

func (x *GetStageConfigRequest) GetId() *BlockID {
	if x != nil {
		return x.Id
	}
	return nil
}

type GetStageConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *Block `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *GetStageConfigResponse) Reset() {
	*x = GetStageConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStageConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStageConfigResponse) ProtoMessage() {}

func (x *GetStageConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStageConfigResponse.ProtoReflect.Descriptor instead.
func (*GetStageConfigResponse) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{32}
}

func (x *GetStageConfigResponse) GetConfig() *Block {
	if x != nil {
		return x.Config
	}
	return nil
}

type UpdateProgressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       *BlockID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Progress string   `protobuf:"bytes,2,opt,name=progress,proto3" json:"progress,omitempty"`
	// Deprecated: Do not use.
	UsedTime uint64                         `protobuf:"varint,3,opt,name=used_time,json=usedTime,proto3" json:"used_time,omitempty"`
	Category UpdateProgressRequest_Category `protobuf:"varint,4,opt,name=category,proto3,enum=sudo.protobuf.infra_adapter.UpdateProgressRequest_Category" json:"category,omitempty"`
}

func (x *UpdateProgressRequest) Reset() {
	*x = UpdateProgressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProgressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProgressRequest) ProtoMessage() {}

func (x *UpdateProgressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProgressRequest.ProtoReflect.Descriptor instead.
func (*UpdateProgressRequest) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{33}
}

func (x *UpdateProgressRequest) GetId() *BlockID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *UpdateProgressRequest) GetProgress() string {
	if x != nil {
		return x.Progress
	}
	return ""
}

// Deprecated: Do not use.
func (x *UpdateProgressRequest) GetUsedTime() uint64 {
	if x != nil {
		return x.UsedTime
	}
	return 0
}

func (x *UpdateProgressRequest) GetCategory() UpdateProgressRequest_Category {
	if x != nil {
		return x.Category
	}
	return UpdateProgressRequest_GENERAL
}

type CompleteStageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      *BlockID                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Code    CompleteStageRequest_Code `protobuf:"varint,2,opt,name=code,proto3,enum=sudo.protobuf.infra_adapter.CompleteStageRequest_Code" json:"code,omitempty"`
	Message string                    `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CompleteStageRequest) Reset() {
	*x = CompleteStageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteStageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteStageRequest) ProtoMessage() {}

func (x *CompleteStageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteStageRequest.ProtoReflect.Descriptor instead.
func (*CompleteStageRequest) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{34}
}

func (x *CompleteStageRequest) GetId() *BlockID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *CompleteStageRequest) GetCode() CompleteStageRequest_Code {
	if x != nil {
		return x.Code
	}
	return CompleteStageRequest_UNKNOWN
}

func (x *CompleteStageRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CompleteSlaveStageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChildStageId uint64 `protobuf:"varint,1,opt,name=child_stage_id,json=childStageId,proto3" json:"child_stage_id,omitempty"`
}

func (x *CompleteSlaveStageRequest) Reset() {
	*x = CompleteSlaveStageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteSlaveStageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteSlaveStageRequest) ProtoMessage() {}

func (x *CompleteSlaveStageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteSlaveStageRequest.ProtoReflect.Descriptor instead.
func (*CompleteSlaveStageRequest) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{35}
}

func (x *CompleteSlaveStageRequest) GetChildStageId() uint64 {
	if x != nil {
		return x.ChildStageId
	}
	return 0
}

type UpdateMachineStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperatorId uint64                 `protobuf:"varint,1,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`
	Status     OperatorMachine_Status `protobuf:"varint,2,opt,name=status,proto3,enum=sudo.protobuf.infra_adapter.OperatorMachine_Status" json:"status,omitempty"`
}

func (x *UpdateMachineStatusRequest) Reset() {
	*x = UpdateMachineStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMachineStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMachineStatusRequest) ProtoMessage() {}

func (x *UpdateMachineStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMachineStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateMachineStatusRequest) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{36}
}

func (x *UpdateMachineStatusRequest) GetOperatorId() uint64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *UpdateMachineStatusRequest) GetStatus() OperatorMachine_Status {
	if x != nil {
		return x.Status
	}
	return OperatorMachine_UNKNOWN_STATUS
}

type Version struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Major uint32 `protobuf:"varint,1,opt,name=major,proto3" json:"major,omitempty"`
	Minor uint32 `protobuf:"varint,2,opt,name=minor,proto3" json:"minor,omitempty"`
	Patch uint32 `protobuf:"varint,3,opt,name=patch,proto3" json:"patch,omitempty"`
}

func (x *Version) Reset() {
	*x = Version{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Version) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Version) ProtoMessage() {}

func (x *Version) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Version.ProtoReflect.Descriptor instead.
func (*Version) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{37}
}

func (x *Version) GetMajor() uint32 {
	if x != nil {
		return x.Major
	}
	return 0
}

func (x *Version) GetMinor() uint32 {
	if x != nil {
		return x.Minor
	}
	return 0
}

func (x *Version) GetPatch() uint32 {
	if x != nil {
		return x.Patch
	}
	return 0
}

type OperatorSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// string author = 2;
	Version *Version `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	// contains tags/task_type/config_schema/display_name etc.
	Schema string `protobuf:"bytes,4,opt,name=schema,proto3" json:"schema,omitempty"`
	// unique id of operator
	// when defining operator, if it's legacy operator (in enum), it can be 0, furnace can find corresponding id
	// by stage type in enum; if it's newly added operator, we need to ensure it's unique.
	Id uint32 `protobuf:"varint,5,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *OperatorSchema) Reset() {
	*x = OperatorSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperatorSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperatorSchema) ProtoMessage() {}

func (x *OperatorSchema) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperatorSchema.ProtoReflect.Descriptor instead.
func (*OperatorSchema) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{38}
}

func (x *OperatorSchema) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OperatorSchema) GetVersion() *Version {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *OperatorSchema) GetSchema() string {
	if x != nil {
		return x.Schema
	}
	return ""
}

func (x *OperatorSchema) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RegisterMachineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host      string            `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	GrpcPort  uint32            `protobuf:"varint,2,opt,name=grpc_port,json=grpcPort,proto3" json:"grpc_port,omitempty"`
	WsPort    uint32            `protobuf:"varint,3,opt,name=ws_port,json=wsPort,proto3" json:"ws_port,omitempty"`
	Operators []*OperatorSchema `protobuf:"bytes,4,rep,name=operators,proto3" json:"operators,omitempty"`
}

func (x *RegisterMachineRequest) Reset() {
	*x = RegisterMachineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterMachineRequest) ProtoMessage() {}

func (x *RegisterMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterMachineRequest.ProtoReflect.Descriptor instead.
func (*RegisterMachineRequest) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{39}
}

func (x *RegisterMachineRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *RegisterMachineRequest) GetGrpcPort() uint32 {
	if x != nil {
		return x.GrpcPort
	}
	return 0
}

func (x *RegisterMachineRequest) GetWsPort() uint32 {
	if x != nil {
		return x.WsPort
	}
	return 0
}

func (x *RegisterMachineRequest) GetOperators() []*OperatorSchema {
	if x != nil {
		return x.Operators
	}
	return nil
}

type RegisterMachineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperatorId uint64 `protobuf:"varint,1,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`
}

func (x *RegisterMachineResponse) Reset() {
	*x = RegisterMachineResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterMachineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterMachineResponse) ProtoMessage() {}

func (x *RegisterMachineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterMachineResponse.ProtoReflect.Descriptor instead.
func (*RegisterMachineResponse) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{40}
}

func (x *RegisterMachineResponse) GetOperatorId() uint64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

type RunSqlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query          string                                   `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	DatasourceName string                                   `protobuf:"bytes,2,opt,name=datasource_name,json=datasourceName,proto3" json:"datasource_name,omitempty"`
	Connection     *infra_adapter.DataLocation_DBConnection `protobuf:"bytes,3,opt,name=connection,proto3" json:"connection,omitempty"`
}

func (x *RunSqlRequest) Reset() {
	*x = RunSqlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunSqlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunSqlRequest) ProtoMessage() {}

func (x *RunSqlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunSqlRequest.ProtoReflect.Descriptor instead.
func (*RunSqlRequest) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{41}
}

func (x *RunSqlRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *RunSqlRequest) GetDatasourceName() string {
	if x != nil {
		return x.DatasourceName
	}
	return ""
}

func (x *RunSqlRequest) GetConnection() *infra_adapter.DataLocation_DBConnection {
	if x != nil {
		return x.Connection
	}
	return nil
}

type SqlColumn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ColumnNames string   `protobuf:"bytes,1,opt,name=column_names,json=columnNames,proto3" json:"column_names,omitempty"`
	Data        []string `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *SqlColumn) Reset() {
	*x = SqlColumn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SqlColumn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SqlColumn) ProtoMessage() {}

func (x *SqlColumn) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SqlColumn.ProtoReflect.Descriptor instead.
func (*SqlColumn) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{42}
}

func (x *SqlColumn) GetColumnNames() string {
	if x != nil {
		return x.ColumnNames
	}
	return ""
}

func (x *SqlColumn) GetData() []string {
	if x != nil {
		return x.Data
	}
	return nil
}

type RunSqlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Columns []*SqlColumn `protobuf:"bytes,1,rep,name=columns,proto3" json:"columns,omitempty"`
}

func (x *RunSqlResponse) Reset() {
	*x = RunSqlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunSqlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunSqlResponse) ProtoMessage() {}

func (x *RunSqlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunSqlResponse.ProtoReflect.Descriptor instead.
func (*RunSqlResponse) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{43}
}

func (x *RunSqlResponse) GetColumns() []*SqlColumn {
	if x != nil {
		return x.Columns
	}
	return nil
}

type GetCodeVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetCodeVersionRequest) Reset() {
	*x = GetCodeVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCodeVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCodeVersionRequest) ProtoMessage() {}

func (x *GetCodeVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCodeVersionRequest.ProtoReflect.Descriptor instead.
func (*GetCodeVersionRequest) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{44}
}

type GetCodeVersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VersionDesc string `protobuf:"bytes,1,opt,name=version_desc,json=versionDesc,proto3" json:"version_desc,omitempty"`
}

func (x *GetCodeVersionResponse) Reset() {
	*x = GetCodeVersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCodeVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCodeVersionResponse) ProtoMessage() {}

func (x *GetCodeVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCodeVersionResponse.ProtoReflect.Descriptor instead.
func (*GetCodeVersionResponse) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{45}
}

func (x *GetCodeVersionResponse) GetVersionDesc() string {
	if x != nil {
		return x.VersionDesc
	}
	return ""
}

type UpdateDataSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataSources []*UpdateDataSourceRequest_DataSource `protobuf:"bytes,1,rep,name=data_sources,json=dataSources,proto3" json:"data_sources,omitempty"`
}

func (x *UpdateDataSourceRequest) Reset() {
	*x = UpdateDataSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDataSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDataSourceRequest) ProtoMessage() {}

func (x *UpdateDataSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDataSourceRequest.ProtoReflect.Descriptor instead.
func (*UpdateDataSourceRequest) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{46}
}

func (x *UpdateDataSourceRequest) GetDataSources() []*UpdateDataSourceRequest_DataSource {
	if x != nil {
		return x.DataSources
	}
	return nil
}

type UpdateDataSourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response []*UpdateDataSourceResponse_DatasourceRes `protobuf:"bytes,1,rep,name=response,proto3" json:"response,omitempty"`
}

func (x *UpdateDataSourceResponse) Reset() {
	*x = UpdateDataSourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDataSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDataSourceResponse) ProtoMessage() {}

func (x *UpdateDataSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDataSourceResponse.ProtoReflect.Descriptor instead.
func (*UpdateDataSourceResponse) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{47}
}

func (x *UpdateDataSourceResponse) GetResponse() []*UpdateDataSourceResponse_DatasourceRes {
	if x != nil {
		return x.Response
	}
	return nil
}

type ReportStageUsageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    *BlockID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Usage uint64   `protobuf:"varint,2,opt,name=usage,proto3" json:"usage,omitempty"`
}

func (x *ReportStageUsageRequest) Reset() {
	*x = ReportStageUsageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportStageUsageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportStageUsageRequest) ProtoMessage() {}

func (x *ReportStageUsageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportStageUsageRequest.ProtoReflect.Descriptor instead.
func (*ReportStageUsageRequest) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{48}
}

func (x *ReportStageUsageRequest) GetId() *BlockID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ReportStageUsageRequest) GetUsage() uint64 {
	if x != nil {
		return x.Usage
	}
	return 0
}

type BlockStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State   BlockStatus_State `protobuf:"varint,1,opt,name=state,proto3,enum=sudo.protobuf.infra_adapter.BlockStatus_State" json:"state,omitempty"`
	Message string            `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *BlockStatus) Reset() {
	*x = BlockStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockStatus) ProtoMessage() {}

func (x *BlockStatus) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockStatus.ProtoReflect.Descriptor instead.
func (*BlockStatus) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{49}
}

func (x *BlockStatus) GetState() BlockStatus_State {
	if x != nil {
		return x.State
	}
	return BlockStatus_RUNNING
}

func (x *BlockStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetBlockStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *BlockID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetBlockStatusRequest) Reset() {
	*x = GetBlockStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockStatusRequest) ProtoMessage() {}

func (x *GetBlockStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockStatusRequest.ProtoReflect.Descriptor instead.
func (*GetBlockStatusRequest) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{50}
}

func (x *GetBlockStatusRequest) GetId() *BlockID {
	if x != nil {
		return x.Id
	}
	return nil
}

type GetBlockStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *BlockStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GetBlockStatusResponse) Reset() {
	*x = GetBlockStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockStatusResponse) ProtoMessage() {}

func (x *GetBlockStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockStatusResponse.ProtoReflect.Descriptor instead.
func (*GetBlockStatusResponse) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{51}
}

func (x *GetBlockStatusResponse) GetStatus() *BlockStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type GrpcProxyToPartyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId       string `protobuf:"bytes,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	CoordinatorId string `protobuf:"bytes,2,opt,name=coordinator_id,json=coordinatorId,proto3" json:"coordinator_id,omitempty"`
	Uri           string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	Method        string `protobuf:"bytes,4,opt,name=method,proto3" json:"method,omitempty"`
	Payload       []byte `protobuf:"bytes,5,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *GrpcProxyToPartyRequest) Reset() {
	*x = GrpcProxyToPartyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcProxyToPartyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcProxyToPartyRequest) ProtoMessage() {}

func (x *GrpcProxyToPartyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcProxyToPartyRequest.ProtoReflect.Descriptor instead.
func (*GrpcProxyToPartyRequest) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{52}
}

func (x *GrpcProxyToPartyRequest) GetPartyId() string {
	if x != nil {
		return x.PartyId
	}
	return ""
}

func (x *GrpcProxyToPartyRequest) GetCoordinatorId() string {
	if x != nil {
		return x.CoordinatorId
	}
	return ""
}

func (x *GrpcProxyToPartyRequest) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *GrpcProxyToPartyRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *GrpcProxyToPartyRequest) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type GrpcProxyToPartyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload []byte `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *GrpcProxyToPartyResponse) Reset() {
	*x = GrpcProxyToPartyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcProxyToPartyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcProxyToPartyResponse) ProtoMessage() {}

func (x *GrpcProxyToPartyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcProxyToPartyResponse.ProtoReflect.Descriptor instead.
func (*GrpcProxyToPartyResponse) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{53}
}

func (x *GrpcProxyToPartyResponse) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type GetFurnaceConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetFurnaceConfigRequest) Reset() {
	*x = GetFurnaceConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFurnaceConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFurnaceConfigRequest) ProtoMessage() {}

func (x *GetFurnaceConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFurnaceConfigRequest.ProtoReflect.Descriptor instead.
func (*GetFurnaceConfigRequest) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{54}
}

type GetFurnaceConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource *GetFurnaceConfigResponse_Resource `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *GetFurnaceConfigResponse) Reset() {
	*x = GetFurnaceConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFurnaceConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFurnaceConfigResponse) ProtoMessage() {}

func (x *GetFurnaceConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFurnaceConfigResponse.ProtoReflect.Descriptor instead.
func (*GetFurnaceConfigResponse) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{55}
}

func (x *GetFurnaceConfigResponse) GetResource() *GetFurnaceConfigResponse_Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

type UpdateBlockInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             *BlockID                               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OperatorStatus *UpdateBlockInfoRequest_OperatorStatus `protobuf:"bytes,2,opt,name=operator_status,json=operatorStatus,proto3" json:"operator_status,omitempty"`
}

func (x *UpdateBlockInfoRequest) Reset() {
	*x = UpdateBlockInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBlockInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBlockInfoRequest) ProtoMessage() {}

func (x *UpdateBlockInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBlockInfoRequest.ProtoReflect.Descriptor instead.
func (*UpdateBlockInfoRequest) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{56}
}

func (x *UpdateBlockInfoRequest) GetId() *BlockID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *UpdateBlockInfoRequest) GetOperatorStatus() *UpdateBlockInfoRequest_OperatorStatus {
	if x != nil {
		return x.OperatorStatus
	}
	return nil
}

type OnlineParamKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 要引用哪个stage，name是唯一的
	StageName string `protobuf:"bytes,1,opt,name=stage_name,json=stageName,proto3" json:"stage_name,omitempty"`
	// 对应 OnlineOperatorConfig 里第几个 party, 在operator和stage一一对应的时候等价于inner_id
	ParticipantIndex uint64 `protobuf:"varint,2,opt,name=participant_index,json=participantIndex,proto3" json:"participant_index,omitempty"`
	// 对应 OnlineOperatorConfig 的input里的key
	ParamKey string `protobuf:"bytes,3,opt,name=param_key,json=paramKey,proto3" json:"param_key,omitempty"`
}

func (x *OnlineParamKey) Reset() {
	*x = OnlineParamKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlineParamKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineParamKey) ProtoMessage() {}

func (x *OnlineParamKey) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineParamKey.ProtoReflect.Descriptor instead.
func (*OnlineParamKey) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{57}
}

func (x *OnlineParamKey) GetStageName() string {
	if x != nil {
		return x.StageName
	}
	return ""
}

func (x *OnlineParamKey) GetParticipantIndex() uint64 {
	if x != nil {
		return x.ParticipantIndex
	}
	return 0
}

func (x *OnlineParamKey) GetParamKey() string {
	if x != nil {
		return x.ParamKey
	}
	return ""
}

type RowKeys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key  *OnlineParamKey `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Row  string          `protobuf:"bytes,2,opt,name=row,proto3" json:"row,omitempty"`
	Rows []string        `protobuf:"bytes,3,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *RowKeys) Reset() {
	*x = RowKeys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RowKeys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RowKeys) ProtoMessage() {}

func (x *RowKeys) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RowKeys.ProtoReflect.Descriptor instead.
func (*RowKeys) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{58}
}

func (x *RowKeys) GetKey() *OnlineParamKey {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *RowKeys) GetRow() string {
	if x != nil {
		return x.Row
	}
	return ""
}

func (x *RowKeys) GetRows() []string {
	if x != nil {
		return x.Rows
	}
	return nil
}

type RowValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 特征值
	Features []string `protobuf:"bytes,2,rep,name=features,proto3" json:"features,omitempty"`
}

func (x *RowValue) Reset() {
	*x = RowValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RowValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RowValue) ProtoMessage() {}

func (x *RowValue) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RowValue.ProtoReflect.Descriptor instead.
func (*RowValue) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{59}
}

func (x *RowValue) GetFeatures() []string {
	if x != nil {
		return x.Features
	}
	return nil
}

type PredictInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 特征列名称
	FeatureColumns []string    `protobuf:"bytes,1,rep,name=feature_columns,json=featureColumns,proto3" json:"feature_columns,omitempty"`
	RowValues      []*RowValue `protobuf:"bytes,2,rep,name=row_values,json=rowValues,proto3" json:"row_values,omitempty"`
}

func (x *PredictInput) Reset() {
	*x = PredictInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PredictInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PredictInput) ProtoMessage() {}

func (x *PredictInput) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PredictInput.ProtoReflect.Descriptor instead.
func (*PredictInput) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{60}
}

func (x *PredictInput) GetFeatureColumns() []string {
	if x != nil {
		return x.FeatureColumns
	}
	return nil
}

func (x *PredictInput) GetRowValues() []*RowValue {
	if x != nil {
		return x.RowValues
	}
	return nil
}

type PredictParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnlineParamKeys *OnlineParamKey `protobuf:"bytes,1,opt,name=online_param_keys,json=onlineParamKeys,proto3" json:"online_param_keys,omitempty"`
	PredictInputs   *PredictInput   `protobuf:"bytes,2,opt,name=predict_inputs,json=predictInputs,proto3" json:"predict_inputs,omitempty"`
}

func (x *PredictParam) Reset() {
	*x = PredictParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PredictParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PredictParam) ProtoMessage() {}

func (x *PredictParam) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PredictParam.ProtoReflect.Descriptor instead.
func (*PredictParam) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{61}
}

func (x *PredictParam) GetOnlineParamKeys() *OnlineParamKey {
	if x != nil {
		return x.OnlineParamKeys
	}
	return nil
}

func (x *PredictParam) GetPredictInputs() *PredictInput {
	if x != nil {
		return x.PredictInputs
	}
	return nil
}

type OnlinePredictRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId uint64 `protobuf:"varint,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// 对于不同stage输入给一个不同的查询ID
	//
	// Deprecated: Do not use.
	Inputs      []*RowKeys `protobuf:"bytes,2,rep,name=inputs,proto3" json:"inputs,omitempty"`
	BucketCount uint64     `protobuf:"varint,3,opt,name=bucket_count,json=bucketCount,proto3" json:"bucket_count,omitempty"`
	// 用户实时查询的ID
	Ids []string `protobuf:"bytes,4,rep,name=ids,proto3" json:"ids,omitempty"`
	// 支持API输入特征的查询
	Params []*PredictParam `protobuf:"bytes,5,rep,name=params,proto3" json:"params,omitempty"`
}

func (x *OnlinePredictRequest) Reset() {
	*x = OnlinePredictRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlinePredictRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlinePredictRequest) ProtoMessage() {}

func (x *OnlinePredictRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlinePredictRequest.ProtoReflect.Descriptor instead.
func (*OnlinePredictRequest) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{62}
}

func (x *OnlinePredictRequest) GetServiceId() uint64 {
	if x != nil {
		return x.ServiceId
	}
	return 0
}

// Deprecated: Do not use.
func (x *OnlinePredictRequest) GetInputs() []*RowKeys {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *OnlinePredictRequest) GetBucketCount() uint64 {
	if x != nil {
		return x.BucketCount
	}
	return 0
}

func (x *OnlinePredictRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *OnlinePredictRequest) GetParams() []*PredictParam {
	if x != nil {
		return x.Params
	}
	return nil
}

type OnlinePredictResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	Result map[string]string `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// 预测返回值, 与 `OnlinePredictRequest.ids` 一一对应
	Items []*OnlinePredictResponseItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *OnlinePredictResponse) Reset() {
	*x = OnlinePredictResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlinePredictResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlinePredictResponse) ProtoMessage() {}

func (x *OnlinePredictResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlinePredictResponse.ProtoReflect.Descriptor instead.
func (*OnlinePredictResponse) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{63}
}

// Deprecated: Do not use.
func (x *OnlinePredictResponse) GetResult() map[string]string {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *OnlinePredictResponse) GetItems() []*OnlinePredictResponseItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type OnlinePredictResponseItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status OnlinePredictResponseItem_Status `protobuf:"varint,1,opt,name=status,proto3,enum=sudo.protobuf.infra_adapter.OnlinePredictResponseItem_Status" json:"status,omitempty"`
	// Key与`OnlineBlock.result_memory_key`一一对应
	Result map[string]string `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// 对PARTIAL状态的补充说明，表示缺失一方的id集合
	MissingParties []string `protobuf:"bytes,3,rep,name=missing_parties,json=missingParties,proto3" json:"missing_parties,omitempty"`
}

func (x *OnlinePredictResponseItem) Reset() {
	*x = OnlinePredictResponseItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlinePredictResponseItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlinePredictResponseItem) ProtoMessage() {}

func (x *OnlinePredictResponseItem) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlinePredictResponseItem.ProtoReflect.Descriptor instead.
func (*OnlinePredictResponseItem) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{64}
}

func (x *OnlinePredictResponseItem) GetStatus() OnlinePredictResponseItem_Status {
	if x != nil {
		return x.Status
	}
	return OnlinePredictResponseItem_SUCCESS
}

func (x *OnlinePredictResponseItem) GetResult() map[string]string {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *OnlinePredictResponseItem) GetMissingParties() []string {
	if x != nil {
		return x.MissingParties
	}
	return nil
}

type OnlinePirRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerUri        string `protobuf:"bytes,1,opt,name=server_uri,json=serverUri,proto3" json:"server_uri,omitempty"`
	ClientStorageKey string `protobuf:"bytes,2,opt,name=client_storage_key,json=clientStorageKey,proto3" json:"client_storage_key,omitempty"`
	ServerStorageKey string `protobuf:"bytes,3,opt,name=server_storage_key,json=serverStorageKey,proto3" json:"server_storage_key,omitempty"`
	QueryKey         string `protobuf:"bytes,4,opt,name=query_key,json=queryKey,proto3" json:"query_key,omitempty"`
}

func (x *OnlinePirRequest) Reset() {
	*x = OnlinePirRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlinePirRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlinePirRequest) ProtoMessage() {}

func (x *OnlinePirRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlinePirRequest.ProtoReflect.Descriptor instead.
func (*OnlinePirRequest) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{65}
}

func (x *OnlinePirRequest) GetServerUri() string {
	if x != nil {
		return x.ServerUri
	}
	return ""
}

func (x *OnlinePirRequest) GetClientStorageKey() string {
	if x != nil {
		return x.ClientStorageKey
	}
	return ""
}

func (x *OnlinePirRequest) GetServerStorageKey() string {
	if x != nil {
		return x.ServerStorageKey
	}
	return ""
}

func (x *OnlinePirRequest) GetQueryKey() string {
	if x != nil {
		return x.QueryKey
	}
	return ""
}

type OnlinePirReponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *OnlinePirReponse) Reset() {
	*x = OnlinePirReponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlinePirReponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlinePirReponse) ProtoMessage() {}

func (x *OnlinePirReponse) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlinePirReponse.ProtoReflect.Descriptor instead.
func (*OnlinePirReponse) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{66}
}

func (x *OnlinePirReponse) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type OnlineBlockId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId uint64 `protobuf:"varint,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
}

func (x *OnlineBlockId) Reset() {
	*x = OnlineBlockId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlineBlockId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineBlockId) ProtoMessage() {}

func (x *OnlineBlockId) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineBlockId.ProtoReflect.Descriptor instead.
func (*OnlineBlockId) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{67}
}

func (x *OnlineBlockId) GetServiceId() uint64 {
	if x != nil {
		return x.ServiceId
	}
	return 0
}

type OnlineBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId uint64 `protobuf:"varint,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// 自己这一方的名字
	PartyId   string                  `protobuf:"bytes,2,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	Operators []*OnlineOperatorConfig `protobuf:"bytes,3,rep,name=operators,proto3" json:"operators,omitempty"`
	// 所有参与方信息, 第0个是client
	PartyInfos      []*PartyInfo               `protobuf:"bytes,4,rep,name=party_infos,json=partyInfos,proto3" json:"party_infos,omitempty"`
	ResultMemoryKey map[string]*OnlineParamKey `protobuf:"bytes,5,rep,name=result_memory_key,json=resultMemoryKey,proto3" json:"result_memory_key,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	EnableProtectId bool                       `protobuf:"varint,6,opt,name=enable_protect_id,json=enableProtectId,proto3" json:"enable_protect_id,omitempty"`
	TripletsBitInfo enums.TripletsBitInfo_Type `protobuf:"varint,7,opt,name=triplets_bit_info,json=tripletsBitInfo,proto3,enum=sudo.protobuf.enums.TripletsBitInfo_Type" json:"triplets_bit_info,omitempty"`
	// 预测数据表的哈希分桶请求
	TableHashBucketReq *TableHashBucketRequest `protobuf:"bytes,8,opt,name=table_hash_bucket_req,json=tableHashBucketReq,proto3" json:"table_hash_bucket_req,omitempty"`
}

func (x *OnlineBlock) Reset() {
	*x = OnlineBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlineBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineBlock) ProtoMessage() {}

func (x *OnlineBlock) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineBlock.ProtoReflect.Descriptor instead.
func (*OnlineBlock) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{68}
}

func (x *OnlineBlock) GetServiceId() uint64 {
	if x != nil {
		return x.ServiceId
	}
	return 0
}

func (x *OnlineBlock) GetPartyId() string {
	if x != nil {
		return x.PartyId
	}
	return ""
}

func (x *OnlineBlock) GetOperators() []*OnlineOperatorConfig {
	if x != nil {
		return x.Operators
	}
	return nil
}

func (x *OnlineBlock) GetPartyInfos() []*PartyInfo {
	if x != nil {
		return x.PartyInfos
	}
	return nil
}

func (x *OnlineBlock) GetResultMemoryKey() map[string]*OnlineParamKey {
	if x != nil {
		return x.ResultMemoryKey
	}
	return nil
}

func (x *OnlineBlock) GetEnableProtectId() bool {
	if x != nil {
		return x.EnableProtectId
	}
	return false
}

func (x *OnlineBlock) GetTripletsBitInfo() enums.TripletsBitInfo_Type {
	if x != nil {
		return x.TripletsBitInfo
	}
	return enums.TripletsBitInfo_DEFAULT
}

func (x *OnlineBlock) GetTableHashBucketReq() *TableHashBucketRequest {
	if x != nil {
		return x.TableHashBucketReq
	}
	return nil
}

type SyncOnlineDeployInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId uint64 `protobuf:"varint,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
}

func (x *SyncOnlineDeployInfoRequest) Reset() {
	*x = SyncOnlineDeployInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncOnlineDeployInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncOnlineDeployInfoRequest) ProtoMessage() {}

func (x *SyncOnlineDeployInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncOnlineDeployInfoRequest.ProtoReflect.Descriptor instead.
func (*SyncOnlineDeployInfoRequest) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{69}
}

func (x *SyncOnlineDeployInfoRequest) GetServiceId() uint64 {
	if x != nil {
		return x.ServiceId
	}
	return 0
}

type SyncOnlineDeployInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 当前部署状态
	Status SyncStatus `protobuf:"varint,1,opt,name=status,proto3,enum=sudo.protobuf.infra_adapter.SyncStatus" json:"status,omitempty"`
	// deploy进度，返回百分比
	Progress float32 `protobuf:"fixed32,2,opt,name=progress,proto3" json:"progress,omitempty"`
	// deploy失败时才有值
	ErrMsg string `protobuf:"bytes,3,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
	// 哈希分桶结果的描述符
	HashBucketInfo *TableHashBucketInfo `protobuf:"bytes,4,opt,name=hash_bucket_info,json=hashBucketInfo,proto3" json:"hash_bucket_info,omitempty"`
}

func (x *SyncOnlineDeployInfoResponse) Reset() {
	*x = SyncOnlineDeployInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncOnlineDeployInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncOnlineDeployInfoResponse) ProtoMessage() {}

func (x *SyncOnlineDeployInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncOnlineDeployInfoResponse.ProtoReflect.Descriptor instead.
func (*SyncOnlineDeployInfoResponse) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{70}
}

func (x *SyncOnlineDeployInfoResponse) GetStatus() SyncStatus {
	if x != nil {
		return x.Status
	}
	return SyncStatus_UNKNOWN
}

func (x *SyncOnlineDeployInfoResponse) GetProgress() float32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *SyncOnlineDeployInfoResponse) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *SyncOnlineDeployInfoResponse) GetHashBucketInfo() *TableHashBucketInfo {
	if x != nil {
		return x.HashBucketInfo
	}
	return nil
}

type TableHashBucketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId uint64 `protobuf:"varint,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// selected_cols include [key_columns, ..value_columns]
	// pass ["*"] is ok
	DbTable        *infra_adapter.DataLocation_DB `protobuf:"bytes,2,opt,name=db_table,json=dbTable,proto3" json:"db_table,omitempty"`
	KeyColumn      string                         `protobuf:"bytes,3,opt,name=key_column,json=keyColumn,proto3" json:"key_column,omitempty"`
	StorageTable   *infra_adapter.DataLocation_DB `protobuf:"bytes,4,opt,name=storage_table,json=storageTable,proto3" json:"storage_table,omitempty"`
	BucketCount    uint64                         `protobuf:"varint,5,opt,name=bucket_count,json=bucketCount,proto3" json:"bucket_count,omitempty"`
	PartitionCount uint64                         `protobuf:"varint,6,opt,name=partition_count,json=partitionCount,proto3" json:"partition_count,omitempty"`
}

func (x *TableHashBucketRequest) Reset() {
	*x = TableHashBucketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableHashBucketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableHashBucketRequest) ProtoMessage() {}

func (x *TableHashBucketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableHashBucketRequest.ProtoReflect.Descriptor instead.
func (*TableHashBucketRequest) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{71}
}

func (x *TableHashBucketRequest) GetServiceId() uint64 {
	if x != nil {
		return x.ServiceId
	}
	return 0
}

func (x *TableHashBucketRequest) GetDbTable() *infra_adapter.DataLocation_DB {
	if x != nil {
		return x.DbTable
	}
	return nil
}

func (x *TableHashBucketRequest) GetKeyColumn() string {
	if x != nil {
		return x.KeyColumn
	}
	return ""
}

func (x *TableHashBucketRequest) GetStorageTable() *infra_adapter.DataLocation_DB {
	if x != nil {
		return x.StorageTable
	}
	return nil
}

func (x *TableHashBucketRequest) GetBucketCount() uint64 {
	if x != nil {
		return x.BucketCount
	}
	return 0
}

func (x *TableHashBucketRequest) GetPartitionCount() uint64 {
	if x != nil {
		return x.PartitionCount
	}
	return 0
}

type OnlineOperatorConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StageName string `protobuf:"bytes,1,opt,name=stage_name,json=stageName,proto3" json:"stage_name,omitempty"`
	StageType string `protobuf:"bytes,2,opt,name=stage_type,json=stageType,proto3" json:"stage_type,omitempty"`
	// 比较tricky的是这个数组不光代表了这些party参与，这个数组的顺序还分别表示 [client, server1, server2 ..]
	Parties      []*OnlineParticipant `protobuf:"bytes,3,rep,name=parties,proto3" json:"parties,omitempty"`
	GlobalConfig string               `protobuf:"bytes,4,opt,name=global_config,json=globalConfig,proto3" json:"global_config,omitempty"`
}

func (x *OnlineOperatorConfig) Reset() {
	*x = OnlineOperatorConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlineOperatorConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineOperatorConfig) ProtoMessage() {}

func (x *OnlineOperatorConfig) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineOperatorConfig.ProtoReflect.Descriptor instead.
func (*OnlineOperatorConfig) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{72}
}

func (x *OnlineOperatorConfig) GetStageName() string {
	if x != nil {
		return x.StageName
	}
	return ""
}

func (x *OnlineOperatorConfig) GetStageType() string {
	if x != nil {
		return x.StageType
	}
	return ""
}

func (x *OnlineOperatorConfig) GetParties() []*OnlineParticipant {
	if x != nil {
		return x.Parties
	}
	return nil
}

func (x *OnlineOperatorConfig) GetGlobalConfig() string {
	if x != nil {
		return x.GlobalConfig
	}
	return ""
}

type OnlineParticipant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId string                                       `protobuf:"bytes,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	Inputs  map[string]*OnlineParticipant_OnlineLocation `protobuf:"bytes,2,rep,name=inputs,proto3" json:"inputs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *OnlineParticipant) Reset() {
	*x = OnlineParticipant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlineParticipant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineParticipant) ProtoMessage() {}

func (x *OnlineParticipant) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineParticipant.ProtoReflect.Descriptor instead.
func (*OnlineParticipant) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{73}
}

func (x *OnlineParticipant) GetPartyId() string {
	if x != nil {
		return x.PartyId
	}
	return ""
}

func (x *OnlineParticipant) GetInputs() map[string]*OnlineParticipant_OnlineLocation {
	if x != nil {
		return x.Inputs
	}
	return nil
}

type OnlineInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Location:
	//	*OnlineInput_Table
	//	*OnlineInput_Constants_
	Location isOnlineInput_Location `protobuf_oneof:"location"`
}

func (x *OnlineInput) Reset() {
	*x = OnlineInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlineInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineInput) ProtoMessage() {}

func (x *OnlineInput) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineInput.ProtoReflect.Descriptor instead.
func (*OnlineInput) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{74}
}

func (m *OnlineInput) GetLocation() isOnlineInput_Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (x *OnlineInput) GetTable() *OnlineInput_TableRow {
	if x, ok := x.GetLocation().(*OnlineInput_Table); ok {
		return x.Table
	}
	return nil
}

func (x *OnlineInput) GetConstants() *OnlineInput_Constants {
	if x, ok := x.GetLocation().(*OnlineInput_Constants_); ok {
		return x.Constants
	}
	return nil
}

type isOnlineInput_Location interface {
	isOnlineInput_Location()
}

type OnlineInput_Table struct {
	Table *OnlineInput_TableRow `protobuf:"bytes,1,opt,name=table,proto3,oneof"`
}

type OnlineInput_Constants_ struct {
	Constants *OnlineInput_Constants `protobuf:"bytes,2,opt,name=constants,proto3,oneof"`
}

func (*OnlineInput_Table) isOnlineInput_Location() {}

func (*OnlineInput_Constants_) isOnlineInput_Location() {}

type UpdateOperatorSchemasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operators []*OperatorSchema `protobuf:"bytes,1,rep,name=operators,proto3" json:"operators,omitempty"`
}

func (x *UpdateOperatorSchemasRequest) Reset() {
	*x = UpdateOperatorSchemasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOperatorSchemasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOperatorSchemasRequest) ProtoMessage() {}

func (x *UpdateOperatorSchemasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOperatorSchemasRequest.ProtoReflect.Descriptor instead.
func (*UpdateOperatorSchemasRequest) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{75}
}

func (x *UpdateOperatorSchemasRequest) GetOperators() []*OperatorSchema {
	if x != nil {
		return x.Operators
	}
	return nil
}

type TableHashBucketInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataTable *OdbcQuery `protobuf:"bytes,1,opt,name=data_table,json=dataTable,proto3" json:"data_table,omitempty"`
	KeyColumn string     `protobuf:"bytes,2,opt,name=key_column,json=keyColumn,proto3" json:"key_column,omitempty"`
}

func (x *TableHashBucketInfo) Reset() {
	*x = TableHashBucketInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableHashBucketInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableHashBucketInfo) ProtoMessage() {}

func (x *TableHashBucketInfo) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableHashBucketInfo.ProtoReflect.Descriptor instead.
func (*TableHashBucketInfo) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{76}
}

func (x *TableHashBucketInfo) GetDataTable() *OdbcQuery {
	if x != nil {
		return x.DataTable
	}
	return nil
}

func (x *TableHashBucketInfo) GetKeyColumn() string {
	if x != nil {
		return x.KeyColumn
	}
	return ""
}

type OdbcQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Connection *OdbcConnection   `protobuf:"bytes,1,opt,name=connection,proto3" json:"connection,omitempty"`
	DbType     DatabaseType      `protobuf:"varint,2,opt,name=db_type,json=dbType,proto3,enum=sudo.protobuf.infra_adapter.DatabaseType" json:"db_type,omitempty"`
	Location   *DatabaseLocation `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *OdbcQuery) Reset() {
	*x = OdbcQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OdbcQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OdbcQuery) ProtoMessage() {}

func (x *OdbcQuery) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OdbcQuery.ProtoReflect.Descriptor instead.
func (*OdbcQuery) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{77}
}

func (x *OdbcQuery) GetConnection() *OdbcConnection {
	if x != nil {
		return x.Connection
	}
	return nil
}

func (x *OdbcQuery) GetDbType() DatabaseType {
	if x != nil {
		return x.DbType
	}
	return DatabaseType_DATABASETYPE_MYSQL
}

func (x *OdbcQuery) GetLocation() *DatabaseLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

type DatabaseLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Location:
	//	*DatabaseLocation_Table
	//	*DatabaseLocation_Query
	Location isDatabaseLocation_Location `protobuf_oneof:"location"`
}

func (x *DatabaseLocation) Reset() {
	*x = DatabaseLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatabaseLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseLocation) ProtoMessage() {}

func (x *DatabaseLocation) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseLocation.ProtoReflect.Descriptor instead.
func (*DatabaseLocation) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{78}
}

func (m *DatabaseLocation) GetLocation() isDatabaseLocation_Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (x *DatabaseLocation) GetTable() *Table {
	if x, ok := x.GetLocation().(*DatabaseLocation_Table); ok {
		return x.Table
	}
	return nil
}

func (x *DatabaseLocation) GetQuery() string {
	if x, ok := x.GetLocation().(*DatabaseLocation_Query); ok {
		return x.Query
	}
	return ""
}

type isDatabaseLocation_Location interface {
	isDatabaseLocation_Location()
}

type DatabaseLocation_Table struct {
	Table *Table `protobuf:"bytes,1,opt,name=table,proto3,oneof"`
}

type DatabaseLocation_Query struct {
	Query string `protobuf:"bytes,2,opt,name=query,proto3,oneof"`
}

func (*DatabaseLocation_Table) isDatabaseLocation_Location() {}

func (*DatabaseLocation_Query) isDatabaseLocation_Location() {}

type Table struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Table       *DatabaseTable `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	SelectedCol []string       `protobuf:"bytes,2,rep,name=selected_col,json=selectedCol,proto3" json:"selected_col,omitempty"`
}

func (x *Table) Reset() {
	*x = Table{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Table) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Table) ProtoMessage() {}

func (x *Table) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Table.ProtoReflect.Descriptor instead.
func (*Table) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{79}
}

func (x *Table) GetTable() *DatabaseTable {
	if x != nil {
		return x.Table
	}
	return nil
}

func (x *Table) GetSelectedCol() []string {
	if x != nil {
		return x.SelectedCol
	}
	return nil
}

type DatabaseTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database string `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Table    string `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
}

func (x *DatabaseTable) Reset() {
	*x = DatabaseTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatabaseTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseTable) ProtoMessage() {}

func (x *DatabaseTable) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseTable.ProtoReflect.Descriptor instead.
func (*DatabaseTable) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{80}
}

func (x *DatabaseTable) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *DatabaseTable) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

type OdbcConnection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Connection:
	//	*OdbcConnection_ConnectionString
	//	*OdbcConnection_DataSourceName
	Connection isOdbcConnection_Connection `protobuf_oneof:"connection"`
}

func (x *OdbcConnection) Reset() {
	*x = OdbcConnection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OdbcConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OdbcConnection) ProtoMessage() {}

func (x *OdbcConnection) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OdbcConnection.ProtoReflect.Descriptor instead.
func (*OdbcConnection) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{81}
}

func (m *OdbcConnection) GetConnection() isOdbcConnection_Connection {
	if m != nil {
		return m.Connection
	}
	return nil
}

func (x *OdbcConnection) GetConnectionString() string {
	if x, ok := x.GetConnection().(*OdbcConnection_ConnectionString); ok {
		return x.ConnectionString
	}
	return ""
}

func (x *OdbcConnection) GetDataSourceName() *DataSourceName {
	if x, ok := x.GetConnection().(*OdbcConnection_DataSourceName); ok {
		return x.DataSourceName
	}
	return nil
}

type isOdbcConnection_Connection interface {
	isOdbcConnection_Connection()
}

type OdbcConnection_ConnectionString struct {
	ConnectionString string `protobuf:"bytes,1,opt,name=connection_string,json=connectionString,proto3,oneof"`
}

type OdbcConnection_DataSourceName struct {
	DataSourceName *DataSourceName `protobuf:"bytes,2,opt,name=data_source_name,json=dataSourceName,proto3,oneof"`
}

func (*OdbcConnection_ConnectionString) isOdbcConnection_Connection() {}

func (*OdbcConnection_DataSourceName) isOdbcConnection_Connection() {}

type DataSourceName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dsn      string `protobuf:"bytes,1,opt,name=dsn,proto3" json:"dsn,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *DataSourceName) Reset() {
	*x = DataSourceName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataSourceName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataSourceName) ProtoMessage() {}

func (x *DataSourceName) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataSourceName.ProtoReflect.Descriptor instead.
func (*DataSourceName) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{82}
}

func (x *DataSourceName) GetDsn() string {
	if x != nil {
		return x.Dsn
	}
	return ""
}

func (x *DataSourceName) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *DataSourceName) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type DescTableResponse_TableFieldMetaInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field    string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Type     string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Nullable bool   `protobuf:"varint,3,opt,name=nullable,proto3" json:"nullable,omitempty"`
	IsKey    bool   `protobuf:"varint,4,opt,name=is_key,json=isKey,proto3" json:"is_key,omitempty"`
	IsIndex  bool   `protobuf:"varint,5,opt,name=is_index,json=isIndex,proto3" json:"is_index,omitempty"`
}

func (x *DescTableResponse_TableFieldMetaInfo) Reset() {
	*x = DescTableResponse_TableFieldMetaInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescTableResponse_TableFieldMetaInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescTableResponse_TableFieldMetaInfo) ProtoMessage() {}

func (x *DescTableResponse_TableFieldMetaInfo) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescTableResponse_TableFieldMetaInfo.ProtoReflect.Descriptor instead.
func (*DescTableResponse_TableFieldMetaInfo) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{16, 0}
}

func (x *DescTableResponse_TableFieldMetaInfo) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *DescTableResponse_TableFieldMetaInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DescTableResponse_TableFieldMetaInfo) GetNullable() bool {
	if x != nil {
		return x.Nullable
	}
	return false
}

func (x *DescTableResponse_TableFieldMetaInfo) GetIsKey() bool {
	if x != nil {
		return x.IsKey
	}
	return false
}

func (x *DescTableResponse_TableFieldMetaInfo) GetIsIndex() bool {
	if x != nil {
		return x.IsIndex
	}
	return false
}

type WalkDirResponse_NodeMetaInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	IsDir bool   `protobuf:"varint,2,opt,name=is_dir,json=isDir,proto3" json:"is_dir,omitempty"`
	// 文件大小，单位为字节。
	Size uint64 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	// 10位数Unix时间戳
	LastModified uint64 `protobuf:"varint,4,opt,name=last_modified,json=lastModified,proto3" json:"last_modified,omitempty"`
}

func (x *WalkDirResponse_NodeMetaInfo) Reset() {
	*x = WalkDirResponse_NodeMetaInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalkDirResponse_NodeMetaInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalkDirResponse_NodeMetaInfo) ProtoMessage() {}

func (x *WalkDirResponse_NodeMetaInfo) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalkDirResponse_NodeMetaInfo.ProtoReflect.Descriptor instead.
func (*WalkDirResponse_NodeMetaInfo) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{17, 0}
}

func (x *WalkDirResponse_NodeMetaInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WalkDirResponse_NodeMetaInfo) GetIsDir() bool {
	if x != nil {
		return x.IsDir
	}
	return false
}

func (x *WalkDirResponse_NodeMetaInfo) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *WalkDirResponse_NodeMetaInfo) GetLastModified() uint64 {
	if x != nil {
		return x.LastModified
	}
	return 0
}

type UpdateDataSourceRequest_DataSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DataSource name, unique identifier, cannot be duplicated
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// DataSouce address，for example mysql://user:pwd@127.0.0.1:3306/reqHistory
	Identifier string `protobuf:"bytes,2,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// Datasource type，such as definition in enums.proto
	Type enums.Datasource_Type `protobuf:"varint,3,opt,name=type,proto3,enum=sudo.protobuf.enums.Datasource_Type" json:"type,omitempty"`
}

func (x *UpdateDataSourceRequest_DataSource) Reset() {
	*x = UpdateDataSourceRequest_DataSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDataSourceRequest_DataSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDataSourceRequest_DataSource) ProtoMessage() {}

func (x *UpdateDataSourceRequest_DataSource) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDataSourceRequest_DataSource.ProtoReflect.Descriptor instead.
func (*UpdateDataSourceRequest_DataSource) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{46, 0}
}

func (x *UpdateDataSourceRequest_DataSource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateDataSourceRequest_DataSource) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *UpdateDataSourceRequest_DataSource) GetType() enums.Datasource_Type {
	if x != nil {
		return x.Type
	}
	return enums.Datasource_UNKNOWN
}

// return successfully updated/created DataSource ID/Name List
type UpdateDataSourceResponse_DatasourceRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UpdateDataSourceResponse_DatasourceRes) Reset() {
	*x = UpdateDataSourceResponse_DatasourceRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDataSourceResponse_DatasourceRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDataSourceResponse_DatasourceRes) ProtoMessage() {}

func (x *UpdateDataSourceResponse_DatasourceRes) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDataSourceResponse_DatasourceRes.ProtoReflect.Descriptor instead.
func (*UpdateDataSourceResponse_DatasourceRes) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{47, 0}
}

func (x *UpdateDataSourceResponse_DatasourceRes) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateDataSourceResponse_DatasourceRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetFurnaceConfigResponse_Resource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode enums.Resource_Mode `protobuf:"varint,1,opt,name=mode,proto3,enum=sudo.protobuf.enums.Resource_Mode" json:"mode,omitempty"`
}

func (x *GetFurnaceConfigResponse_Resource) Reset() {
	*x = GetFurnaceConfigResponse_Resource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFurnaceConfigResponse_Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFurnaceConfigResponse_Resource) ProtoMessage() {}

func (x *GetFurnaceConfigResponse_Resource) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFurnaceConfigResponse_Resource.ProtoReflect.Descriptor instead.
func (*GetFurnaceConfigResponse_Resource) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{55, 0}
}

func (x *GetFurnaceConfigResponse_Resource) GetMode() enums.Resource_Mode {
	if x != nil {
		return x.Mode
	}
	return enums.Resource_UNKNOWN_MODE
}

type UpdateBlockInfoRequest_OperatorStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ready bool `protobuf:"varint,1,opt,name=ready,proto3" json:"ready,omitempty"`
}

func (x *UpdateBlockInfoRequest_OperatorStatus) Reset() {
	*x = UpdateBlockInfoRequest_OperatorStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBlockInfoRequest_OperatorStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBlockInfoRequest_OperatorStatus) ProtoMessage() {}

func (x *UpdateBlockInfoRequest_OperatorStatus) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBlockInfoRequest_OperatorStatus.ProtoReflect.Descriptor instead.
func (*UpdateBlockInfoRequest_OperatorStatus) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{56, 0}
}

func (x *UpdateBlockInfoRequest_OperatorStatus) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

type OnlineParticipant_OnlineLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Location:
	//	*OnlineParticipant_OnlineLocation_Preload
	//	*OnlineParticipant_OnlineLocation_Upstream
	//	*OnlineParticipant_OnlineLocation_Online
	//	*OnlineParticipant_OnlineLocation_FromApi
	Location isOnlineParticipant_OnlineLocation_Location `protobuf_oneof:"location"`
}

func (x *OnlineParticipant_OnlineLocation) Reset() {
	*x = OnlineParticipant_OnlineLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlineParticipant_OnlineLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineParticipant_OnlineLocation) ProtoMessage() {}

func (x *OnlineParticipant_OnlineLocation) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineParticipant_OnlineLocation.ProtoReflect.Descriptor instead.
func (*OnlineParticipant_OnlineLocation) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{73, 0}
}

func (m *OnlineParticipant_OnlineLocation) GetLocation() isOnlineParticipant_OnlineLocation_Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (x *OnlineParticipant_OnlineLocation) GetPreload() *infra_adapter.DataLocation {
	if x, ok := x.GetLocation().(*OnlineParticipant_OnlineLocation_Preload); ok {
		return x.Preload
	}
	return nil
}

func (x *OnlineParticipant_OnlineLocation) GetUpstream() *OnlineParamKey {
	if x, ok := x.GetLocation().(*OnlineParticipant_OnlineLocation_Upstream); ok {
		return x.Upstream
	}
	return nil
}

func (x *OnlineParticipant_OnlineLocation) GetOnline() *OnlineInput {
	if x, ok := x.GetLocation().(*OnlineParticipant_OnlineLocation_Online); ok {
		return x.Online
	}
	return nil
}

func (x *OnlineParticipant_OnlineLocation) GetFromApi() *emptypb.Empty {
	if x, ok := x.GetLocation().(*OnlineParticipant_OnlineLocation_FromApi); ok {
		return x.FromApi
	}
	return nil
}

type isOnlineParticipant_OnlineLocation_Location interface {
	isOnlineParticipant_OnlineLocation_Location()
}

type OnlineParticipant_OnlineLocation_Preload struct {
	// 由paas填充, 预先载入的模型的地址
	Preload *infra_adapter.DataLocation `protobuf:"bytes,1,opt,name=preload,proto3,oneof"`
}

type OnlineParticipant_OnlineLocation_Upstream struct {
	// 由paas填充, 上游输入
	Upstream *OnlineParamKey `protobuf:"bytes,2,opt,name=upstream,proto3,oneof"`
}

type OnlineParticipant_OnlineLocation_Online struct {
	// 由用户填充, 实际的输入的"来源", 并不是输入本身
	Online *OnlineInput `protobuf:"bytes,3,opt,name=online,proto3,oneof"`
}

type OnlineParticipant_OnlineLocation_FromApi struct {
	// 由用户在预测时通过API输入
	FromApi *emptypb.Empty `protobuf:"bytes,4,opt,name=from_api,json=fromApi,proto3,oneof"`
}

func (*OnlineParticipant_OnlineLocation_Preload) isOnlineParticipant_OnlineLocation_Location() {}

func (*OnlineParticipant_OnlineLocation_Upstream) isOnlineParticipant_OnlineLocation_Location() {}

func (*OnlineParticipant_OnlineLocation_Online) isOnlineParticipant_OnlineLocation_Location() {}

func (*OnlineParticipant_OnlineLocation_FromApi) isOnlineParticipant_OnlineLocation_Location() {}

type OnlineInput_TableRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatasourceName string                            `protobuf:"bytes,1,opt,name=datasource_name,json=datasourceName,proto3" json:"datasource_name,omitempty"`
	Table          *infra_adapter.DataLocation_Table `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
	KeyColumn      string                            `protobuf:"bytes,3,opt,name=key_column,json=keyColumn,proto3" json:"key_column,omitempty"`
}

func (x *OnlineInput_TableRow) Reset() {
	*x = OnlineInput_TableRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlineInput_TableRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineInput_TableRow) ProtoMessage() {}

func (x *OnlineInput_TableRow) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineInput_TableRow.ProtoReflect.Descriptor instead.
func (*OnlineInput_TableRow) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{74, 0}
}

func (x *OnlineInput_TableRow) GetDatasourceName() string {
	if x != nil {
		return x.DatasourceName
	}
	return ""
}

func (x *OnlineInput_TableRow) GetTable() *infra_adapter.DataLocation_Table {
	if x != nil {
		return x.Table
	}
	return nil
}

func (x *OnlineInput_TableRow) GetKeyColumn() string {
	if x != nil {
		return x.KeyColumn
	}
	return ""
}

// For quick debugging
type OnlineInput_Constants struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header []string `protobuf:"bytes,1,rep,name=header,proto3" json:"header,omitempty"`
}

func (x *OnlineInput_Constants) Reset() {
	*x = OnlineInput_Constants{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlineInput_Constants) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineInput_Constants) ProtoMessage() {}

func (x *OnlineInput_Constants) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_infra_adapter_infra_adapter_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineInput_Constants.ProtoReflect.Descriptor instead.
func (*OnlineInput_Constants) Descriptor() ([]byte, []int) {
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP(), []int{74, 1}
}

func (x *OnlineInput_Constants) GetHeader() []string {
	if x != nil {
		return x.Header
	}
	return nil
}

var File_sudo_infra_adapter_infra_adapter_proto protoreflect.FileDescriptor

var file_sudo_infra_adapter_infra_adapter_proto_rawDesc = []byte{
	0x0a, 0x26, 0x73, 0x75, 0x64, 0x6f, 0x2f, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61,
	0x70, 0x74, 0x65, 0x72, 0x2f, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64,
	0x61, 0x70, 0x74, 0x65, 0x72, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x16, 0x73, 0x75, 0x64, 0x6f, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x65,
	0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2a, 0x73, 0x75, 0x64, 0x6f,
	0x2f, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2f, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x73, 0x75, 0x64, 0x6f, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb1, 0x02, 0x0a, 0x09, 0x50, 0x61,
	0x72, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6e, 0x6e, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x69, 0x6e, 0x6e, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x6f, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6f, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x6f, 0x70, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f,
	0x70, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x70, 0x5f, 0x70, 0x6f, 0x72, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x47,
	0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4e, 0x0a, 0x14, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x13, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4a, 0x04, 0x08, 0x03, 0x10, 0x04, 0x22, 0xec, 0x03,
	0x0a, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64,
	0x12, 0x34, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73,
	0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66,
	0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x49, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x75, 0x64, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f,
	0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x77, 0x0a,
	0x19, 0x5f, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x5f, 0x75, 0x72, 0x69, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x3d, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x44, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x50,
	0x61, 0x72, 0x74, 0x79, 0x55, 0x72, 0x69, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x15, 0x44, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x55, 0x72, 0x69, 0x4d, 0x61, 0x70, 0x12, 0x47, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x75,
	0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72,
	0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x48, 0x0a, 0x1a,
	0x44, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x55,
	0x72, 0x69, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x4a, 0x04, 0x08, 0x07, 0x10, 0x0d, 0x22, 0xe7, 0x02, 0x0a,
	0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72,
	0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x4b, 0x0a, 0x11, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x5f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1f, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x08, 0x6a, 0x6f, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x4a, 0x6f, 0x62, 0x2e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x4a, 0x04, 0x08, 0x05, 0x10, 0x06, 0x22, 0xca, 0x05, 0x0a, 0x0e, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x79,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x4f, 0x0a, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61,
	0x70, 0x74, 0x65, 0x72, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x52, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61,
	0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x07, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01,
	0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x5f, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x04, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x64,
	0x73, 0x12, 0x41, 0x0a, 0x0c, 0x6f, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x65, 0x6e, 0x75,
	0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x53, 0x74,
	0x61, 0x67, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x45, 0x6e, 0x75, 0x6d, 0x12, 0x3e, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70,
	0x74, 0x65, 0x72, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x6d, 0x0a, 0x0b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x48, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x1a, 0x6e, 0x0a, 0x0c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x48, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x66, 0x0a, 0x07, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x44, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x73, 0x74, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6e, 0x6e,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x69, 0x6e, 0x6e,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x7e, 0x0a, 0x0a, 0x4b,
	0x69, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x40, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64,
	0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x4b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x2e, 0x0a, 0x04, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x00,
	0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09,
	0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0x02, 0x22, 0x77, 0x0a, 0x06, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x42, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70,
	0x74, 0x65, 0x72, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x29, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x44, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a,
	0x04, 0x42, 0x55, 0x53, 0x59, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x10, 0x02, 0x22, 0x5b, 0x0a, 0x0f, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x22, 0x48, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x44, 0x4c, 0x45, 0x10, 0x01, 0x12,
	0x0c, 0x0a, 0x08, 0x52, 0x45, 0x53, 0x45, 0x52, 0x56, 0x45, 0x44, 0x10, 0x02, 0x12, 0x08, 0x0a,
	0x04, 0x42, 0x55, 0x53, 0x59, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x41, 0x44, 0x10,
	0x04, 0x22, 0x43, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x36,
	0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x75,
	0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72,
	0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49,
	0x44, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0xa0, 0x01, 0x0a, 0x14, 0x53, 0x68, 0x6f, 0x77, 0x44,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x27, 0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x5f, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x73,
	0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66,
	0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x44, 0x42, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb9, 0x01, 0x0a, 0x11, 0x53, 0x68,
	0x6f, 0x77, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x27, 0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61,
	0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x42, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xf6, 0x01, 0x0a, 0x10, 0x44, 0x65, 0x73, 0x63, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x66, 0x65, 0x74, 0x63, 0x68, 0x5f, 0x72,
	0x6f, 0x77, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d,
	0x66, 0x65, 0x74, 0x63, 0x68, 0x52, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x5f, 0x0a,
	0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3f, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x42, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4d,
	0x0a, 0x0e, 0x57, 0x61, 0x6c, 0x6b, 0x44, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x27, 0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0xd5, 0x01,
	0x0a, 0x13, 0x44, 0x65, 0x73, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02,
	0x18, 0x01, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x70, 0x61,
	0x74, 0x68, 0x12, 0x4b, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x37, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12,
	0x24, 0x0a, 0x0e, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x72, 0x6f, 0x77, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6e, 0x65, 0x65, 0x64, 0x52, 0x6f, 0x77,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x35, 0x0a, 0x15, 0x53, 0x68, 0x6f, 0x77, 0x44, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x22, 0x2c, 0x0a, 0x12,
	0x53, 0x68, 0x6f, 0x77, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x22, 0xb4, 0x02, 0x0a, 0x11, 0x44,
	0x65, 0x73, 0x63, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x59, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x41, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x44,
	0x65, 0x73, 0x63, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x77, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x72, 0x6f, 0x77, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x1a, 0x8c, 0x01, 0x0a, 0x12, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x69, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x22, 0xd6, 0x01, 0x0a, 0x0f, 0x57, 0x61, 0x6c, 0x6b, 0x44, 0x69, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x2e, 0x57, 0x61, 0x6c, 0x6b, 0x44, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x1a, 0x72, 0x0a, 0x0c, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73,
	0x5f, 0x64, 0x69, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x44, 0x69,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x6c, 0x61,
	0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x22, 0xa2, 0x01, 0x0a, 0x14, 0x44,
	0x65, 0x73, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x77, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x72, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x14, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4d, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x52, 0x75, 0x6e, 0x6e,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x75, 0x64, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f,
	0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x44, 0x52,
	0x03, 0x69, 0x64, 0x73, 0x22, 0x4e, 0x0a, 0x12, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x05, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x75, 0x64, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f,
	0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x05, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x15, 0x0a, 0x13, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x55, 0x0a, 0x12, 0x52,
	0x65, 0x76, 0x6f, 0x6b, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x3f, 0x0a, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65,
	0x72, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x44, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x49, 0x64, 0x22, 0x90, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61,
	0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x2e, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a,
	0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41,
	0x49, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58,
	0x49, 0x53, 0x54, 0x10, 0x02, 0x22, 0x1d, 0x0a, 0x05, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x63,
	0x68, 0x75, 0x6e, 0x6b, 0x22, 0xe4, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x61, 0x64, 0x46, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x2b, 0x0a, 0x0f, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4b, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x66,
	0x69, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x22, 0x54, 0x0a, 0x10, 0x52,
	0x65, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x40, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x53,
	0x71, 0x6c, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x73, 0x22, 0x6a, 0x0a, 0x16, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x50, 0x0a, 0x09, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32,
	0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69,
	0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x70, 0x0a,
	0x17, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x73, 0x75, 0x64,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61,
	0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x52, 0x0a, 0x1c, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x4d, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61,
	0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x44, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x54, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x06,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73,
	0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66,
	0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xaf, 0x02, 0x0a, 0x15, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x34, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69,
	0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x18, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x57, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64,
	0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0x4a,
	0x0a, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x0b, 0x0a, 0x07, 0x47, 0x45,
	0x4e, 0x45, 0x52, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x4e, 0x50, 0x55, 0x54,
	0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x55, 0x54, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x0f,
	0x0a, 0x0b, 0x43, 0x4f, 0x4d, 0x50, 0x55, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x12,
	0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04, 0x22, 0x87, 0x02, 0x0a, 0x14, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x4a, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64,
	0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x53, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10,
	0x01, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x50, 0x41, 0x52,
	0x41, 0x4d, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x4b, 0x49, 0x4c, 0x4c,
	0x45, 0x44, 0x10, 0x04, 0x22, 0x41, 0x0a, 0x19, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x6c, 0x61, 0x76, 0x65, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x67, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x63, 0x68, 0x69, 0x6c, 0x64,
	0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0x8a, 0x01, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x4b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64,
	0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x4b, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x61, 0x74, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x70, 0x61, 0x74, 0x63,
	0x68, 0x22, 0x8c, 0x01, 0x0a, 0x0e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x75, 0x64, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f,
	0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x22, 0xad, 0x01, 0x0a, 0x16, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68,
	0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x67, 0x72, 0x70, 0x63, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x77, 0x73, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x77,
	0x73, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x49, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61,
	0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73,
	0x22, 0x3a, 0x0a, 0x17, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x22, 0xaf, 0x01, 0x0a,
	0x0d, 0x52, 0x75, 0x6e, 0x53, 0x71, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x5f, 0x0a,
	0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3f, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x42, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x42,
	0x0a, 0x09, 0x53, 0x71, 0x6c, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x52, 0x0a, 0x0e, 0x52, 0x75, 0x6e, 0x53, 0x71, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70,
	0x74, 0x65, 0x72, 0x2e, 0x53, 0x71, 0x6c, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x07, 0x63,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x22, 0x17, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x3b, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x22, 0xf9, 0x01, 0x0a,
	0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x62, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f,
	0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69,
	0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x0b, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x1a, 0x7a, 0x0a, 0x0a,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x38,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x73,
	0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x65, 0x6e, 0x75,
	0x6d, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xb0, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64,
	0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x52, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x33, 0x0a, 0x0d, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x65, 0x0a, 0x17, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x67, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72,
	0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x75, 0x73, 0x61,
	0x67, 0x65, 0x22, 0xd1, 0x01, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x44, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2e, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x62, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x52,
	0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x55, 0x43, 0x43,
	0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x45, 0x44, 0x10, 0x03,
	0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x04, 0x12, 0x17, 0x0a,
	0x13, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x05, 0x22, 0x4d, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x34, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x75,
	0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72,
	0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49,
	0x44, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5a, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x40, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x9f, 0x01, 0x0a, 0x17, 0x47, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x54,
	0x6f, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x69, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x22, 0x34, 0x0a, 0x18, 0x47, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x54, 0x6f, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x19, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x46, 0x75, 0x72, 0x6e, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0xba, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x46, 0x75, 0x72, 0x6e,
	0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65,
	0x72, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x75, 0x72, 0x6e, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x1a, 0x42, 0x0a,
	0x08, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x6d, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64,
	0x65, 0x22, 0xe3, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61,
	0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x44, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x6b, 0x0a, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x73, 0x75,
	0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72,
	0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a,
	0x26, 0x0a, 0x0e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x22, 0x79, 0x0a, 0x0e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x10, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x4b,
	0x65, 0x79, 0x22, 0x6e, 0x0a, 0x07, 0x52, 0x6f, 0x77, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x3d, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x75, 0x64,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61,
	0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x72, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x6f, 0x77, 0x12, 0x12,
	0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f,
	0x77, 0x73, 0x22, 0x26, 0x0a, 0x08, 0x52, 0x6f, 0x77, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x22, 0x7d, 0x0a, 0x0c, 0x50, 0x72,
	0x65, 0x64, 0x69, 0x63, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x73, 0x12, 0x44, 0x0a, 0x0a, 0x72, 0x6f, 0x77, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64,
	0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x52, 0x6f, 0x77, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09,
	0x72, 0x6f, 0x77, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0xb9, 0x01, 0x0a, 0x0c, 0x50, 0x72,
	0x65, 0x64, 0x69, 0x63, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x57, 0x0a, 0x11, 0x6f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70,
	0x74, 0x65, 0x72, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x4b,
	0x65, 0x79, 0x52, 0x0f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x4b,
	0x65, 0x79, 0x73, 0x12, 0x50, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x75,
	0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72,
	0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63,
	0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x73, 0x22, 0xef, 0x01, 0x0a, 0x14, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x40, 0x0a,
	0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e,
	0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x52, 0x6f, 0x77, 0x4b,
	0x65, 0x79, 0x73, 0x42, 0x02, 0x18, 0x01, 0x52, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12,
	0x21, 0x0a, 0x0c, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x03, 0x69, 0x64, 0x73, 0x12, 0x41, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x2e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52,
	0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0xfc, 0x01, 0x0a, 0x15, 0x4f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5a, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x3e, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e,
	0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x42, 0x02, 0x18, 0x01, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x4c, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x73,
	0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66,
	0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xee, 0x02, 0x0a, 0x19, 0x4f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x55, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x5a, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x73, 0x75,
	0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72,
	0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6e, 0x67, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x1a, 0x39, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3a, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53,
	0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x5f,
	0x41, 0x4e, 0x59, 0x57, 0x48, 0x45, 0x52, 0x45, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x41,
	0x52, 0x54, 0x49, 0x41, 0x4c, 0x10, 0x02, 0x22, 0xaa, 0x01, 0x0a, 0x10, 0x4f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x50, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x72, 0x69, 0x12, 0x2c, 0x0a, 0x12, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x4b, 0x65, 0x79, 0x22, 0x28, 0x0a, 0x10, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x69,
	0x72, 0x52, 0x65, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2e,
	0x0a, 0x0d, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0xa8,
	0x05, 0x0a, 0x0b, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x4f, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x73, 0x75,
	0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72,
	0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x09,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x47, 0x0a, 0x0b, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69,
	0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x12, 0x69, 0x0a, 0x11, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e,
	0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e,
	0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x4f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x2a, 0x0a,
	0x11, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x55, 0x0a, 0x11, 0x74, 0x72, 0x69,
	0x70, 0x6c, 0x65, 0x74, 0x73, 0x5f, 0x62, 0x69, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x54, 0x72, 0x69, 0x70, 0x6c,
	0x65, 0x74, 0x73, 0x42, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0f, 0x74, 0x72, 0x69, 0x70, 0x6c, 0x65, 0x74, 0x73, 0x42, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x66, 0x0a, 0x15, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x33, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x48, 0x61, 0x73, 0x68, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x12, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x48, 0x61, 0x73, 0x68, 0x42,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x6f, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x41, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e,
	0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x4b, 0x65, 0x79, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3c, 0x0a, 0x1b, 0x53, 0x79, 0x6e,
	0x63, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0xf0, 0x01, 0x0a, 0x1c, 0x53, 0x79, 0x6e, 0x63,
	0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61,
	0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x5f, 0x6d, 0x73, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x5a,
	0x0a, 0x10, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61,
	0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x48, 0x61, 0x73, 0x68,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x68, 0x61, 0x73, 0x68,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xd0, 0x02, 0x0a, 0x16, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x48, 0x61, 0x73, 0x68, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x50, 0x0a, 0x08, 0x64, 0x62, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61,
	0x70, 0x74, 0x65, 0x72, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x42, 0x52, 0x07, 0x64,
	0x62, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6b, 0x65, 0x79, 0x5f, 0x63, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x43,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x5a, 0x0a, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x73,
	0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66,
	0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x44, 0x42, 0x52, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xc3, 0x01,
	0x0a, 0x14, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x67,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x67, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x48, 0x0a, 0x07, 0x70, 0x61, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70,
	0x74, 0x65, 0x72, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x23,
	0x0a, 0x0d, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x22, 0xaf, 0x04, 0x0a, 0x11, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x49, 0x64, 0x12, 0x52, 0x0a, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x1a, 0xb0, 0x02, 0x0a, 0x0e, 0x4f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4e, 0x0a, 0x07, 0x70,
	0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x73,
	0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66,
	0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x00, 0x52, 0x07, 0x70, 0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x49, 0x0a, 0x08, 0x75,
	0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e,
	0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x4f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x4b, 0x65, 0x79, 0x48, 0x00, 0x52, 0x08, 0x75, 0x70,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x42, 0x0a, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61,
	0x70, 0x74, 0x65, 0x72, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x48, 0x00, 0x52, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x66, 0x72,
	0x6f, 0x6d, 0x5f, 0x61, 0x70, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x70, 0x69, 0x42,
	0x0a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x78, 0x0a, 0x0b, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x53, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x73, 0x75,
	0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72,
	0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x2e, 0x4f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x82, 0x03, 0x0a, 0x0b, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x49, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f, 0x77, 0x48, 0x00, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x52, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65,
	0x72, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x43, 0x6f,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x73, 0x48, 0x00, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x73, 0x1a, 0xa2, 0x01, 0x0a, 0x08, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f,
	0x77, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x61,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4e, 0x0a, 0x05, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x73, 0x75, 0x64, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f,
	0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6b, 0x65,
	0x79, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6b, 0x65, 0x79, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x1a, 0x23, 0x0a, 0x09, 0x43, 0x6f, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x42, 0x0a,
	0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x69, 0x0a, 0x1c, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x49, 0x0a, 0x09, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e,
	0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x73, 0x22, 0x7b, 0x0a, 0x13, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x48, 0x61,
	0x73, 0x68, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x45, 0x0a, 0x0a,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x4f,
	0x64, 0x62, 0x63, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6b, 0x65, 0x79, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x43, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x22, 0xe7, 0x01, 0x0a, 0x09, 0x4f, 0x64, 0x62, 0x63, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x4b, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x2e, 0x4f, 0x64, 0x62, 0x63, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x42, 0x0a,
	0x07, 0x64, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29,
	0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69,
	0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x64, 0x62, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x49, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65,
	0x72, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x72, 0x0a, 0x10,
	0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x3a, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x42, 0x0a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x6c, 0x0a, 0x05, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x40, 0x0a, 0x05, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61,
	0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x22, 0x41,
	0x0a, 0x0d, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x22, 0xa6, 0x01, 0x0a, 0x0e, 0x4f, 0x64, 0x62, 0x63, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x12, 0x57, 0x0a, 0x10, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e,
	0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x64, 0x61,
	0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x0c, 0x0a, 0x0a,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5a, 0x0a, 0x0e, 0x44, 0x61,
	0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x64, 0x73, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x73, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x2a, 0x4f, 0x0a, 0x0a, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0x00, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x45, 0x50, 0x4c, 0x4f, 0x59, 0x49, 0x4e, 0x47, 0x10, 0x01,
	0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x02, 0x12, 0x0a, 0x0a,
	0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x55, 0x50, 0x44,
	0x41, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x2a, 0x56, 0x0a, 0x0c, 0x44, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x41, 0x54, 0x41, 0x42,
	0x41, 0x53, 0x45, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x10, 0x00, 0x12,
	0x15, 0x0a, 0x11, 0x44, 0x41, 0x54, 0x41, 0x42, 0x41, 0x53, 0x45, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x48, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x44, 0x41, 0x54, 0x41, 0x42, 0x41,
	0x53, 0x45, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f, 0x52, 0x41, 0x43, 0x4c, 0x45, 0x10, 0x02, 0x42,
	0x13, 0x5a, 0x11, 0x70, 0x72, 0x69, 0x76, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sudo_infra_adapter_infra_adapter_proto_rawDescOnce sync.Once
	file_sudo_infra_adapter_infra_adapter_proto_rawDescData = file_sudo_infra_adapter_infra_adapter_proto_rawDesc
)

func file_sudo_infra_adapter_infra_adapter_proto_rawDescGZIP() []byte {
	file_sudo_infra_adapter_infra_adapter_proto_rawDescOnce.Do(func() {
		file_sudo_infra_adapter_infra_adapter_proto_rawDescData = protoimpl.X.CompressGZIP(file_sudo_infra_adapter_infra_adapter_proto_rawDescData)
	})
	return file_sudo_infra_adapter_infra_adapter_proto_rawDescData
}

var file_sudo_infra_adapter_infra_adapter_proto_enumTypes = make([]protoimpl.EnumInfo, 10)
var file_sudo_infra_adapter_infra_adapter_proto_msgTypes = make([]protoimpl.MessageInfo, 99)
var file_sudo_infra_adapter_infra_adapter_proto_goTypes = []interface{}{
	(SyncStatus)(0),                                // 0: sudo.protobuf.infra_adapter.SyncStatus
	(DatabaseType)(0),                              // 1: sudo.protobuf.infra_adapter.DatabaseType
	(KillResult_Code)(0),                           // 2: sudo.protobuf.infra_adapter.KillResult.Code
	(Health_Status)(0),                             // 3: sudo.protobuf.infra_adapter.Health.Status
	(OperatorMachine_Status)(0),                    // 4: sudo.protobuf.infra_adapter.OperatorMachine.Status
	(RevokeBlockResponse_Code)(0),                  // 5: sudo.protobuf.infra_adapter.RevokeBlockResponse.Code
	(UpdateProgressRequest_Category)(0),            // 6: sudo.protobuf.infra_adapter.UpdateProgressRequest.Category
	(CompleteStageRequest_Code)(0),                 // 7: sudo.protobuf.infra_adapter.CompleteStageRequest.Code
	(BlockStatus_State)(0),                         // 8: sudo.protobuf.infra_adapter.BlockStatus.State
	(OnlinePredictResponseItem_Status)(0),          // 9: sudo.protobuf.infra_adapter.OnlinePredictResponseItem.Status
	(*PartyInfo)(nil),                              // 10: sudo.protobuf.infra_adapter.PartyInfo
	(*Block)(nil),                                  // 11: sudo.protobuf.infra_adapter.Block
	(*CreateBlockRequest)(nil),                     // 12: sudo.protobuf.infra_adapter.CreateBlockRequest
	(*OperatorConfig)(nil),                         // 13: sudo.protobuf.infra_adapter.OperatorConfig
	(*BlockID)(nil),                                // 14: sudo.protobuf.infra_adapter.BlockID
	(*KillResult)(nil),                             // 15: sudo.protobuf.infra_adapter.KillResult
	(*Health)(nil),                                 // 16: sudo.protobuf.infra_adapter.Health
	(*OperatorMachine)(nil),                        // 17: sudo.protobuf.infra_adapter.OperatorMachine
	(*StageList)(nil),                              // 18: sudo.protobuf.infra_adapter.StageList
	(*ShowDatabasesRequest)(nil),                   // 19: sudo.protobuf.infra_adapter.ShowDatabasesRequest
	(*ShowTablesRequest)(nil),                      // 20: sudo.protobuf.infra_adapter.ShowTablesRequest
	(*DescTableRequest)(nil),                       // 21: sudo.protobuf.infra_adapter.DescTableRequest
	(*WalkDirRequest)(nil),                         // 22: sudo.protobuf.infra_adapter.WalkDirRequest
	(*DescFileNodeRequest)(nil),                    // 23: sudo.protobuf.infra_adapter.DescFileNodeRequest
	(*ShowDatabasesResponse)(nil),                  // 24: sudo.protobuf.infra_adapter.ShowDatabasesResponse
	(*ShowTablesResponse)(nil),                     // 25: sudo.protobuf.infra_adapter.ShowTablesResponse
	(*DescTableResponse)(nil),                      // 26: sudo.protobuf.infra_adapter.DescTableResponse
	(*WalkDirResponse)(nil),                        // 27: sudo.protobuf.infra_adapter.WalkDirResponse
	(*DescFileNodeResponse)(nil),                   // 28: sudo.protobuf.infra_adapter.DescFileNodeResponse
	(*GetRunningsRequest)(nil),                     // 29: sudo.protobuf.infra_adapter.GetRunningsRequest
	(*GetRunningsResponse)(nil),                    // 30: sudo.protobuf.infra_adapter.GetRunningsResponse
	(*LaunchBlockRequest)(nil),                     // 31: sudo.protobuf.infra_adapter.LaunchBlockRequest
	(*LaunchBlockResponse)(nil),                    // 32: sudo.protobuf.infra_adapter.LaunchBlockResponse
	(*RevokeBlockRequest)(nil),                     // 33: sudo.protobuf.infra_adapter.RevokeBlockRequest
	(*RevokeBlockResponse)(nil),                    // 34: sudo.protobuf.infra_adapter.RevokeBlockResponse
	(*Chunk)(nil),                                  // 35: sudo.protobuf.infra_adapter.Chunk
	(*ReadFileRequest)(nil),                        // 36: sudo.protobuf.infra_adapter.ReadFileRequest
	(*ReadFileResponse)(nil),                       // 37: sudo.protobuf.infra_adapter.ReadFileResponse
	(*RemoveResourcesRequest)(nil),                 // 38: sudo.protobuf.infra_adapter.RemoveResourcesRequest
	(*RemoveResourcesResponse)(nil),                // 39: sudo.protobuf.infra_adapter.RemoveResourcesResponse
	(*SingleRemoveResourceResponse)(nil),           // 40: sudo.protobuf.infra_adapter.SingleRemoveResourceResponse
	(*GetStageConfigRequest)(nil),                  // 41: sudo.protobuf.infra_adapter.GetStageConfigRequest
	(*GetStageConfigResponse)(nil),                 // 42: sudo.protobuf.infra_adapter.GetStageConfigResponse
	(*UpdateProgressRequest)(nil),                  // 43: sudo.protobuf.infra_adapter.UpdateProgressRequest
	(*CompleteStageRequest)(nil),                   // 44: sudo.protobuf.infra_adapter.CompleteStageRequest
	(*CompleteSlaveStageRequest)(nil),              // 45: sudo.protobuf.infra_adapter.CompleteSlaveStageRequest
	(*UpdateMachineStatusRequest)(nil),             // 46: sudo.protobuf.infra_adapter.UpdateMachineStatusRequest
	(*Version)(nil),                                // 47: sudo.protobuf.infra_adapter.Version
	(*OperatorSchema)(nil),                         // 48: sudo.protobuf.infra_adapter.OperatorSchema
	(*RegisterMachineRequest)(nil),                 // 49: sudo.protobuf.infra_adapter.RegisterMachineRequest
	(*RegisterMachineResponse)(nil),                // 50: sudo.protobuf.infra_adapter.RegisterMachineResponse
	(*RunSqlRequest)(nil),                          // 51: sudo.protobuf.infra_adapter.RunSqlRequest
	(*SqlColumn)(nil),                              // 52: sudo.protobuf.infra_adapter.SqlColumn
	(*RunSqlResponse)(nil),                         // 53: sudo.protobuf.infra_adapter.RunSqlResponse
	(*GetCodeVersionRequest)(nil),                  // 54: sudo.protobuf.infra_adapter.GetCodeVersionRequest
	(*GetCodeVersionResponse)(nil),                 // 55: sudo.protobuf.infra_adapter.GetCodeVersionResponse
	(*UpdateDataSourceRequest)(nil),                // 56: sudo.protobuf.infra_adapter.UpdateDataSourceRequest
	(*UpdateDataSourceResponse)(nil),               // 57: sudo.protobuf.infra_adapter.UpdateDataSourceResponse
	(*ReportStageUsageRequest)(nil),                // 58: sudo.protobuf.infra_adapter.ReportStageUsageRequest
	(*BlockStatus)(nil),                            // 59: sudo.protobuf.infra_adapter.BlockStatus
	(*GetBlockStatusRequest)(nil),                  // 60: sudo.protobuf.infra_adapter.GetBlockStatusRequest
	(*GetBlockStatusResponse)(nil),                 // 61: sudo.protobuf.infra_adapter.GetBlockStatusResponse
	(*GrpcProxyToPartyRequest)(nil),                // 62: sudo.protobuf.infra_adapter.GrpcProxyToPartyRequest
	(*GrpcProxyToPartyResponse)(nil),               // 63: sudo.protobuf.infra_adapter.GrpcProxyToPartyResponse
	(*GetFurnaceConfigRequest)(nil),                // 64: sudo.protobuf.infra_adapter.GetFurnaceConfigRequest
	(*GetFurnaceConfigResponse)(nil),               // 65: sudo.protobuf.infra_adapter.GetFurnaceConfigResponse
	(*UpdateBlockInfoRequest)(nil),                 // 66: sudo.protobuf.infra_adapter.UpdateBlockInfoRequest
	(*OnlineParamKey)(nil),                         // 67: sudo.protobuf.infra_adapter.OnlineParamKey
	(*RowKeys)(nil),                                // 68: sudo.protobuf.infra_adapter.RowKeys
	(*RowValue)(nil),                               // 69: sudo.protobuf.infra_adapter.RowValue
	(*PredictInput)(nil),                           // 70: sudo.protobuf.infra_adapter.PredictInput
	(*PredictParam)(nil),                           // 71: sudo.protobuf.infra_adapter.PredictParam
	(*OnlinePredictRequest)(nil),                   // 72: sudo.protobuf.infra_adapter.OnlinePredictRequest
	(*OnlinePredictResponse)(nil),                  // 73: sudo.protobuf.infra_adapter.OnlinePredictResponse
	(*OnlinePredictResponseItem)(nil),              // 74: sudo.protobuf.infra_adapter.OnlinePredictResponseItem
	(*OnlinePirRequest)(nil),                       // 75: sudo.protobuf.infra_adapter.OnlinePirRequest
	(*OnlinePirReponse)(nil),                       // 76: sudo.protobuf.infra_adapter.OnlinePirReponse
	(*OnlineBlockId)(nil),                          // 77: sudo.protobuf.infra_adapter.OnlineBlockId
	(*OnlineBlock)(nil),                            // 78: sudo.protobuf.infra_adapter.OnlineBlock
	(*SyncOnlineDeployInfoRequest)(nil),            // 79: sudo.protobuf.infra_adapter.SyncOnlineDeployInfoRequest
	(*SyncOnlineDeployInfoResponse)(nil),           // 80: sudo.protobuf.infra_adapter.SyncOnlineDeployInfoResponse
	(*TableHashBucketRequest)(nil),                 // 81: sudo.protobuf.infra_adapter.TableHashBucketRequest
	(*OnlineOperatorConfig)(nil),                   // 82: sudo.protobuf.infra_adapter.OnlineOperatorConfig
	(*OnlineParticipant)(nil),                      // 83: sudo.protobuf.infra_adapter.OnlineParticipant
	(*OnlineInput)(nil),                            // 84: sudo.protobuf.infra_adapter.OnlineInput
	(*UpdateOperatorSchemasRequest)(nil),           // 85: sudo.protobuf.infra_adapter.UpdateOperatorSchemasRequest
	(*TableHashBucketInfo)(nil),                    // 86: sudo.protobuf.infra_adapter.TableHashBucketInfo
	(*OdbcQuery)(nil),                              // 87: sudo.protobuf.infra_adapter.OdbcQuery
	(*DatabaseLocation)(nil),                       // 88: sudo.protobuf.infra_adapter.DatabaseLocation
	(*Table)(nil),                                  // 89: sudo.protobuf.infra_adapter.Table
	(*DatabaseTable)(nil),                          // 90: sudo.protobuf.infra_adapter.DatabaseTable
	(*OdbcConnection)(nil),                         // 91: sudo.protobuf.infra_adapter.OdbcConnection
	(*DataSourceName)(nil),                         // 92: sudo.protobuf.infra_adapter.DataSourceName
	nil,                                            // 93: sudo.protobuf.infra_adapter.Block.DeprecatedPartyUriMapEntry
	nil,                                            // 94: sudo.protobuf.infra_adapter.OperatorConfig.InputsEntry
	nil,                                            // 95: sudo.protobuf.infra_adapter.OperatorConfig.OutputsEntry
	(*DescTableResponse_TableFieldMetaInfo)(nil),   // 96: sudo.protobuf.infra_adapter.DescTableResponse.TableFieldMetaInfo
	(*WalkDirResponse_NodeMetaInfo)(nil),           // 97: sudo.protobuf.infra_adapter.WalkDirResponse.NodeMetaInfo
	(*UpdateDataSourceRequest_DataSource)(nil),     // 98: sudo.protobuf.infra_adapter.UpdateDataSourceRequest.DataSource
	(*UpdateDataSourceResponse_DatasourceRes)(nil), // 99: sudo.protobuf.infra_adapter.UpdateDataSourceResponse.DatasourceRes
	(*GetFurnaceConfigResponse_Resource)(nil),      // 100: sudo.protobuf.infra_adapter.GetFurnaceConfigResponse.Resource
	(*UpdateBlockInfoRequest_OperatorStatus)(nil),  // 101: sudo.protobuf.infra_adapter.UpdateBlockInfoRequest.OperatorStatus
	nil,                                      // 102: sudo.protobuf.infra_adapter.OnlinePredictResponse.ResultEntry
	nil,                                      // 103: sudo.protobuf.infra_adapter.OnlinePredictResponseItem.ResultEntry
	nil,                                      // 104: sudo.protobuf.infra_adapter.OnlineBlock.ResultMemoryKeyEntry
	(*OnlineParticipant_OnlineLocation)(nil), // 105: sudo.protobuf.infra_adapter.OnlineParticipant.OnlineLocation
	nil,                                      // 106: sudo.protobuf.infra_adapter.OnlineParticipant.InputsEntry
	(*OnlineInput_TableRow)(nil),             // 107: sudo.protobuf.infra_adapter.OnlineInput.TableRow
	(*OnlineInput_Constants)(nil),            // 108: sudo.protobuf.infra_adapter.OnlineInput.Constants
	(enums.Resource_Type)(0),                 // 109: sudo.protobuf.enums.Resource.Type
	(*common.ResourceRequirement)(nil),       // 110: common.ResourceRequirement
	(enums.Stage_Type)(0),                    // 111: sudo.protobuf.enums.Stage.Type
	(enums.Job_Type)(0),                      // 112: sudo.protobuf.enums.Job.Type
	(*infra_adapter.DataLocation_DBConnection)(nil), // 113: sudo.protobuf.infra_adapter.location.DataLocation.DBConnection
	(*infra_adapter.DataLocation_File)(nil),         // 114: sudo.protobuf.infra_adapter.location.DataLocation.File
	(*infra_adapter.DataLocation)(nil),              // 115: sudo.protobuf.infra_adapter.location.DataLocation
	(enums.TripletsBitInfo_Type)(0),                 // 116: sudo.protobuf.enums.TripletsBitInfo.Type
	(*infra_adapter.DataLocation_DB)(nil),           // 117: sudo.protobuf.infra_adapter.location.DataLocation.DB
	(enums.Datasource_Type)(0),                      // 118: sudo.protobuf.enums.Datasource.Type
	(enums.Resource_Mode)(0),                        // 119: sudo.protobuf.enums.Resource.Mode
	(*emptypb.Empty)(nil),                           // 120: google.protobuf.Empty
	(*infra_adapter.DataLocation_Table)(nil),        // 121: sudo.protobuf.infra_adapter.location.DataLocation.Table
}
var file_sudo_infra_adapter_infra_adapter_proto_depIdxs = []int32{
	109, // 0: sudo.protobuf.infra_adapter.PartyInfo.resource_type:type_name -> sudo.protobuf.enums.Resource.Type
	110, // 1: sudo.protobuf.infra_adapter.PartyInfo.resource_requirement:type_name -> common.ResourceRequirement
	14,  // 2: sudo.protobuf.infra_adapter.Block.id:type_name -> sudo.protobuf.infra_adapter.BlockID
	13,  // 3: sudo.protobuf.infra_adapter.Block.operators:type_name -> sudo.protobuf.infra_adapter.OperatorConfig
	93,  // 4: sudo.protobuf.infra_adapter.Block._deprecated_party_uri_map:type_name -> sudo.protobuf.infra_adapter.Block.DeprecatedPartyUriMapEntry
	10,  // 5: sudo.protobuf.infra_adapter.Block.party_infos:type_name -> sudo.protobuf.infra_adapter.PartyInfo
	11,  // 6: sudo.protobuf.infra_adapter.CreateBlockRequest.block:type_name -> sudo.protobuf.infra_adapter.Block
	111, // 7: sudo.protobuf.infra_adapter.CreateBlockRequest.origin_stage_type:type_name -> sudo.protobuf.enums.Stage.Type
	112, // 8: sudo.protobuf.infra_adapter.CreateBlockRequest.job_type:type_name -> sudo.protobuf.enums.Job.Type
	94,  // 9: sudo.protobuf.infra_adapter.OperatorConfig.inputs:type_name -> sudo.protobuf.infra_adapter.OperatorConfig.InputsEntry
	95,  // 10: sudo.protobuf.infra_adapter.OperatorConfig.outputs:type_name -> sudo.protobuf.infra_adapter.OperatorConfig.OutputsEntry
	111, // 11: sudo.protobuf.infra_adapter.OperatorConfig.op_type_enum:type_name -> sudo.protobuf.enums.Stage.Type
	47,  // 12: sudo.protobuf.infra_adapter.OperatorConfig.version:type_name -> sudo.protobuf.infra_adapter.Version
	2,   // 13: sudo.protobuf.infra_adapter.KillResult.code:type_name -> sudo.protobuf.infra_adapter.KillResult.Code
	3,   // 14: sudo.protobuf.infra_adapter.Health.status:type_name -> sudo.protobuf.infra_adapter.Health.Status
	14,  // 15: sudo.protobuf.infra_adapter.StageList.ids:type_name -> sudo.protobuf.infra_adapter.BlockID
	113, // 16: sudo.protobuf.infra_adapter.ShowDatabasesRequest.connection:type_name -> sudo.protobuf.infra_adapter.location.DataLocation.DBConnection
	113, // 17: sudo.protobuf.infra_adapter.ShowTablesRequest.connection:type_name -> sudo.protobuf.infra_adapter.location.DataLocation.DBConnection
	113, // 18: sudo.protobuf.infra_adapter.DescTableRequest.connection:type_name -> sudo.protobuf.infra_adapter.location.DataLocation.DBConnection
	114, // 19: sudo.protobuf.infra_adapter.DescFileNodeRequest.file:type_name -> sudo.protobuf.infra_adapter.location.DataLocation.File
	96,  // 20: sudo.protobuf.infra_adapter.DescTableResponse.fields:type_name -> sudo.protobuf.infra_adapter.DescTableResponse.TableFieldMetaInfo
	97,  // 21: sudo.protobuf.infra_adapter.WalkDirResponse.nodes:type_name -> sudo.protobuf.infra_adapter.WalkDirResponse.NodeMetaInfo
	14,  // 22: sudo.protobuf.infra_adapter.GetRunningsResponse.ids:type_name -> sudo.protobuf.infra_adapter.BlockID
	11,  // 23: sudo.protobuf.infra_adapter.LaunchBlockRequest.block:type_name -> sudo.protobuf.infra_adapter.Block
	14,  // 24: sudo.protobuf.infra_adapter.RevokeBlockRequest.block_id:type_name -> sudo.protobuf.infra_adapter.BlockID
	5,   // 25: sudo.protobuf.infra_adapter.RevokeBlockResponse.code:type_name -> sudo.protobuf.infra_adapter.RevokeBlockResponse.Code
	114, // 26: sudo.protobuf.infra_adapter.ReadFileRequest.file:type_name -> sudo.protobuf.infra_adapter.location.DataLocation.File
	52,  // 27: sudo.protobuf.infra_adapter.ReadFileResponse.columns:type_name -> sudo.protobuf.infra_adapter.SqlColumn
	115, // 28: sudo.protobuf.infra_adapter.RemoveResourcesRequest.locations:type_name -> sudo.protobuf.infra_adapter.location.DataLocation
	40,  // 29: sudo.protobuf.infra_adapter.RemoveResourcesResponse.response:type_name -> sudo.protobuf.infra_adapter.SingleRemoveResourceResponse
	14,  // 30: sudo.protobuf.infra_adapter.GetStageConfigRequest.id:type_name -> sudo.protobuf.infra_adapter.BlockID
	11,  // 31: sudo.protobuf.infra_adapter.GetStageConfigResponse.config:type_name -> sudo.protobuf.infra_adapter.Block
	14,  // 32: sudo.protobuf.infra_adapter.UpdateProgressRequest.id:type_name -> sudo.protobuf.infra_adapter.BlockID
	6,   // 33: sudo.protobuf.infra_adapter.UpdateProgressRequest.category:type_name -> sudo.protobuf.infra_adapter.UpdateProgressRequest.Category
	14,  // 34: sudo.protobuf.infra_adapter.CompleteStageRequest.id:type_name -> sudo.protobuf.infra_adapter.BlockID
	7,   // 35: sudo.protobuf.infra_adapter.CompleteStageRequest.code:type_name -> sudo.protobuf.infra_adapter.CompleteStageRequest.Code
	4,   // 36: sudo.protobuf.infra_adapter.UpdateMachineStatusRequest.status:type_name -> sudo.protobuf.infra_adapter.OperatorMachine.Status
	47,  // 37: sudo.protobuf.infra_adapter.OperatorSchema.version:type_name -> sudo.protobuf.infra_adapter.Version
	48,  // 38: sudo.protobuf.infra_adapter.RegisterMachineRequest.operators:type_name -> sudo.protobuf.infra_adapter.OperatorSchema
	113, // 39: sudo.protobuf.infra_adapter.RunSqlRequest.connection:type_name -> sudo.protobuf.infra_adapter.location.DataLocation.DBConnection
	52,  // 40: sudo.protobuf.infra_adapter.RunSqlResponse.columns:type_name -> sudo.protobuf.infra_adapter.SqlColumn
	98,  // 41: sudo.protobuf.infra_adapter.UpdateDataSourceRequest.data_sources:type_name -> sudo.protobuf.infra_adapter.UpdateDataSourceRequest.DataSource
	99,  // 42: sudo.protobuf.infra_adapter.UpdateDataSourceResponse.response:type_name -> sudo.protobuf.infra_adapter.UpdateDataSourceResponse.DatasourceRes
	14,  // 43: sudo.protobuf.infra_adapter.ReportStageUsageRequest.id:type_name -> sudo.protobuf.infra_adapter.BlockID
	8,   // 44: sudo.protobuf.infra_adapter.BlockStatus.state:type_name -> sudo.protobuf.infra_adapter.BlockStatus.State
	14,  // 45: sudo.protobuf.infra_adapter.GetBlockStatusRequest.id:type_name -> sudo.protobuf.infra_adapter.BlockID
	59,  // 46: sudo.protobuf.infra_adapter.GetBlockStatusResponse.status:type_name -> sudo.protobuf.infra_adapter.BlockStatus
	100, // 47: sudo.protobuf.infra_adapter.GetFurnaceConfigResponse.resource:type_name -> sudo.protobuf.infra_adapter.GetFurnaceConfigResponse.Resource
	14,  // 48: sudo.protobuf.infra_adapter.UpdateBlockInfoRequest.id:type_name -> sudo.protobuf.infra_adapter.BlockID
	101, // 49: sudo.protobuf.infra_adapter.UpdateBlockInfoRequest.operator_status:type_name -> sudo.protobuf.infra_adapter.UpdateBlockInfoRequest.OperatorStatus
	67,  // 50: sudo.protobuf.infra_adapter.RowKeys.key:type_name -> sudo.protobuf.infra_adapter.OnlineParamKey
	69,  // 51: sudo.protobuf.infra_adapter.PredictInput.row_values:type_name -> sudo.protobuf.infra_adapter.RowValue
	67,  // 52: sudo.protobuf.infra_adapter.PredictParam.online_param_keys:type_name -> sudo.protobuf.infra_adapter.OnlineParamKey
	70,  // 53: sudo.protobuf.infra_adapter.PredictParam.predict_inputs:type_name -> sudo.protobuf.infra_adapter.PredictInput
	68,  // 54: sudo.protobuf.infra_adapter.OnlinePredictRequest.inputs:type_name -> sudo.protobuf.infra_adapter.RowKeys
	71,  // 55: sudo.protobuf.infra_adapter.OnlinePredictRequest.params:type_name -> sudo.protobuf.infra_adapter.PredictParam
	102, // 56: sudo.protobuf.infra_adapter.OnlinePredictResponse.result:type_name -> sudo.protobuf.infra_adapter.OnlinePredictResponse.ResultEntry
	74,  // 57: sudo.protobuf.infra_adapter.OnlinePredictResponse.items:type_name -> sudo.protobuf.infra_adapter.OnlinePredictResponseItem
	9,   // 58: sudo.protobuf.infra_adapter.OnlinePredictResponseItem.status:type_name -> sudo.protobuf.infra_adapter.OnlinePredictResponseItem.Status
	103, // 59: sudo.protobuf.infra_adapter.OnlinePredictResponseItem.result:type_name -> sudo.protobuf.infra_adapter.OnlinePredictResponseItem.ResultEntry
	82,  // 60: sudo.protobuf.infra_adapter.OnlineBlock.operators:type_name -> sudo.protobuf.infra_adapter.OnlineOperatorConfig
	10,  // 61: sudo.protobuf.infra_adapter.OnlineBlock.party_infos:type_name -> sudo.protobuf.infra_adapter.PartyInfo
	104, // 62: sudo.protobuf.infra_adapter.OnlineBlock.result_memory_key:type_name -> sudo.protobuf.infra_adapter.OnlineBlock.ResultMemoryKeyEntry
	116, // 63: sudo.protobuf.infra_adapter.OnlineBlock.triplets_bit_info:type_name -> sudo.protobuf.enums.TripletsBitInfo.Type
	81,  // 64: sudo.protobuf.infra_adapter.OnlineBlock.table_hash_bucket_req:type_name -> sudo.protobuf.infra_adapter.TableHashBucketRequest
	0,   // 65: sudo.protobuf.infra_adapter.SyncOnlineDeployInfoResponse.status:type_name -> sudo.protobuf.infra_adapter.SyncStatus
	86,  // 66: sudo.protobuf.infra_adapter.SyncOnlineDeployInfoResponse.hash_bucket_info:type_name -> sudo.protobuf.infra_adapter.TableHashBucketInfo
	117, // 67: sudo.protobuf.infra_adapter.TableHashBucketRequest.db_table:type_name -> sudo.protobuf.infra_adapter.location.DataLocation.DB
	117, // 68: sudo.protobuf.infra_adapter.TableHashBucketRequest.storage_table:type_name -> sudo.protobuf.infra_adapter.location.DataLocation.DB
	83,  // 69: sudo.protobuf.infra_adapter.OnlineOperatorConfig.parties:type_name -> sudo.protobuf.infra_adapter.OnlineParticipant
	106, // 70: sudo.protobuf.infra_adapter.OnlineParticipant.inputs:type_name -> sudo.protobuf.infra_adapter.OnlineParticipant.InputsEntry
	107, // 71: sudo.protobuf.infra_adapter.OnlineInput.table:type_name -> sudo.protobuf.infra_adapter.OnlineInput.TableRow
	108, // 72: sudo.protobuf.infra_adapter.OnlineInput.constants:type_name -> sudo.protobuf.infra_adapter.OnlineInput.Constants
	48,  // 73: sudo.protobuf.infra_adapter.UpdateOperatorSchemasRequest.operators:type_name -> sudo.protobuf.infra_adapter.OperatorSchema
	87,  // 74: sudo.protobuf.infra_adapter.TableHashBucketInfo.data_table:type_name -> sudo.protobuf.infra_adapter.OdbcQuery
	91,  // 75: sudo.protobuf.infra_adapter.OdbcQuery.connection:type_name -> sudo.protobuf.infra_adapter.OdbcConnection
	1,   // 76: sudo.protobuf.infra_adapter.OdbcQuery.db_type:type_name -> sudo.protobuf.infra_adapter.DatabaseType
	88,  // 77: sudo.protobuf.infra_adapter.OdbcQuery.location:type_name -> sudo.protobuf.infra_adapter.DatabaseLocation
	89,  // 78: sudo.protobuf.infra_adapter.DatabaseLocation.table:type_name -> sudo.protobuf.infra_adapter.Table
	90,  // 79: sudo.protobuf.infra_adapter.Table.table:type_name -> sudo.protobuf.infra_adapter.DatabaseTable
	92,  // 80: sudo.protobuf.infra_adapter.OdbcConnection.data_source_name:type_name -> sudo.protobuf.infra_adapter.DataSourceName
	115, // 81: sudo.protobuf.infra_adapter.OperatorConfig.InputsEntry.value:type_name -> sudo.protobuf.infra_adapter.location.DataLocation
	115, // 82: sudo.protobuf.infra_adapter.OperatorConfig.OutputsEntry.value:type_name -> sudo.protobuf.infra_adapter.location.DataLocation
	118, // 83: sudo.protobuf.infra_adapter.UpdateDataSourceRequest.DataSource.type:type_name -> sudo.protobuf.enums.Datasource.Type
	119, // 84: sudo.protobuf.infra_adapter.GetFurnaceConfigResponse.Resource.mode:type_name -> sudo.protobuf.enums.Resource.Mode
	67,  // 85: sudo.protobuf.infra_adapter.OnlineBlock.ResultMemoryKeyEntry.value:type_name -> sudo.protobuf.infra_adapter.OnlineParamKey
	115, // 86: sudo.protobuf.infra_adapter.OnlineParticipant.OnlineLocation.preload:type_name -> sudo.protobuf.infra_adapter.location.DataLocation
	67,  // 87: sudo.protobuf.infra_adapter.OnlineParticipant.OnlineLocation.upstream:type_name -> sudo.protobuf.infra_adapter.OnlineParamKey
	84,  // 88: sudo.protobuf.infra_adapter.OnlineParticipant.OnlineLocation.online:type_name -> sudo.protobuf.infra_adapter.OnlineInput
	120, // 89: sudo.protobuf.infra_adapter.OnlineParticipant.OnlineLocation.from_api:type_name -> google.protobuf.Empty
	105, // 90: sudo.protobuf.infra_adapter.OnlineParticipant.InputsEntry.value:type_name -> sudo.protobuf.infra_adapter.OnlineParticipant.OnlineLocation
	121, // 91: sudo.protobuf.infra_adapter.OnlineInput.TableRow.table:type_name -> sudo.protobuf.infra_adapter.location.DataLocation.Table
	92,  // [92:92] is the sub-list for method output_type
	92,  // [92:92] is the sub-list for method input_type
	92,  // [92:92] is the sub-list for extension type_name
	92,  // [92:92] is the sub-list for extension extendee
	0,   // [0:92] is the sub-list for field type_name
}

func init() { file_sudo_infra_adapter_infra_adapter_proto_init() }
func file_sudo_infra_adapter_infra_adapter_proto_init() {
	if File_sudo_infra_adapter_infra_adapter_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PartyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBlockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperatorConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KillResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Health); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperatorMachine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StageList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowDatabasesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowTablesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescTableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalkDirRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescFileNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowDatabasesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowTablesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescTableResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalkDirResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescFileNodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRunningsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRunningsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LaunchBlockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LaunchBlockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeBlockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeBlockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Chunk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadFileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveResourcesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveResourcesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SingleRemoveResourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStageConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStageConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProgressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteStageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteSlaveStageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMachineStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Version); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperatorSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterMachineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterMachineResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunSqlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SqlColumn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunSqlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCodeVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCodeVersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDataSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDataSourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportStageUsageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlockStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlockStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcProxyToPartyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcProxyToPartyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFurnaceConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFurnaceConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBlockInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnlineParamKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RowKeys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RowValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PredictInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PredictParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnlinePredictRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnlinePredictResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnlinePredictResponseItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnlinePirRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnlinePirReponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnlineBlockId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnlineBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncOnlineDeployInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncOnlineDeployInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableHashBucketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnlineOperatorConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnlineParticipant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnlineInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOperatorSchemasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableHashBucketInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OdbcQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatabaseLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Table); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatabaseTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OdbcConnection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataSourceName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescTableResponse_TableFieldMetaInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalkDirResponse_NodeMetaInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDataSourceRequest_DataSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDataSourceResponse_DatasourceRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFurnaceConfigResponse_Resource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBlockInfoRequest_OperatorStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnlineParticipant_OnlineLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnlineInput_TableRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_infra_adapter_infra_adapter_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnlineInput_Constants); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_sudo_infra_adapter_infra_adapter_proto_msgTypes[74].OneofWrappers = []interface{}{
		(*OnlineInput_Table)(nil),
		(*OnlineInput_Constants_)(nil),
	}
	file_sudo_infra_adapter_infra_adapter_proto_msgTypes[78].OneofWrappers = []interface{}{
		(*DatabaseLocation_Table)(nil),
		(*DatabaseLocation_Query)(nil),
	}
	file_sudo_infra_adapter_infra_adapter_proto_msgTypes[81].OneofWrappers = []interface{}{
		(*OdbcConnection_ConnectionString)(nil),
		(*OdbcConnection_DataSourceName)(nil),
	}
	file_sudo_infra_adapter_infra_adapter_proto_msgTypes[95].OneofWrappers = []interface{}{
		(*OnlineParticipant_OnlineLocation_Preload)(nil),
		(*OnlineParticipant_OnlineLocation_Upstream)(nil),
		(*OnlineParticipant_OnlineLocation_Online)(nil),
		(*OnlineParticipant_OnlineLocation_FromApi)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sudo_infra_adapter_infra_adapter_proto_rawDesc,
			NumEnums:      10,
			NumMessages:   99,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sudo_infra_adapter_infra_adapter_proto_goTypes,
		DependencyIndexes: file_sudo_infra_adapter_infra_adapter_proto_depIdxs,
		EnumInfos:         file_sudo_infra_adapter_infra_adapter_proto_enumTypes,
		MessageInfos:      file_sudo_infra_adapter_infra_adapter_proto_msgTypes,
	}.Build()
	File_sudo_infra_adapter_infra_adapter_proto = out.File
	file_sudo_infra_adapter_infra_adapter_proto_rawDesc = nil
	file_sudo_infra_adapter_infra_adapter_proto_goTypes = nil
	file_sudo_infra_adapter_infra_adapter_proto_depIdxs = nil
}
