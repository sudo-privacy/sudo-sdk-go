// Copyright 2022 Sudo Technology Co., Ltd.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.18.1
// source: sudo/protobuf/service/online_service.proto

package service

import (
	context "context"
	protobuf "github.com/sudo-privacy/sudo-sdk-go/v2/protobuf/basic/protobuf"
	infra_adapter "github.com/sudo-privacy/sudo-sdk-go/v2/protobuf/basic/protobuf/infra_adapter"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// pass this to server
type CountedPirDeployRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId uint64 `protobuf:"varint,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// selected_cols include [key_columns, ..value_columns]
	// pass ["*"] is ok
	DbTable        *infra_adapter.DataLocation_DB `protobuf:"bytes,2,opt,name=db_table,json=dbTable,proto3" json:"db_table,omitempty"`
	KeyColumn      string                         `protobuf:"bytes,3,opt,name=key_column,json=keyColumn,proto3" json:"key_column,omitempty"`
	StorageTable   *infra_adapter.DataLocation_DB `protobuf:"bytes,4,opt,name=storage_table,json=storageTable,proto3" json:"storage_table,omitempty"`
	BucketCount    uint64                         `protobuf:"varint,5,opt,name=bucket_count,json=bucketCount,proto3" json:"bucket_count,omitempty"`
	PartitionCount uint64                         `protobuf:"varint,6,opt,name=partition_count,json=partitionCount,proto3" json:"partition_count,omitempty"`
}

func (x *CountedPirDeployRequest) Reset() {
	*x = CountedPirDeployRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_protobuf_service_online_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountedPirDeployRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountedPirDeployRequest) ProtoMessage() {}

func (x *CountedPirDeployRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_protobuf_service_online_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountedPirDeployRequest.ProtoReflect.Descriptor instead.
func (*CountedPirDeployRequest) Descriptor() ([]byte, []int) {
	return file_sudo_protobuf_service_online_service_proto_rawDescGZIP(), []int{0}
}

func (x *CountedPirDeployRequest) GetServiceId() uint64 {
	if x != nil {
		return x.ServiceId
	}
	return 0
}

func (x *CountedPirDeployRequest) GetDbTable() *infra_adapter.DataLocation_DB {
	if x != nil {
		return x.DbTable
	}
	return nil
}

func (x *CountedPirDeployRequest) GetKeyColumn() string {
	if x != nil {
		return x.KeyColumn
	}
	return ""
}

func (x *CountedPirDeployRequest) GetStorageTable() *infra_adapter.DataLocation_DB {
	if x != nil {
		return x.StorageTable
	}
	return nil
}

func (x *CountedPirDeployRequest) GetBucketCount() uint64 {
	if x != nil {
		return x.BucketCount
	}
	return 0
}

func (x *CountedPirDeployRequest) GetPartitionCount() uint64 {
	if x != nil {
		return x.PartitionCount
	}
	return 0
}

type CountedPirRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId   uint64              `protobuf:"varint,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	Keys        []string            `protobuf:"bytes,2,rep,name=keys,proto3" json:"keys,omitempty"`
	PartyInfo   *protobuf.PartyInfo `protobuf:"bytes,3,opt,name=party_info,json=partyInfo,proto3" json:"party_info,omitempty"`
	BucketCount uint64              `protobuf:"varint,4,opt,name=bucket_count,json=bucketCount,proto3" json:"bucket_count,omitempty"`
}

func (x *CountedPirRequest) Reset() {
	*x = CountedPirRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_protobuf_service_online_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountedPirRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountedPirRequest) ProtoMessage() {}

func (x *CountedPirRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_protobuf_service_online_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountedPirRequest.ProtoReflect.Descriptor instead.
func (*CountedPirRequest) Descriptor() ([]byte, []int) {
	return file_sudo_protobuf_service_online_service_proto_rawDescGZIP(), []int{1}
}

func (x *CountedPirRequest) GetServiceId() uint64 {
	if x != nil {
		return x.ServiceId
	}
	return 0
}

func (x *CountedPirRequest) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *CountedPirRequest) GetPartyInfo() *protobuf.PartyInfo {
	if x != nil {
		return x.PartyInfo
	}
	return nil
}

func (x *CountedPirRequest) GetBucketCount() uint64 {
	if x != nil {
		return x.BucketCount
	}
	return 0
}

type CountedPirResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload []*InstanceRow `protobuf:"bytes,1,rep,name=payload,proto3" json:"payload,omitempty"`
}

func (x *CountedPirResponse) Reset() {
	*x = CountedPirResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_protobuf_service_online_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountedPirResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountedPirResponse) ProtoMessage() {}

func (x *CountedPirResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_protobuf_service_online_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountedPirResponse.ProtoReflect.Descriptor instead.
func (*CountedPirResponse) Descriptor() ([]byte, []int) {
	return file_sudo_protobuf_service_online_service_proto_rawDescGZIP(), []int{2}
}

func (x *CountedPirResponse) GetPayload() []*InstanceRow {
	if x != nil {
		return x.Payload
	}
	return nil
}

type TableHashBucketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId uint64 `protobuf:"varint,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// selected_cols include [key_columns, ..value_columns]
	// pass ["*"] is ok
	DbTable        *infra_adapter.DataLocation_DB `protobuf:"bytes,2,opt,name=db_table,json=dbTable,proto3" json:"db_table,omitempty"`
	KeyColumn      string                         `protobuf:"bytes,3,opt,name=key_column,json=keyColumn,proto3" json:"key_column,omitempty"`
	StorageTable   *infra_adapter.DataLocation_DB `protobuf:"bytes,4,opt,name=storage_table,json=storageTable,proto3" json:"storage_table,omitempty"`
	BucketCount    uint64                         `protobuf:"varint,5,opt,name=bucket_count,json=bucketCount,proto3" json:"bucket_count,omitempty"`
	PartitionCount uint64                         `protobuf:"varint,6,opt,name=partition_count,json=partitionCount,proto3" json:"partition_count,omitempty"`
}

func (x *TableHashBucketRequest) Reset() {
	*x = TableHashBucketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_protobuf_service_online_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableHashBucketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableHashBucketRequest) ProtoMessage() {}

func (x *TableHashBucketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_protobuf_service_online_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableHashBucketRequest.ProtoReflect.Descriptor instead.
func (*TableHashBucketRequest) Descriptor() ([]byte, []int) {
	return file_sudo_protobuf_service_online_service_proto_rawDescGZIP(), []int{3}
}

func (x *TableHashBucketRequest) GetServiceId() uint64 {
	if x != nil {
		return x.ServiceId
	}
	return 0
}

func (x *TableHashBucketRequest) GetDbTable() *infra_adapter.DataLocation_DB {
	if x != nil {
		return x.DbTable
	}
	return nil
}

func (x *TableHashBucketRequest) GetKeyColumn() string {
	if x != nil {
		return x.KeyColumn
	}
	return ""
}

func (x *TableHashBucketRequest) GetStorageTable() *infra_adapter.DataLocation_DB {
	if x != nil {
		return x.StorageTable
	}
	return nil
}

func (x *TableHashBucketRequest) GetBucketCount() uint64 {
	if x != nil {
		return x.BucketCount
	}
	return 0
}

func (x *TableHashBucketRequest) GetPartitionCount() uint64 {
	if x != nil {
		return x.PartitionCount
	}
	return 0
}

type InstanceRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item []string `protobuf:"bytes,1,rep,name=item,proto3" json:"item,omitempty"`
	Hit  bool     `protobuf:"varint,2,opt,name=hit,proto3" json:"hit,omitempty"`
}

func (x *InstanceRow) Reset() {
	*x = InstanceRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_protobuf_service_online_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceRow) ProtoMessage() {}

func (x *InstanceRow) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_protobuf_service_online_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceRow.ProtoReflect.Descriptor instead.
func (*InstanceRow) Descriptor() ([]byte, []int) {
	return file_sudo_protobuf_service_online_service_proto_rawDescGZIP(), []int{4}
}

func (x *InstanceRow) GetItem() []string {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *InstanceRow) GetHit() bool {
	if x != nil {
		return x.Hit
	}
	return false
}

type CountedPirUsageReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId uint64 `protobuf:"varint,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// 匹配上数目
	UsageCount uint64 `protobuf:"varint,2,opt,name=usage_count,json=usageCount,proto3" json:"usage_count,omitempty"`
	// 总请求数目
	RequestCount uint64 `protobuf:"varint,3,opt,name=request_count,json=requestCount,proto3" json:"request_count,omitempty"`
}

func (x *CountedPirUsageReportRequest) Reset() {
	*x = CountedPirUsageReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_protobuf_service_online_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountedPirUsageReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountedPirUsageReportRequest) ProtoMessage() {}

func (x *CountedPirUsageReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_protobuf_service_online_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountedPirUsageReportRequest.ProtoReflect.Descriptor instead.
func (*CountedPirUsageReportRequest) Descriptor() ([]byte, []int) {
	return file_sudo_protobuf_service_online_service_proto_rawDescGZIP(), []int{5}
}

func (x *CountedPirUsageReportRequest) GetServiceId() uint64 {
	if x != nil {
		return x.ServiceId
	}
	return 0
}

func (x *CountedPirUsageReportRequest) GetUsageCount() uint64 {
	if x != nil {
		return x.UsageCount
	}
	return 0
}

func (x *CountedPirUsageReportRequest) GetRequestCount() uint64 {
	if x != nil {
		return x.RequestCount
	}
	return 0
}

type PredictUsageReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId uint64 `protobuf:"varint,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// 总预测ID数
	RequestCount uint64 `protobuf:"varint,2,opt,name=request_count,json=requestCount,proto3" json:"request_count,omitempty"`
	// 查得数
	UsageCount uint64 `protobuf:"varint,3,opt,name=usage_count,json=usageCount,proto3" json:"usage_count,omitempty"`
}

func (x *PredictUsageReportRequest) Reset() {
	*x = PredictUsageReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_protobuf_service_online_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PredictUsageReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PredictUsageReportRequest) ProtoMessage() {}

func (x *PredictUsageReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_protobuf_service_online_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PredictUsageReportRequest.ProtoReflect.Descriptor instead.
func (*PredictUsageReportRequest) Descriptor() ([]byte, []int) {
	return file_sudo_protobuf_service_online_service_proto_rawDescGZIP(), []int{6}
}

func (x *PredictUsageReportRequest) GetServiceId() uint64 {
	if x != nil {
		return x.ServiceId
	}
	return 0
}

func (x *PredictUsageReportRequest) GetRequestCount() uint64 {
	if x != nil {
		return x.RequestCount
	}
	return 0
}

func (x *PredictUsageReportRequest) GetUsageCount() uint64 {
	if x != nil {
		return x.UsageCount
	}
	return 0
}

var File_sudo_protobuf_service_online_service_proto protoreflect.FileDescriptor

var file_sudo_protobuf_service_online_service_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x73, 0x75, 0x64, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x73, 0x75,
	0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x1a, 0x2f, 0x73, 0x75, 0x64, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72,
	0x2f, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x33, 0x73, 0x75, 0x64, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65,
	0x72, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd1, 0x02, 0x0a, 0x17, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x64, 0x50, 0x69, 0x72, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x50, 0x0a, 0x08, 0x64, 0x62, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65,
	0x72, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x42, 0x52, 0x07, 0x64, 0x62, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6b, 0x65, 0x79, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x43, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x12, 0x5a, 0x0a, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x73, 0x75, 0x64, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f,
	0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x42,
	0x52, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xb0, 0x01, 0x0a, 0x11, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x64, 0x50, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6b,
	0x65, 0x79, 0x73, 0x12, 0x45, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64,
	0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x09, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0b, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x52, 0x0a,
	0x12, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x64, 0x50, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x6f, 0x77, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x22, 0xd0, 0x02, 0x0a, 0x16, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x48, 0x61, 0x73, 0x68, 0x42,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x50, 0x0a, 0x08, 0x64,
	0x62, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e,
	0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e,
	0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x44, 0x42, 0x52, 0x07, 0x64, 0x62, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x6b, 0x65, 0x79, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x5a, 0x0a, 0x0d,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65,
	0x72, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x42, 0x52, 0x0c, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x33, 0x0a, 0x0b, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x68, 0x69, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x68, 0x69, 0x74, 0x22, 0x83, 0x01, 0x0a, 0x1c, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x64, 0x50, 0x69, 0x72, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x75, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x80, 0x01, 0x0a, 0x19, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x55, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x75, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x32, 0xb0, 0x02, 0x0a, 0x15, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5a, 0x0a, 0x10,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x64, 0x50, 0x69, 0x72, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x12, 0x2e, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x64,
	0x50, 0x69, 0x72, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x61, 0x0a, 0x0a, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x64, 0x50, 0x69, 0x72, 0x12, 0x28, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x64, 0x50, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x29, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x64,
	0x50, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x0f, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x48, 0x61, 0x73, 0x68, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x2d,
	0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x48, 0x61, 0x73, 0x68,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0xdd, 0x01, 0x0a, 0x15, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12,
	0x64, 0x0a, 0x15, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x64, 0x50, 0x69, 0x72, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x33, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x64, 0x50, 0x69, 0x72, 0x55, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x5e, 0x0a, 0x12, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74,
	0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x30, 0x2e, 0x73, 0x75,
	0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x55, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sudo_protobuf_service_online_service_proto_rawDescOnce sync.Once
	file_sudo_protobuf_service_online_service_proto_rawDescData = file_sudo_protobuf_service_online_service_proto_rawDesc
)

func file_sudo_protobuf_service_online_service_proto_rawDescGZIP() []byte {
	file_sudo_protobuf_service_online_service_proto_rawDescOnce.Do(func() {
		file_sudo_protobuf_service_online_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_sudo_protobuf_service_online_service_proto_rawDescData)
	})
	return file_sudo_protobuf_service_online_service_proto_rawDescData
}

var file_sudo_protobuf_service_online_service_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_sudo_protobuf_service_online_service_proto_goTypes = []interface{}{
	(*CountedPirDeployRequest)(nil),       // 0: sudo.protobuf.service.CountedPirDeployRequest
	(*CountedPirRequest)(nil),             // 1: sudo.protobuf.service.CountedPirRequest
	(*CountedPirResponse)(nil),            // 2: sudo.protobuf.service.CountedPirResponse
	(*TableHashBucketRequest)(nil),        // 3: sudo.protobuf.service.TableHashBucketRequest
	(*InstanceRow)(nil),                   // 4: sudo.protobuf.service.InstanceRow
	(*CountedPirUsageReportRequest)(nil),  // 5: sudo.protobuf.service.CountedPirUsageReportRequest
	(*PredictUsageReportRequest)(nil),     // 6: sudo.protobuf.service.PredictUsageReportRequest
	(*infra_adapter.DataLocation_DB)(nil), // 7: sudo.protobuf.infra_adapter.location.DataLocation.DB
	(*protobuf.PartyInfo)(nil),            // 8: sudo.protobuf.infra_adapter.PartyInfo
	(*emptypb.Empty)(nil),                 // 9: google.protobuf.Empty
}
var file_sudo_protobuf_service_online_service_proto_depIdxs = []int32{
	7,  // 0: sudo.protobuf.service.CountedPirDeployRequest.db_table:type_name -> sudo.protobuf.infra_adapter.location.DataLocation.DB
	7,  // 1: sudo.protobuf.service.CountedPirDeployRequest.storage_table:type_name -> sudo.protobuf.infra_adapter.location.DataLocation.DB
	8,  // 2: sudo.protobuf.service.CountedPirRequest.party_info:type_name -> sudo.protobuf.infra_adapter.PartyInfo
	4,  // 3: sudo.protobuf.service.CountedPirResponse.payload:type_name -> sudo.protobuf.service.InstanceRow
	7,  // 4: sudo.protobuf.service.TableHashBucketRequest.db_table:type_name -> sudo.protobuf.infra_adapter.location.DataLocation.DB
	7,  // 5: sudo.protobuf.service.TableHashBucketRequest.storage_table:type_name -> sudo.protobuf.infra_adapter.location.DataLocation.DB
	0,  // 6: sudo.protobuf.service.OperatorOnlineService.CountedPirDeploy:input_type -> sudo.protobuf.service.CountedPirDeployRequest
	1,  // 7: sudo.protobuf.service.OperatorOnlineService.CountedPir:input_type -> sudo.protobuf.service.CountedPirRequest
	3,  // 8: sudo.protobuf.service.OperatorOnlineService.TableHashBucket:input_type -> sudo.protobuf.service.TableHashBucketRequest
	5,  // 9: sudo.protobuf.service.OnlineServiceCallback.CountedPirUsageReport:input_type -> sudo.protobuf.service.CountedPirUsageReportRequest
	6,  // 10: sudo.protobuf.service.OnlineServiceCallback.PredictUsageReport:input_type -> sudo.protobuf.service.PredictUsageReportRequest
	9,  // 11: sudo.protobuf.service.OperatorOnlineService.CountedPirDeploy:output_type -> google.protobuf.Empty
	2,  // 12: sudo.protobuf.service.OperatorOnlineService.CountedPir:output_type -> sudo.protobuf.service.CountedPirResponse
	9,  // 13: sudo.protobuf.service.OperatorOnlineService.TableHashBucket:output_type -> google.protobuf.Empty
	9,  // 14: sudo.protobuf.service.OnlineServiceCallback.CountedPirUsageReport:output_type -> google.protobuf.Empty
	9,  // 15: sudo.protobuf.service.OnlineServiceCallback.PredictUsageReport:output_type -> google.protobuf.Empty
	11, // [11:16] is the sub-list for method output_type
	6,  // [6:11] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_sudo_protobuf_service_online_service_proto_init() }
func file_sudo_protobuf_service_online_service_proto_init() {
	if File_sudo_protobuf_service_online_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sudo_protobuf_service_online_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountedPirDeployRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_protobuf_service_online_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountedPirRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_protobuf_service_online_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountedPirResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_protobuf_service_online_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableHashBucketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_protobuf_service_online_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstanceRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_protobuf_service_online_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountedPirUsageReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_protobuf_service_online_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PredictUsageReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sudo_protobuf_service_online_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_sudo_protobuf_service_online_service_proto_goTypes,
		DependencyIndexes: file_sudo_protobuf_service_online_service_proto_depIdxs,
		MessageInfos:      file_sudo_protobuf_service_online_service_proto_msgTypes,
	}.Build()
	File_sudo_protobuf_service_online_service_proto = out.File
	file_sudo_protobuf_service_online_service_proto_rawDesc = nil
	file_sudo_protobuf_service_online_service_proto_goTypes = nil
	file_sudo_protobuf_service_online_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// OperatorOnlineServiceClient is the client API for OperatorOnlineService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OperatorOnlineServiceClient interface {
	// 部署阶段，server端被调用，用于初始化：数据表分桶等
	CountedPirDeploy(ctx context.Context, in *CountedPirDeployRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// 调用阶段，client端被调用，将必要信息明文传给server
	CountedPir(ctx context.Context, in *CountedPirRequest, opts ...grpc.CallOption) (*CountedPirResponse, error)
	// 部署阶段，server端调用，进行数据表分桶分区
	TableHashBucket(ctx context.Context, in *TableHashBucketRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type operatorOnlineServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewOperatorOnlineServiceClient(cc grpc.ClientConnInterface) OperatorOnlineServiceClient {
	return &operatorOnlineServiceClient{cc}
}

func (c *operatorOnlineServiceClient) CountedPirDeploy(ctx context.Context, in *CountedPirDeployRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/sudo.protobuf.service.OperatorOnlineService/CountedPirDeploy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *operatorOnlineServiceClient) CountedPir(ctx context.Context, in *CountedPirRequest, opts ...grpc.CallOption) (*CountedPirResponse, error) {
	out := new(CountedPirResponse)
	err := c.cc.Invoke(ctx, "/sudo.protobuf.service.OperatorOnlineService/CountedPir", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *operatorOnlineServiceClient) TableHashBucket(ctx context.Context, in *TableHashBucketRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/sudo.protobuf.service.OperatorOnlineService/TableHashBucket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OperatorOnlineServiceServer is the server API for OperatorOnlineService service.
type OperatorOnlineServiceServer interface {
	// 部署阶段，server端被调用，用于初始化：数据表分桶等
	CountedPirDeploy(context.Context, *CountedPirDeployRequest) (*emptypb.Empty, error)
	// 调用阶段，client端被调用，将必要信息明文传给server
	CountedPir(context.Context, *CountedPirRequest) (*CountedPirResponse, error)
	// 部署阶段，server端调用，进行数据表分桶分区
	TableHashBucket(context.Context, *TableHashBucketRequest) (*emptypb.Empty, error)
}

// UnimplementedOperatorOnlineServiceServer can be embedded to have forward compatible implementations.
type UnimplementedOperatorOnlineServiceServer struct {
}

func (*UnimplementedOperatorOnlineServiceServer) CountedPirDeploy(context.Context, *CountedPirDeployRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CountedPirDeploy not implemented")
}
func (*UnimplementedOperatorOnlineServiceServer) CountedPir(context.Context, *CountedPirRequest) (*CountedPirResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CountedPir not implemented")
}
func (*UnimplementedOperatorOnlineServiceServer) TableHashBucket(context.Context, *TableHashBucketRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TableHashBucket not implemented")
}

func RegisterOperatorOnlineServiceServer(s *grpc.Server, srv OperatorOnlineServiceServer) {
	s.RegisterService(&_OperatorOnlineService_serviceDesc, srv)
}

func _OperatorOnlineService_CountedPirDeploy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CountedPirDeployRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OperatorOnlineServiceServer).CountedPirDeploy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sudo.protobuf.service.OperatorOnlineService/CountedPirDeploy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OperatorOnlineServiceServer).CountedPirDeploy(ctx, req.(*CountedPirDeployRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OperatorOnlineService_CountedPir_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CountedPirRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OperatorOnlineServiceServer).CountedPir(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sudo.protobuf.service.OperatorOnlineService/CountedPir",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OperatorOnlineServiceServer).CountedPir(ctx, req.(*CountedPirRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OperatorOnlineService_TableHashBucket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TableHashBucketRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OperatorOnlineServiceServer).TableHashBucket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sudo.protobuf.service.OperatorOnlineService/TableHashBucket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OperatorOnlineServiceServer).TableHashBucket(ctx, req.(*TableHashBucketRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OperatorOnlineService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sudo.protobuf.service.OperatorOnlineService",
	HandlerType: (*OperatorOnlineServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CountedPirDeploy",
			Handler:    _OperatorOnlineService_CountedPirDeploy_Handler,
		},
		{
			MethodName: "CountedPir",
			Handler:    _OperatorOnlineService_CountedPir_Handler,
		},
		{
			MethodName: "TableHashBucket",
			Handler:    _OperatorOnlineService_TableHashBucket_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sudo/protobuf/service/online_service.proto",
}

// OnlineServiceCallbackClient is the client API for OnlineServiceCallback service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OnlineServiceCallbackClient interface {
	CountedPirUsageReport(ctx context.Context, in *CountedPirUsageReportRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// 在线模型服务server端operator向furnace回报预测结果
	PredictUsageReport(ctx context.Context, in *PredictUsageReportRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type onlineServiceCallbackClient struct {
	cc grpc.ClientConnInterface
}

func NewOnlineServiceCallbackClient(cc grpc.ClientConnInterface) OnlineServiceCallbackClient {
	return &onlineServiceCallbackClient{cc}
}

func (c *onlineServiceCallbackClient) CountedPirUsageReport(ctx context.Context, in *CountedPirUsageReportRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/sudo.protobuf.service.OnlineServiceCallback/CountedPirUsageReport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onlineServiceCallbackClient) PredictUsageReport(ctx context.Context, in *PredictUsageReportRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/sudo.protobuf.service.OnlineServiceCallback/PredictUsageReport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OnlineServiceCallbackServer is the server API for OnlineServiceCallback service.
type OnlineServiceCallbackServer interface {
	CountedPirUsageReport(context.Context, *CountedPirUsageReportRequest) (*emptypb.Empty, error)
	// 在线模型服务server端operator向furnace回报预测结果
	PredictUsageReport(context.Context, *PredictUsageReportRequest) (*emptypb.Empty, error)
}

// UnimplementedOnlineServiceCallbackServer can be embedded to have forward compatible implementations.
type UnimplementedOnlineServiceCallbackServer struct {
}

func (*UnimplementedOnlineServiceCallbackServer) CountedPirUsageReport(context.Context, *CountedPirUsageReportRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CountedPirUsageReport not implemented")
}
func (*UnimplementedOnlineServiceCallbackServer) PredictUsageReport(context.Context, *PredictUsageReportRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PredictUsageReport not implemented")
}

func RegisterOnlineServiceCallbackServer(s *grpc.Server, srv OnlineServiceCallbackServer) {
	s.RegisterService(&_OnlineServiceCallback_serviceDesc, srv)
}

func _OnlineServiceCallback_CountedPirUsageReport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CountedPirUsageReportRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnlineServiceCallbackServer).CountedPirUsageReport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sudo.protobuf.service.OnlineServiceCallback/CountedPirUsageReport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnlineServiceCallbackServer).CountedPirUsageReport(ctx, req.(*CountedPirUsageReportRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnlineServiceCallback_PredictUsageReport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PredictUsageReportRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnlineServiceCallbackServer).PredictUsageReport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sudo.protobuf.service.OnlineServiceCallback/PredictUsageReport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnlineServiceCallbackServer).PredictUsageReport(ctx, req.(*PredictUsageReportRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OnlineServiceCallback_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sudo.protobuf.service.OnlineServiceCallback",
	HandlerType: (*OnlineServiceCallbackServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CountedPirUsageReport",
			Handler:    _OnlineServiceCallback_CountedPirUsageReport_Handler,
		},
		{
			MethodName: "PredictUsageReport",
			Handler:    _OnlineServiceCallback_PredictUsageReport_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sudo/protobuf/service/online_service.proto",
}
