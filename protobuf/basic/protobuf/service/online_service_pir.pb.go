// Copyright 2022 Sudo Technology Co., Ltd.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.18.1
// source: sudo/protobuf/service/online_service_pir.proto

package service

import (
	context "context"
	protobuf "github.com/sudo-privacy/sudo-sdk-go/v2/protobuf/basic/protobuf"
	infra_adapter "github.com/sudo-privacy/sudo-sdk-go/v2/protobuf/basic/protobuf/infra_adapter"
	enums "github.com/sudo-privacy/sudo-sdk-go/v2/protobuf/basic/protobuf/service/enums"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InvokeSource int32

const (
	InvokeSource_Unknown InvokeSource = 0
	InvokeSource_Alchemy InvokeSource = 1
	InvokeSource_Furnace InvokeSource = 2
)

// Enum value maps for InvokeSource.
var (
	InvokeSource_name = map[int32]string{
		0: "Unknown",
		1: "Alchemy",
		2: "Furnace",
	}
	InvokeSource_value = map[string]int32{
		"Unknown": 0,
		"Alchemy": 1,
		"Furnace": 2,
	}
)

func (x InvokeSource) Enum() *InvokeSource {
	p := new(InvokeSource)
	*p = x
	return p
}

func (x InvokeSource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InvokeSource) Descriptor() protoreflect.EnumDescriptor {
	return file_sudo_protobuf_service_online_service_pir_proto_enumTypes[0].Descriptor()
}

func (InvokeSource) Type() protoreflect.EnumType {
	return &file_sudo_protobuf_service_online_service_pir_proto_enumTypes[0]
}

func (x InvokeSource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InvokeSource.Descriptor instead.
func (InvokeSource) EnumDescriptor() ([]byte, []int) {
	return file_sudo_protobuf_service_online_service_pir_proto_rawDescGZIP(), []int{0}
}

type Payload_Status int32

const (
	Payload_UNKNOWN Payload_Status = 0
	Payload_HIT     Payload_Status = 1
	Payload_UNHIT   Payload_Status = 2
	Payload_FAILED  Payload_Status = 3
)

// Enum value maps for Payload_Status.
var (
	Payload_Status_name = map[int32]string{
		0: "UNKNOWN",
		1: "HIT",
		2: "UNHIT",
		3: "FAILED",
	}
	Payload_Status_value = map[string]int32{
		"UNKNOWN": 0,
		"HIT":     1,
		"UNHIT":   2,
		"FAILED":  3,
	}
)

func (x Payload_Status) Enum() *Payload_Status {
	p := new(Payload_Status)
	*p = x
	return p
}

func (x Payload_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Payload_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_sudo_protobuf_service_online_service_pir_proto_enumTypes[1].Descriptor()
}

func (Payload_Status) Type() protoreflect.EnumType {
	return &file_sudo_protobuf_service_online_service_pir_proto_enumTypes[1]
}

func (x Payload_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Payload_Status.Descriptor instead.
func (Payload_Status) EnumDescriptor() ([]byte, []int) {
	return file_sudo_protobuf_service_online_service_pir_proto_rawDescGZIP(), []int{6, 0}
}

type PirDeployServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId uint64                      `protobuf:"varint,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	Location  *infra_adapter.DataLocation `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	// 匹配列
	KeyColumns []string `protobuf:"bytes,3,rep,name=key_columns,json=keyColumns,proto3" json:"key_columns,omitempty"`
	// 可查列
	LabelColumns []string `protobuf:"bytes,4,rep,name=label_columns,json=labelColumns,proto3" json:"label_columns,omitempty"`
	// 不可区分度
	IndiscernibilityDegree uint64 `protobuf:"varint,5,opt,name=indiscernibility_degree,json=indiscernibilityDegree,proto3" json:"indiscernibility_degree,omitempty"`
	// 分区数
	PartitionCount uint64 `protobuf:"varint,6,opt,name=partition_count,json=partitionCount,proto3" json:"partition_count,omitempty"`
	// 是否跳过加密（一期默认false）
	SkipEncrypt bool `protobuf:"varint,7,opt,name=skip_encrypt,json=skipEncrypt,proto3" json:"skip_encrypt,omitempty"`
	// 部署请求的调用来源
	Source InvokeSource `protobuf:"varint,8,opt,name=source,proto3,enum=sudo.protobuf.service.InvokeSource" json:"source,omitempty"`
}

func (x *PirDeployServerRequest) Reset() {
	*x = PirDeployServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_protobuf_service_online_service_pir_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PirDeployServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PirDeployServerRequest) ProtoMessage() {}

func (x *PirDeployServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_protobuf_service_online_service_pir_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PirDeployServerRequest.ProtoReflect.Descriptor instead.
func (*PirDeployServerRequest) Descriptor() ([]byte, []int) {
	return file_sudo_protobuf_service_online_service_pir_proto_rawDescGZIP(), []int{0}
}

func (x *PirDeployServerRequest) GetServiceId() uint64 {
	if x != nil {
		return x.ServiceId
	}
	return 0
}

func (x *PirDeployServerRequest) GetLocation() *infra_adapter.DataLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *PirDeployServerRequest) GetKeyColumns() []string {
	if x != nil {
		return x.KeyColumns
	}
	return nil
}

func (x *PirDeployServerRequest) GetLabelColumns() []string {
	if x != nil {
		return x.LabelColumns
	}
	return nil
}

func (x *PirDeployServerRequest) GetIndiscernibilityDegree() uint64 {
	if x != nil {
		return x.IndiscernibilityDegree
	}
	return 0
}

func (x *PirDeployServerRequest) GetPartitionCount() uint64 {
	if x != nil {
		return x.PartitionCount
	}
	return 0
}

func (x *PirDeployServerRequest) GetSkipEncrypt() bool {
	if x != nil {
		return x.SkipEncrypt
	}
	return false
}

func (x *PirDeployServerRequest) GetSource() InvokeSource {
	if x != nil {
		return x.Source
	}
	return InvokeSource_Unknown
}

type PirDeployClientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId uint64              `protobuf:"varint,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	Token     string              `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	PartyInfo *protobuf.PartyInfo `protobuf:"bytes,3,opt,name=party_info,json=partyInfo,proto3" json:"party_info,omitempty"`
	// 部署请求的调用来源
	Source InvokeSource `protobuf:"varint,4,opt,name=source,proto3,enum=sudo.protobuf.service.InvokeSource" json:"source,omitempty"`
}

func (x *PirDeployClientRequest) Reset() {
	*x = PirDeployClientRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_protobuf_service_online_service_pir_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PirDeployClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PirDeployClientRequest) ProtoMessage() {}

func (x *PirDeployClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_protobuf_service_online_service_pir_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PirDeployClientRequest.ProtoReflect.Descriptor instead.
func (*PirDeployClientRequest) Descriptor() ([]byte, []int) {
	return file_sudo_protobuf_service_online_service_pir_proto_rawDescGZIP(), []int{1}
}

func (x *PirDeployClientRequest) GetServiceId() uint64 {
	if x != nil {
		return x.ServiceId
	}
	return 0
}

func (x *PirDeployClientRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *PirDeployClientRequest) GetPartyInfo() *protobuf.PartyInfo {
	if x != nil {
		return x.PartyInfo
	}
	return nil
}

func (x *PirDeployClientRequest) GetSource() InvokeSource {
	if x != nil {
		return x.Source
	}
	return InvokeSource_Unknown
}

type SyncServerDeployInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId uint64 `protobuf:"varint,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
}

func (x *SyncServerDeployInfoRequest) Reset() {
	*x = SyncServerDeployInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_protobuf_service_online_service_pir_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncServerDeployInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncServerDeployInfoRequest) ProtoMessage() {}

func (x *SyncServerDeployInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_protobuf_service_online_service_pir_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncServerDeployInfoRequest.ProtoReflect.Descriptor instead.
func (*SyncServerDeployInfoRequest) Descriptor() ([]byte, []int) {
	return file_sudo_protobuf_service_online_service_pir_proto_rawDescGZIP(), []int{2}
}

func (x *SyncServerDeployInfoRequest) GetServiceId() uint64 {
	if x != nil {
		return x.ServiceId
	}
	return 0
}

type SyncServerDeployInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 当前部署状态
	Status SyncStatus `protobuf:"varint,1,opt,name=status,proto3,enum=sudo.protobuf.service.SyncStatus" json:"status,omitempty"`
	// deploy进度，返回百分比
	Progress float32 `protobuf:"fixed32,2,opt,name=progress,proto3" json:"progress,omitempty"`
	// 分桶数
	BucketCount uint64 `protobuf:"varint,3,opt,name=bucket_count,json=bucketCount,proto3" json:"bucket_count,omitempty"`
	// deploy失败时才有值
	ErrMsg string `protobuf:"bytes,4,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
}

func (x *SyncServerDeployInfoResponse) Reset() {
	*x = SyncServerDeployInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_protobuf_service_online_service_pir_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncServerDeployInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncServerDeployInfoResponse) ProtoMessage() {}

func (x *SyncServerDeployInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_protobuf_service_online_service_pir_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncServerDeployInfoResponse.ProtoReflect.Descriptor instead.
func (*SyncServerDeployInfoResponse) Descriptor() ([]byte, []int) {
	return file_sudo_protobuf_service_online_service_pir_proto_rawDescGZIP(), []int{3}
}

func (x *SyncServerDeployInfoResponse) GetStatus() SyncStatus {
	if x != nil {
		return x.Status
	}
	return SyncStatus_UNKNOWN
}

func (x *SyncServerDeployInfoResponse) GetProgress() float32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *SyncServerDeployInfoResponse) GetBucketCount() uint64 {
	if x != nil {
		return x.BucketCount
	}
	return 0
}

func (x *SyncServerDeployInfoResponse) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

type KeyColumn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []string `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *KeyColumn) Reset() {
	*x = KeyColumn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_protobuf_service_online_service_pir_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyColumn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyColumn) ProtoMessage() {}

func (x *KeyColumn) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_protobuf_service_online_service_pir_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyColumn.ProtoReflect.Descriptor instead.
func (*KeyColumn) Descriptor() ([]byte, []int) {
	return file_sudo_protobuf_service_online_service_pir_proto_rawDescGZIP(), []int{4}
}

func (x *KeyColumn) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type PirRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId uint64         `protobuf:"varint,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	Keys      []*KeyColumn   `protobuf:"bytes,2,rep,name=keys,proto3" json:"keys,omitempty"`
	Token     string         `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	DataMode  enums.DataMode `protobuf:"varint,4,opt,name=data_mode,json=dataMode,proto3,enum=sudo.protobuf.service.enums.DataMode" json:"data_mode,omitempty"`
	RequestId string         `protobuf:"bytes,5,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// 匹配列
	KeyColumns []string `protobuf:"bytes,6,rep,name=key_columns,json=keyColumns,proto3" json:"key_columns,omitempty"`
	// 可查列
	LabelColumns []string `protobuf:"bytes,7,rep,name=label_columns,json=labelColumns,proto3" json:"label_columns,omitempty"`
	// 分桶个数
	BucketNum uint64 `protobuf:"varint,8,opt,name=bucket_num,json=bucketNum,proto3" json:"bucket_num,omitempty"`
	// server方PartyInfo
	PartyInfo *protobuf.PartyInfo `protobuf:"bytes,9,opt,name=party_info,json=partyInfo,proto3" json:"party_info,omitempty"`
}

func (x *PirRequest) Reset() {
	*x = PirRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_protobuf_service_online_service_pir_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PirRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PirRequest) ProtoMessage() {}

func (x *PirRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_protobuf_service_online_service_pir_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PirRequest.ProtoReflect.Descriptor instead.
func (*PirRequest) Descriptor() ([]byte, []int) {
	return file_sudo_protobuf_service_online_service_pir_proto_rawDescGZIP(), []int{5}
}

func (x *PirRequest) GetServiceId() uint64 {
	if x != nil {
		return x.ServiceId
	}
	return 0
}

func (x *PirRequest) GetKeys() []*KeyColumn {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *PirRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *PirRequest) GetDataMode() enums.DataMode {
	if x != nil {
		return x.DataMode
	}
	return enums.DataMode_UNKNOWN_DATA_MODE
}

func (x *PirRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *PirRequest) GetKeyColumns() []string {
	if x != nil {
		return x.KeyColumns
	}
	return nil
}

func (x *PirRequest) GetLabelColumns() []string {
	if x != nil {
		return x.LabelColumns
	}
	return nil
}

func (x *PirRequest) GetBucketNum() uint64 {
	if x != nil {
		return x.BucketNum
	}
	return 0
}

func (x *PirRequest) GetPartyInfo() *protobuf.PartyInfo {
	if x != nil {
		return x.PartyInfo
	}
	return nil
}

type Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items  []string       `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Status Payload_Status `protobuf:"varint,2,opt,name=status,proto3,enum=sudo.protobuf.service.Payload_Status" json:"status,omitempty"`
}

func (x *Payload) Reset() {
	*x = Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_protobuf_service_online_service_pir_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payload) ProtoMessage() {}

func (x *Payload) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_protobuf_service_online_service_pir_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payload.ProtoReflect.Descriptor instead.
func (*Payload) Descriptor() ([]byte, []int) {
	return file_sudo_protobuf_service_online_service_pir_proto_rawDescGZIP(), []int{6}
}

func (x *Payload) GetItems() []string {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *Payload) GetStatus() Payload_Status {
	if x != nil {
		return x.Status
	}
	return Payload_UNKNOWN
}

type PirResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payloads []*Payload `protobuf:"bytes,1,rep,name=payloads,proto3" json:"payloads,omitempty"`
}

func (x *PirResponse) Reset() {
	*x = PirResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_protobuf_service_online_service_pir_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PirResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PirResponse) ProtoMessage() {}

func (x *PirResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_protobuf_service_online_service_pir_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PirResponse.ProtoReflect.Descriptor instead.
func (*PirResponse) Descriptor() ([]byte, []int) {
	return file_sudo_protobuf_service_online_service_pir_proto_rawDescGZIP(), []int{7}
}

func (x *PirResponse) GetPayloads() []*Payload {
	if x != nil {
		return x.Payloads
	}
	return nil
}

type TerminateServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId uint64 `protobuf:"varint,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
}

func (x *TerminateServerRequest) Reset() {
	*x = TerminateServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_protobuf_service_online_service_pir_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminateServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminateServerRequest) ProtoMessage() {}

func (x *TerminateServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_protobuf_service_online_service_pir_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminateServerRequest.ProtoReflect.Descriptor instead.
func (*TerminateServerRequest) Descriptor() ([]byte, []int) {
	return file_sudo_protobuf_service_online_service_pir_proto_rawDescGZIP(), []int{8}
}

func (x *TerminateServerRequest) GetServiceId() uint64 {
	if x != nil {
		return x.ServiceId
	}
	return 0
}

type TerminateClientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId uint64 `protobuf:"varint,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	Token     string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *TerminateClientRequest) Reset() {
	*x = TerminateClientRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_protobuf_service_online_service_pir_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminateClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminateClientRequest) ProtoMessage() {}

func (x *TerminateClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_protobuf_service_online_service_pir_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminateClientRequest.ProtoReflect.Descriptor instead.
func (*TerminateClientRequest) Descriptor() ([]byte, []int) {
	return file_sudo_protobuf_service_online_service_pir_proto_rawDescGZIP(), []int{9}
}

func (x *TerminateClientRequest) GetServiceId() uint64 {
	if x != nil {
		return x.ServiceId
	}
	return 0
}

func (x *TerminateClientRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type PirUsageReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId     uint64 `protobuf:"varint,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	ClientPartyId string `protobuf:"bytes,2,opt,name=client_party_id,json=clientPartyId,proto3" json:"client_party_id,omitempty"`
	// 查得数
	UsageCount uint64 `protobuf:"varint,3,opt,name=usage_count,json=usageCount,proto3" json:"usage_count,omitempty"`
	// 总查询ID数
	RequestCount uint64 `protobuf:"varint,4,opt,name=request_count,json=requestCount,proto3" json:"request_count,omitempty"`
	Token        string `protobuf:"bytes,5,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *PirUsageReportRequest) Reset() {
	*x = PirUsageReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_protobuf_service_online_service_pir_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PirUsageReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PirUsageReportRequest) ProtoMessage() {}

func (x *PirUsageReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_protobuf_service_online_service_pir_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PirUsageReportRequest.ProtoReflect.Descriptor instead.
func (*PirUsageReportRequest) Descriptor() ([]byte, []int) {
	return file_sudo_protobuf_service_online_service_pir_proto_rawDescGZIP(), []int{10}
}

func (x *PirUsageReportRequest) GetServiceId() uint64 {
	if x != nil {
		return x.ServiceId
	}
	return 0
}

func (x *PirUsageReportRequest) GetClientPartyId() string {
	if x != nil {
		return x.ClientPartyId
	}
	return ""
}

func (x *PirUsageReportRequest) GetUsageCount() uint64 {
	if x != nil {
		return x.UsageCount
	}
	return 0
}

func (x *PirUsageReportRequest) GetRequestCount() uint64 {
	if x != nil {
		return x.RequestCount
	}
	return 0
}

func (x *PirUsageReportRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type UpdatePirDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId uint64                      `protobuf:"varint,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	Location  *infra_adapter.DataLocation `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *UpdatePirDataRequest) Reset() {
	*x = UpdatePirDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_protobuf_service_online_service_pir_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePirDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePirDataRequest) ProtoMessage() {}

func (x *UpdatePirDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_protobuf_service_online_service_pir_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePirDataRequest.ProtoReflect.Descriptor instead.
func (*UpdatePirDataRequest) Descriptor() ([]byte, []int) {
	return file_sudo_protobuf_service_online_service_pir_proto_rawDescGZIP(), []int{11}
}

func (x *UpdatePirDataRequest) GetServiceId() uint64 {
	if x != nil {
		return x.ServiceId
	}
	return 0
}

func (x *UpdatePirDataRequest) GetLocation() *infra_adapter.DataLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

var File_sudo_protobuf_service_online_service_pir_proto protoreflect.FileDescriptor

var file_sudo_protobuf_service_online_service_pir_proto_rawDesc = []byte{
	0x0a, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x69, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x15, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x2f, 0x73, 0x75, 0x64, 0x6f, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61,
	0x70, 0x74, 0x65, 0x72, 0x2f, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x33, 0x73, 0x75, 0x64, 0x6f, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64,
	0x61, 0x70, 0x74, 0x65, 0x72, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x32, 0x73,
	0x75, 0x64, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x5f, 0x73, 0x76, 0x63, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x31, 0x73, 0x75, 0x64, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x8f, 0x03, 0x0a, 0x16, 0x50, 0x69, 0x72, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x4e, 0x0a, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e,
	0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e,
	0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6b,
	0x65, 0x79, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0a, 0x6b, 0x65, 0x79, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x23, 0x0a, 0x0d,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x73, 0x12, 0x37, 0x0a, 0x17, 0x69, 0x6e, 0x64, 0x69, 0x73, 0x63, 0x65, 0x72, 0x6e, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x16, 0x69, 0x6e, 0x64, 0x69, 0x73, 0x63, 0x65, 0x72, 0x6e, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x44, 0x65, 0x67, 0x72, 0x65, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x61,
	0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x65, 0x6e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x73, 0x6b, 0x69, 0x70, 0x45,
	0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x12, 0x3b, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49,
	0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x22, 0xd1, 0x01, 0x0a, 0x16, 0x50, 0x69, 0x72, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x45, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64,
	0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x09, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3b, 0x0a, 0x06, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x73, 0x75, 0x64,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x3c, 0x0a, 0x1b, 0x53, 0x79, 0x6e, 0x63, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0xb1, 0x01, 0x0a, 0x1c, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53,
	0x79, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x22, 0x23, 0x0a, 0x09, 0x4b, 0x65, 0x79,
	0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x86,
	0x03, 0x0a, 0x0a, 0x50, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x04,
	0x6b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x75, 0x64,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x4b, 0x65, 0x79, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x04, 0x6b, 0x65,
	0x79, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x42, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x73, 0x75,
	0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x6f,
	0x64, 0x65, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6b,
	0x65, 0x79, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0a, 0x6b, 0x65, 0x79, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x23, 0x0a, 0x0d,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x75, 0x6d,
	0x12, 0x45, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x95, 0x01, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x3d, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x73, 0x75, 0x64, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x35, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12,
	0x07, 0x0a, 0x03, 0x48, 0x49, 0x54, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x55, 0x4e, 0x48, 0x49,
	0x54, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x22,
	0x49, 0x0a, 0x0b, 0x50, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a,
	0x0a, 0x08, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x52, 0x08, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x22, 0x37, 0x0a, 0x16, 0x54, 0x65,
	0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x16, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0xba, 0x01, 0x0a, 0x15, 0x50, 0x69, 0x72, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x74,
	0x79, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x75, 0x73, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x85, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x69, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x4e, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x73, 0x75, 0x64, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f,
	0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2a, 0x35, 0x0a, 0x0c, 0x49, 0x6e, 0x76, 0x6f, 0x6b,
	0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x6c, 0x63, 0x68, 0x65, 0x6d, 0x79, 0x10,
	0x01, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x75, 0x72, 0x6e, 0x61, 0x63, 0x65, 0x10, 0x02, 0x32, 0x94,
	0x07, 0x0a, 0x18, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x69, 0x72, 0x12, 0x58, 0x0a, 0x0f, 0x50,
	0x69, 0x72, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x2d,
	0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x69, 0x72, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x58, 0x0a, 0x0f, 0x50, 0x69, 0x72, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x2d, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x50, 0x69, 0x72, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x7f, 0x0a, 0x14, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x32, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x53, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x73, 0x75,
	0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x7f, 0x0a, 0x14, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x32, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x73,
	0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4c, 0x0a, 0x03, 0x50, 0x69, 0x72, 0x12, 0x21, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x50, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x75,
	0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x50, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x58, 0x0a, 0x0f, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x12, 0x2d, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x58, 0x0a, 0x0f, 0x54, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x2d, 0x2e, 0x73,
	0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x6a, 0x0a, 0x0d, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2b, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2c, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x54, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x69, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x2b, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x69, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0x71, 0x0a, 0x17, 0x46, 0x75, 0x72, 0x6e, 0x61, 0x63, 0x65,
	0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x69, 0x72,
	0x12, 0x56, 0x0a, 0x0e, 0x50, 0x69, 0x72, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x2c, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x69, 0x72, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sudo_protobuf_service_online_service_pir_proto_rawDescOnce sync.Once
	file_sudo_protobuf_service_online_service_pir_proto_rawDescData = file_sudo_protobuf_service_online_service_pir_proto_rawDesc
)

func file_sudo_protobuf_service_online_service_pir_proto_rawDescGZIP() []byte {
	file_sudo_protobuf_service_online_service_pir_proto_rawDescOnce.Do(func() {
		file_sudo_protobuf_service_online_service_pir_proto_rawDescData = protoimpl.X.CompressGZIP(file_sudo_protobuf_service_online_service_pir_proto_rawDescData)
	})
	return file_sudo_protobuf_service_online_service_pir_proto_rawDescData
}

var file_sudo_protobuf_service_online_service_pir_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_sudo_protobuf_service_online_service_pir_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_sudo_protobuf_service_online_service_pir_proto_goTypes = []interface{}{
	(InvokeSource)(0),                    // 0: sudo.protobuf.service.InvokeSource
	(Payload_Status)(0),                  // 1: sudo.protobuf.service.Payload.Status
	(*PirDeployServerRequest)(nil),       // 2: sudo.protobuf.service.PirDeployServerRequest
	(*PirDeployClientRequest)(nil),       // 3: sudo.protobuf.service.PirDeployClientRequest
	(*SyncServerDeployInfoRequest)(nil),  // 4: sudo.protobuf.service.SyncServerDeployInfoRequest
	(*SyncServerDeployInfoResponse)(nil), // 5: sudo.protobuf.service.SyncServerDeployInfoResponse
	(*KeyColumn)(nil),                    // 6: sudo.protobuf.service.KeyColumn
	(*PirRequest)(nil),                   // 7: sudo.protobuf.service.PirRequest
	(*Payload)(nil),                      // 8: sudo.protobuf.service.Payload
	(*PirResponse)(nil),                  // 9: sudo.protobuf.service.PirResponse
	(*TerminateServerRequest)(nil),       // 10: sudo.protobuf.service.TerminateServerRequest
	(*TerminateClientRequest)(nil),       // 11: sudo.protobuf.service.TerminateClientRequest
	(*PirUsageReportRequest)(nil),        // 12: sudo.protobuf.service.PirUsageReportRequest
	(*UpdatePirDataRequest)(nil),         // 13: sudo.protobuf.service.UpdatePirDataRequest
	(*infra_adapter.DataLocation)(nil),   // 14: sudo.protobuf.infra_adapter.location.DataLocation
	(*protobuf.PartyInfo)(nil),           // 15: sudo.protobuf.infra_adapter.PartyInfo
	(SyncStatus)(0),                      // 16: sudo.protobuf.service.SyncStatus
	(enums.DataMode)(0),                  // 17: sudo.protobuf.service.enums.DataMode
	(*SyncClientDeployInfoRequest)(nil),  // 18: sudo.protobuf.service.SyncClientDeployInfoRequest
	(*ValidateTokenRequest)(nil),         // 19: sudo.protobuf.service.ValidateTokenRequest
	(*emptypb.Empty)(nil),                // 20: google.protobuf.Empty
	(*SyncClientDeployInfoResponse)(nil), // 21: sudo.protobuf.service.SyncClientDeployInfoResponse
	(*ValidateTokenResponse)(nil),        // 22: sudo.protobuf.service.ValidateTokenResponse
}
var file_sudo_protobuf_service_online_service_pir_proto_depIdxs = []int32{
	14, // 0: sudo.protobuf.service.PirDeployServerRequest.location:type_name -> sudo.protobuf.infra_adapter.location.DataLocation
	0,  // 1: sudo.protobuf.service.PirDeployServerRequest.source:type_name -> sudo.protobuf.service.InvokeSource
	15, // 2: sudo.protobuf.service.PirDeployClientRequest.party_info:type_name -> sudo.protobuf.infra_adapter.PartyInfo
	0,  // 3: sudo.protobuf.service.PirDeployClientRequest.source:type_name -> sudo.protobuf.service.InvokeSource
	16, // 4: sudo.protobuf.service.SyncServerDeployInfoResponse.status:type_name -> sudo.protobuf.service.SyncStatus
	6,  // 5: sudo.protobuf.service.PirRequest.keys:type_name -> sudo.protobuf.service.KeyColumn
	17, // 6: sudo.protobuf.service.PirRequest.data_mode:type_name -> sudo.protobuf.service.enums.DataMode
	15, // 7: sudo.protobuf.service.PirRequest.party_info:type_name -> sudo.protobuf.infra_adapter.PartyInfo
	1,  // 8: sudo.protobuf.service.Payload.status:type_name -> sudo.protobuf.service.Payload.Status
	8,  // 9: sudo.protobuf.service.PirResponse.payloads:type_name -> sudo.protobuf.service.Payload
	14, // 10: sudo.protobuf.service.UpdatePirDataRequest.location:type_name -> sudo.protobuf.infra_adapter.location.DataLocation
	2,  // 11: sudo.protobuf.service.OperatorOnlineServicePir.PirDeployServer:input_type -> sudo.protobuf.service.PirDeployServerRequest
	3,  // 12: sudo.protobuf.service.OperatorOnlineServicePir.PirDeployClient:input_type -> sudo.protobuf.service.PirDeployClientRequest
	4,  // 13: sudo.protobuf.service.OperatorOnlineServicePir.SyncServerDeployInfo:input_type -> sudo.protobuf.service.SyncServerDeployInfoRequest
	18, // 14: sudo.protobuf.service.OperatorOnlineServicePir.SyncClientDeployInfo:input_type -> sudo.protobuf.service.SyncClientDeployInfoRequest
	7,  // 15: sudo.protobuf.service.OperatorOnlineServicePir.Pir:input_type -> sudo.protobuf.service.PirRequest
	10, // 16: sudo.protobuf.service.OperatorOnlineServicePir.TerminateServer:input_type -> sudo.protobuf.service.TerminateServerRequest
	11, // 17: sudo.protobuf.service.OperatorOnlineServicePir.TerminateClient:input_type -> sudo.protobuf.service.TerminateClientRequest
	19, // 18: sudo.protobuf.service.OperatorOnlineServicePir.ValidateToken:input_type -> sudo.protobuf.service.ValidateTokenRequest
	13, // 19: sudo.protobuf.service.OperatorOnlineServicePir.UpdatePirData:input_type -> sudo.protobuf.service.UpdatePirDataRequest
	12, // 20: sudo.protobuf.service.FurnaceOnlineServicePir.PirUsageReport:input_type -> sudo.protobuf.service.PirUsageReportRequest
	20, // 21: sudo.protobuf.service.OperatorOnlineServicePir.PirDeployServer:output_type -> google.protobuf.Empty
	20, // 22: sudo.protobuf.service.OperatorOnlineServicePir.PirDeployClient:output_type -> google.protobuf.Empty
	5,  // 23: sudo.protobuf.service.OperatorOnlineServicePir.SyncServerDeployInfo:output_type -> sudo.protobuf.service.SyncServerDeployInfoResponse
	21, // 24: sudo.protobuf.service.OperatorOnlineServicePir.SyncClientDeployInfo:output_type -> sudo.protobuf.service.SyncClientDeployInfoResponse
	9,  // 25: sudo.protobuf.service.OperatorOnlineServicePir.Pir:output_type -> sudo.protobuf.service.PirResponse
	20, // 26: sudo.protobuf.service.OperatorOnlineServicePir.TerminateServer:output_type -> google.protobuf.Empty
	20, // 27: sudo.protobuf.service.OperatorOnlineServicePir.TerminateClient:output_type -> google.protobuf.Empty
	22, // 28: sudo.protobuf.service.OperatorOnlineServicePir.ValidateToken:output_type -> sudo.protobuf.service.ValidateTokenResponse
	20, // 29: sudo.protobuf.service.OperatorOnlineServicePir.UpdatePirData:output_type -> google.protobuf.Empty
	20, // 30: sudo.protobuf.service.FurnaceOnlineServicePir.PirUsageReport:output_type -> google.protobuf.Empty
	21, // [21:31] is the sub-list for method output_type
	11, // [11:21] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_sudo_protobuf_service_online_service_pir_proto_init() }
func file_sudo_protobuf_service_online_service_pir_proto_init() {
	if File_sudo_protobuf_service_online_service_pir_proto != nil {
		return
	}
	file_sudo_protobuf_service_online_service_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_sudo_protobuf_service_online_service_pir_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PirDeployServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_protobuf_service_online_service_pir_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PirDeployClientRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_protobuf_service_online_service_pir_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncServerDeployInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_protobuf_service_online_service_pir_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncServerDeployInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_protobuf_service_online_service_pir_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyColumn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_protobuf_service_online_service_pir_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PirRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_protobuf_service_online_service_pir_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_protobuf_service_online_service_pir_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PirResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_protobuf_service_online_service_pir_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminateServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_protobuf_service_online_service_pir_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminateClientRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_protobuf_service_online_service_pir_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PirUsageReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_protobuf_service_online_service_pir_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePirDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sudo_protobuf_service_online_service_pir_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_sudo_protobuf_service_online_service_pir_proto_goTypes,
		DependencyIndexes: file_sudo_protobuf_service_online_service_pir_proto_depIdxs,
		EnumInfos:         file_sudo_protobuf_service_online_service_pir_proto_enumTypes,
		MessageInfos:      file_sudo_protobuf_service_online_service_pir_proto_msgTypes,
	}.Build()
	File_sudo_protobuf_service_online_service_pir_proto = out.File
	file_sudo_protobuf_service_online_service_pir_proto_rawDesc = nil
	file_sudo_protobuf_service_online_service_pir_proto_goTypes = nil
	file_sudo_protobuf_service_online_service_pir_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// OperatorOnlineServicePirClient is the client API for OperatorOnlineServicePir service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OperatorOnlineServicePirClient interface {
	// 部署server端
	PirDeployServer(ctx context.Context, in *PirDeployServerRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// 部署client端
	PirDeployClient(ctx context.Context, in *PirDeployClientRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// 同步server端部署结果，包括状态码、进度、分桶数、异常信息
	SyncServerDeployInfo(ctx context.Context, in *SyncServerDeployInfoRequest, opts ...grpc.CallOption) (*SyncServerDeployInfoResponse, error)
	// 同步client端部署结果，包括状态码、进度、分桶数、匹配列、异常信息
	SyncClientDeployInfo(ctx context.Context, in *SyncClientDeployInfoRequest, opts ...grpc.CallOption) (*SyncClientDeployInfoResponse, error)
	// 匿踪查询
	Pir(ctx context.Context, in *PirRequest, opts ...grpc.CallOption) (*PirResponse, error)
	// 终止server端服务
	TerminateServer(ctx context.Context, in *TerminateServerRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// 终止client端服务
	TerminateClient(ctx context.Context, in *TerminateClientRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// validate token，对于一个client对应同一个server的多个token的情况，不要重复调用deploy，而是校验token即可
	ValidateToken(ctx context.Context, in *ValidateTokenRequest, opts ...grpc.CallOption) (*ValidateTokenResponse, error)
	// 更新数据源信息。
	// 更新过程中,如果有Pir请求到来,采用旧PirDeployServerRequest.location；更新完成后,Pir请求采用UpdatePirDataRequest.location
	UpdatePirData(ctx context.Context, in *UpdatePirDataRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type operatorOnlineServicePirClient struct {
	cc grpc.ClientConnInterface
}

func NewOperatorOnlineServicePirClient(cc grpc.ClientConnInterface) OperatorOnlineServicePirClient {
	return &operatorOnlineServicePirClient{cc}
}

func (c *operatorOnlineServicePirClient) PirDeployServer(ctx context.Context, in *PirDeployServerRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/sudo.protobuf.service.OperatorOnlineServicePir/PirDeployServer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *operatorOnlineServicePirClient) PirDeployClient(ctx context.Context, in *PirDeployClientRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/sudo.protobuf.service.OperatorOnlineServicePir/PirDeployClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *operatorOnlineServicePirClient) SyncServerDeployInfo(ctx context.Context, in *SyncServerDeployInfoRequest, opts ...grpc.CallOption) (*SyncServerDeployInfoResponse, error) {
	out := new(SyncServerDeployInfoResponse)
	err := c.cc.Invoke(ctx, "/sudo.protobuf.service.OperatorOnlineServicePir/SyncServerDeployInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *operatorOnlineServicePirClient) SyncClientDeployInfo(ctx context.Context, in *SyncClientDeployInfoRequest, opts ...grpc.CallOption) (*SyncClientDeployInfoResponse, error) {
	out := new(SyncClientDeployInfoResponse)
	err := c.cc.Invoke(ctx, "/sudo.protobuf.service.OperatorOnlineServicePir/SyncClientDeployInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *operatorOnlineServicePirClient) Pir(ctx context.Context, in *PirRequest, opts ...grpc.CallOption) (*PirResponse, error) {
	out := new(PirResponse)
	err := c.cc.Invoke(ctx, "/sudo.protobuf.service.OperatorOnlineServicePir/Pir", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *operatorOnlineServicePirClient) TerminateServer(ctx context.Context, in *TerminateServerRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/sudo.protobuf.service.OperatorOnlineServicePir/TerminateServer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *operatorOnlineServicePirClient) TerminateClient(ctx context.Context, in *TerminateClientRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/sudo.protobuf.service.OperatorOnlineServicePir/TerminateClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *operatorOnlineServicePirClient) ValidateToken(ctx context.Context, in *ValidateTokenRequest, opts ...grpc.CallOption) (*ValidateTokenResponse, error) {
	out := new(ValidateTokenResponse)
	err := c.cc.Invoke(ctx, "/sudo.protobuf.service.OperatorOnlineServicePir/ValidateToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *operatorOnlineServicePirClient) UpdatePirData(ctx context.Context, in *UpdatePirDataRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/sudo.protobuf.service.OperatorOnlineServicePir/UpdatePirData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OperatorOnlineServicePirServer is the server API for OperatorOnlineServicePir service.
type OperatorOnlineServicePirServer interface {
	// 部署server端
	PirDeployServer(context.Context, *PirDeployServerRequest) (*emptypb.Empty, error)
	// 部署client端
	PirDeployClient(context.Context, *PirDeployClientRequest) (*emptypb.Empty, error)
	// 同步server端部署结果，包括状态码、进度、分桶数、异常信息
	SyncServerDeployInfo(context.Context, *SyncServerDeployInfoRequest) (*SyncServerDeployInfoResponse, error)
	// 同步client端部署结果，包括状态码、进度、分桶数、匹配列、异常信息
	SyncClientDeployInfo(context.Context, *SyncClientDeployInfoRequest) (*SyncClientDeployInfoResponse, error)
	// 匿踪查询
	Pir(context.Context, *PirRequest) (*PirResponse, error)
	// 终止server端服务
	TerminateServer(context.Context, *TerminateServerRequest) (*emptypb.Empty, error)
	// 终止client端服务
	TerminateClient(context.Context, *TerminateClientRequest) (*emptypb.Empty, error)
	// validate token，对于一个client对应同一个server的多个token的情况，不要重复调用deploy，而是校验token即可
	ValidateToken(context.Context, *ValidateTokenRequest) (*ValidateTokenResponse, error)
	// 更新数据源信息。
	// 更新过程中,如果有Pir请求到来,采用旧PirDeployServerRequest.location；更新完成后,Pir请求采用UpdatePirDataRequest.location
	UpdatePirData(context.Context, *UpdatePirDataRequest) (*emptypb.Empty, error)
}

// UnimplementedOperatorOnlineServicePirServer can be embedded to have forward compatible implementations.
type UnimplementedOperatorOnlineServicePirServer struct {
}

func (*UnimplementedOperatorOnlineServicePirServer) PirDeployServer(context.Context, *PirDeployServerRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PirDeployServer not implemented")
}
func (*UnimplementedOperatorOnlineServicePirServer) PirDeployClient(context.Context, *PirDeployClientRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PirDeployClient not implemented")
}
func (*UnimplementedOperatorOnlineServicePirServer) SyncServerDeployInfo(context.Context, *SyncServerDeployInfoRequest) (*SyncServerDeployInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SyncServerDeployInfo not implemented")
}
func (*UnimplementedOperatorOnlineServicePirServer) SyncClientDeployInfo(context.Context, *SyncClientDeployInfoRequest) (*SyncClientDeployInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SyncClientDeployInfo not implemented")
}
func (*UnimplementedOperatorOnlineServicePirServer) Pir(context.Context, *PirRequest) (*PirResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Pir not implemented")
}
func (*UnimplementedOperatorOnlineServicePirServer) TerminateServer(context.Context, *TerminateServerRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TerminateServer not implemented")
}
func (*UnimplementedOperatorOnlineServicePirServer) TerminateClient(context.Context, *TerminateClientRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TerminateClient not implemented")
}
func (*UnimplementedOperatorOnlineServicePirServer) ValidateToken(context.Context, *ValidateTokenRequest) (*ValidateTokenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateToken not implemented")
}
func (*UnimplementedOperatorOnlineServicePirServer) UpdatePirData(context.Context, *UpdatePirDataRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePirData not implemented")
}

func RegisterOperatorOnlineServicePirServer(s *grpc.Server, srv OperatorOnlineServicePirServer) {
	s.RegisterService(&_OperatorOnlineServicePir_serviceDesc, srv)
}

func _OperatorOnlineServicePir_PirDeployServer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PirDeployServerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OperatorOnlineServicePirServer).PirDeployServer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sudo.protobuf.service.OperatorOnlineServicePir/PirDeployServer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OperatorOnlineServicePirServer).PirDeployServer(ctx, req.(*PirDeployServerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OperatorOnlineServicePir_PirDeployClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PirDeployClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OperatorOnlineServicePirServer).PirDeployClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sudo.protobuf.service.OperatorOnlineServicePir/PirDeployClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OperatorOnlineServicePirServer).PirDeployClient(ctx, req.(*PirDeployClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OperatorOnlineServicePir_SyncServerDeployInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SyncServerDeployInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OperatorOnlineServicePirServer).SyncServerDeployInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sudo.protobuf.service.OperatorOnlineServicePir/SyncServerDeployInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OperatorOnlineServicePirServer).SyncServerDeployInfo(ctx, req.(*SyncServerDeployInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OperatorOnlineServicePir_SyncClientDeployInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SyncClientDeployInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OperatorOnlineServicePirServer).SyncClientDeployInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sudo.protobuf.service.OperatorOnlineServicePir/SyncClientDeployInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OperatorOnlineServicePirServer).SyncClientDeployInfo(ctx, req.(*SyncClientDeployInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OperatorOnlineServicePir_Pir_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PirRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OperatorOnlineServicePirServer).Pir(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sudo.protobuf.service.OperatorOnlineServicePir/Pir",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OperatorOnlineServicePirServer).Pir(ctx, req.(*PirRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OperatorOnlineServicePir_TerminateServer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TerminateServerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OperatorOnlineServicePirServer).TerminateServer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sudo.protobuf.service.OperatorOnlineServicePir/TerminateServer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OperatorOnlineServicePirServer).TerminateServer(ctx, req.(*TerminateServerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OperatorOnlineServicePir_TerminateClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TerminateClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OperatorOnlineServicePirServer).TerminateClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sudo.protobuf.service.OperatorOnlineServicePir/TerminateClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OperatorOnlineServicePirServer).TerminateClient(ctx, req.(*TerminateClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OperatorOnlineServicePir_ValidateToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OperatorOnlineServicePirServer).ValidateToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sudo.protobuf.service.OperatorOnlineServicePir/ValidateToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OperatorOnlineServicePirServer).ValidateToken(ctx, req.(*ValidateTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OperatorOnlineServicePir_UpdatePirData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePirDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OperatorOnlineServicePirServer).UpdatePirData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sudo.protobuf.service.OperatorOnlineServicePir/UpdatePirData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OperatorOnlineServicePirServer).UpdatePirData(ctx, req.(*UpdatePirDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OperatorOnlineServicePir_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sudo.protobuf.service.OperatorOnlineServicePir",
	HandlerType: (*OperatorOnlineServicePirServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PirDeployServer",
			Handler:    _OperatorOnlineServicePir_PirDeployServer_Handler,
		},
		{
			MethodName: "PirDeployClient",
			Handler:    _OperatorOnlineServicePir_PirDeployClient_Handler,
		},
		{
			MethodName: "SyncServerDeployInfo",
			Handler:    _OperatorOnlineServicePir_SyncServerDeployInfo_Handler,
		},
		{
			MethodName: "SyncClientDeployInfo",
			Handler:    _OperatorOnlineServicePir_SyncClientDeployInfo_Handler,
		},
		{
			MethodName: "Pir",
			Handler:    _OperatorOnlineServicePir_Pir_Handler,
		},
		{
			MethodName: "TerminateServer",
			Handler:    _OperatorOnlineServicePir_TerminateServer_Handler,
		},
		{
			MethodName: "TerminateClient",
			Handler:    _OperatorOnlineServicePir_TerminateClient_Handler,
		},
		{
			MethodName: "ValidateToken",
			Handler:    _OperatorOnlineServicePir_ValidateToken_Handler,
		},
		{
			MethodName: "UpdatePirData",
			Handler:    _OperatorOnlineServicePir_UpdatePirData_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sudo/protobuf/service/online_service_pir.proto",
}

// FurnaceOnlineServicePirClient is the client API for FurnaceOnlineServicePir service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FurnaceOnlineServicePirClient interface {
	// server端，Operator完成pir之后call Furnace
	PirUsageReport(ctx context.Context, in *PirUsageReportRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type furnaceOnlineServicePirClient struct {
	cc grpc.ClientConnInterface
}

func NewFurnaceOnlineServicePirClient(cc grpc.ClientConnInterface) FurnaceOnlineServicePirClient {
	return &furnaceOnlineServicePirClient{cc}
}

func (c *furnaceOnlineServicePirClient) PirUsageReport(ctx context.Context, in *PirUsageReportRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/sudo.protobuf.service.FurnaceOnlineServicePir/PirUsageReport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FurnaceOnlineServicePirServer is the server API for FurnaceOnlineServicePir service.
type FurnaceOnlineServicePirServer interface {
	// server端，Operator完成pir之后call Furnace
	PirUsageReport(context.Context, *PirUsageReportRequest) (*emptypb.Empty, error)
}

// UnimplementedFurnaceOnlineServicePirServer can be embedded to have forward compatible implementations.
type UnimplementedFurnaceOnlineServicePirServer struct {
}

func (*UnimplementedFurnaceOnlineServicePirServer) PirUsageReport(context.Context, *PirUsageReportRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PirUsageReport not implemented")
}

func RegisterFurnaceOnlineServicePirServer(s *grpc.Server, srv FurnaceOnlineServicePirServer) {
	s.RegisterService(&_FurnaceOnlineServicePir_serviceDesc, srv)
}

func _FurnaceOnlineServicePir_PirUsageReport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PirUsageReportRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FurnaceOnlineServicePirServer).PirUsageReport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sudo.protobuf.service.FurnaceOnlineServicePir/PirUsageReport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FurnaceOnlineServicePirServer).PirUsageReport(ctx, req.(*PirUsageReportRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FurnaceOnlineServicePir_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sudo.protobuf.service.FurnaceOnlineServicePir",
	HandlerType: (*FurnaceOnlineServicePirServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PirUsageReport",
			Handler:    _FurnaceOnlineServicePir_PirUsageReport_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sudo/protobuf/service/online_service_pir.proto",
}
