// Copyright 2022 Sudo Technology Co., Ltd.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.18.1
// source: sudo/protobuf/mpc_virtual_service/platform/online_service.proto

package online_service

import (
	protobuf "github.com/sudo-privacy/sudo-sdk-go/protobuf/basic/protobuf"
	enums "github.com/sudo-privacy/sudo-sdk-go/protobuf/basic/protobuf/enums"
	infra_adapter "github.com/sudo-privacy/sudo-sdk-go/protobuf/basic/protobuf/infra_adapter"
	apl "github.com/sudo-privacy/sudo-sdk-go/protobuf/basic/protobuf/virtualservice/platformpb/apl"
	_ "github.com/sudo-privacy/sudo-sdk-go/protobuf/basic/protobuf/virtualservice/platformpb/options"
	paginator "github.com/sudo-privacy/sudo-sdk-go/protobuf/basic/protobuf/virtualservice/platformpb/paginator"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ServiceModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedTs     int64  `protobuf:"varint,2,opt,name=created_ts,json=createdTs,proto3" json:"created_ts,omitempty"`
	UpdatedTs     int64  `protobuf:"varint,3,opt,name=updated_ts,json=updatedTs,proto3" json:"updated_ts,omitempty"`
	ServiceId     uint64 `protobuf:"varint,4,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	Name          string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Description   string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	ProjectId     uint64 `protobuf:"varint,7,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	OwnerPartyId  string `protobuf:"bytes,8,opt,name=owner_party_id,json=ownerPartyId,proto3" json:"owner_party_id,omitempty"`
	OwnerUserId   uint64 `protobuf:"varint,9,opt,name=owner_user_id,json=ownerUserId,proto3" json:"owner_user_id,omitempty"`
	ClientPartyId string `protobuf:"bytes,10,opt,name=client_party_id,json=clientPartyId,proto3" json:"client_party_id,omitempty"`
	Path          string `protobuf:"bytes,11,opt,name=path,proto3" json:"path,omitempty"`
	Token         string `protobuf:"bytes,12,opt,name=token,proto3" json:"token,omitempty"`
	Message       string `protobuf:"bytes,13,opt,name=message,proto3" json:"message,omitempty"`
	// predict task ID
	TaskId           uint64                     `protobuf:"varint,14,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	ProtectId        bool                       `protobuf:"varint,15,opt,name=protect_id,json=protectId,proto3" json:"protect_id,omitempty"`
	TerminatePartyId string                     `protobuf:"bytes,16,opt,name=terminate_party_id,json=terminatePartyId,proto3" json:"terminate_party_id,omitempty"`
	AplId            uint64                     `protobuf:"varint,17,opt,name=apl_id,json=aplId,proto3" json:"apl_id,omitempty"`
	TripletsBitInfo  enums.TripletsBitInfo_Type `protobuf:"varint,18,opt,name=triplets_bit_info,json=tripletsBitInfo,proto3,enum=sudo.protobuf.enums.TripletsBitInfo_Type" json:"triplets_bit_info,omitempty"`
}

func (x *ServiceModel) Reset() {
	*x = ServiceModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceModel) ProtoMessage() {}

func (x *ServiceModel) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceModel.ProtoReflect.Descriptor instead.
func (*ServiceModel) Descriptor() ([]byte, []int) {
	return file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_rawDescGZIP(), []int{0}
}

func (x *ServiceModel) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ServiceModel) GetCreatedTs() int64 {
	if x != nil {
		return x.CreatedTs
	}
	return 0
}

func (x *ServiceModel) GetUpdatedTs() int64 {
	if x != nil {
		return x.UpdatedTs
	}
	return 0
}

func (x *ServiceModel) GetServiceId() uint64 {
	if x != nil {
		return x.ServiceId
	}
	return 0
}

func (x *ServiceModel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServiceModel) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ServiceModel) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ServiceModel) GetOwnerPartyId() string {
	if x != nil {
		return x.OwnerPartyId
	}
	return ""
}

func (x *ServiceModel) GetOwnerUserId() uint64 {
	if x != nil {
		return x.OwnerUserId
	}
	return 0
}

func (x *ServiceModel) GetClientPartyId() string {
	if x != nil {
		return x.ClientPartyId
	}
	return ""
}

func (x *ServiceModel) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ServiceModel) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ServiceModel) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ServiceModel) GetTaskId() uint64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *ServiceModel) GetProtectId() bool {
	if x != nil {
		return x.ProtectId
	}
	return false
}

func (x *ServiceModel) GetTerminatePartyId() string {
	if x != nil {
		return x.TerminatePartyId
	}
	return ""
}

func (x *ServiceModel) GetAplId() uint64 {
	if x != nil {
		return x.AplId
	}
	return 0
}

func (x *ServiceModel) GetTripletsBitInfo() enums.TripletsBitInfo_Type {
	if x != nil {
		return x.TripletsBitInfo
	}
	return enums.TripletsBitInfo_DEFAULT
}

type OnlineInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	VtableId    uint64 `protobuf:"varint,2,opt,name=vtable_id,json=vtableId,proto3" json:"vtable_id,omitempty"`
	KeyColumn   string `protobuf:"bytes,3,opt,name=key_column,json=keyColumn,proto3" json:"key_column,omitempty"`
	BucketCount uint64 `protobuf:"varint,4,opt,name=bucket_count,json=bucketCount,proto3" json:"bucket_count,omitempty"`
	// Deprecated: 模型服务保护ID时，分区数暂未使用
	//
	// Deprecated: Do not use.
	PartitionCount uint64 `protobuf:"varint,5,opt,name=partition_count,json=partitionCount,proto3" json:"partition_count,omitempty"`
}

func (x *OnlineInput) Reset() {
	*x = OnlineInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlineInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineInput) ProtoMessage() {}

func (x *OnlineInput) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineInput.ProtoReflect.Descriptor instead.
func (*OnlineInput) Descriptor() ([]byte, []int) {
	return file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_rawDescGZIP(), []int{1}
}

func (x *OnlineInput) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *OnlineInput) GetVtableId() uint64 {
	if x != nil {
		return x.VtableId
	}
	return 0
}

func (x *OnlineInput) GetKeyColumn() string {
	if x != nil {
		return x.KeyColumn
	}
	return ""
}

func (x *OnlineInput) GetBucketCount() uint64 {
	if x != nil {
		return x.BucketCount
	}
	return 0
}

// Deprecated: Do not use.
func (x *OnlineInput) GetPartitionCount() uint64 {
	if x != nil {
		return x.PartitionCount
	}
	return 0
}

type OnlineParticipant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId        string                                    `protobuf:"bytes,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	PreloadInputs  map[string]*infra_adapter.FurnaceProperty `protobuf:"bytes,2,rep,name=preload_inputs,json=preloadInputs,proto3" json:"preload_inputs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	UpstreamInputs map[string]*protobuf.OnlineParamKey       `protobuf:"bytes,3,rep,name=upstream_inputs,json=upstreamInputs,proto3" json:"upstream_inputs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	OnlineInputs   map[string]*OnlineInput                   `protobuf:"bytes,4,rep,name=online_inputs,json=onlineInputs,proto3" json:"online_inputs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *OnlineParticipant) Reset() {
	*x = OnlineParticipant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlineParticipant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineParticipant) ProtoMessage() {}

func (x *OnlineParticipant) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineParticipant.ProtoReflect.Descriptor instead.
func (*OnlineParticipant) Descriptor() ([]byte, []int) {
	return file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_rawDescGZIP(), []int{2}
}

func (x *OnlineParticipant) GetPartyId() string {
	if x != nil {
		return x.PartyId
	}
	return ""
}

func (x *OnlineParticipant) GetPreloadInputs() map[string]*infra_adapter.FurnaceProperty {
	if x != nil {
		return x.PreloadInputs
	}
	return nil
}

func (x *OnlineParticipant) GetUpstreamInputs() map[string]*protobuf.OnlineParamKey {
	if x != nil {
		return x.UpstreamInputs
	}
	return nil
}

func (x *OnlineParticipant) GetOnlineInputs() map[string]*OnlineInput {
	if x != nil {
		return x.OnlineInputs
	}
	return nil
}

type OnlineOperatorTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	StageType    enums.Stage_Type     `protobuf:"varint,2,opt,name=stage_type,json=stageType,proto3,enum=sudo.protobuf.enums.Stage_Type" json:"stage_type,omitempty"`
	StageTypeStr string               `protobuf:"bytes,3,opt,name=stage_type_str,json=stageTypeStr,proto3" json:"stage_type_str,omitempty"`
	Participants []*OnlineParticipant `protobuf:"bytes,4,rep,name=participants,proto3" json:"participants,omitempty"`
}

func (x *OnlineOperatorTemplate) Reset() {
	*x = OnlineOperatorTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlineOperatorTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineOperatorTemplate) ProtoMessage() {}

func (x *OnlineOperatorTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineOperatorTemplate.ProtoReflect.Descriptor instead.
func (*OnlineOperatorTemplate) Descriptor() ([]byte, []int) {
	return file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_rawDescGZIP(), []int{3}
}

func (x *OnlineOperatorTemplate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OnlineOperatorTemplate) GetStageType() enums.Stage_Type {
	if x != nil {
		return x.StageType
	}
	return enums.Stage_unknown
}

func (x *OnlineOperatorTemplate) GetStageTypeStr() string {
	if x != nil {
		return x.StageTypeStr
	}
	return ""
}

func (x *OnlineOperatorTemplate) GetParticipants() []*OnlineParticipant {
	if x != nil {
		return x.Participants
	}
	return nil
}

// OnlineBlockTemplate 几乎就是OnlineBlock的子集，furnace可以根据它
// 来生成需要的OnlineBlock来发给operator（例如填充url，数据路径等）。
// 包一层的原因是为了对前端/用户友好, 以及尽量解耦paas之间的联调和furnace/operator的联调
type OnlineBlockTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyInfos    []*protobuf.PartyInfo     `protobuf:"bytes,1,rep,name=party_infos,json=partyInfos,proto3" json:"party_infos,omitempty"`
	Operators     []*OnlineOperatorTemplate `protobuf:"bytes,2,rep,name=operators,proto3" json:"operators,omitempty"`
	ClientPartyId string                    `protobuf:"bytes,3,opt,name=client_party_id,json=clientPartyId,proto3" json:"client_party_id,omitempty"`
}

func (x *OnlineBlockTemplate) Reset() {
	*x = OnlineBlockTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlineBlockTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineBlockTemplate) ProtoMessage() {}

func (x *OnlineBlockTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineBlockTemplate.ProtoReflect.Descriptor instead.
func (*OnlineBlockTemplate) Descriptor() ([]byte, []int) {
	return file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_rawDescGZIP(), []int{4}
}

func (x *OnlineBlockTemplate) GetPartyInfos() []*protobuf.PartyInfo {
	if x != nil {
		return x.PartyInfos
	}
	return nil
}

func (x *OnlineBlockTemplate) GetOperators() []*OnlineOperatorTemplate {
	if x != nil {
		return x.Operators
	}
	return nil
}

func (x *OnlineBlockTemplate) GetClientPartyId() string {
	if x != nil {
		return x.ClientPartyId
	}
	return ""
}

type GetOnlineBlockFromModelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *OnlineBlockTemplate `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetOnlineBlockFromModelResponse) Reset() {
	*x = GetOnlineBlockFromModelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOnlineBlockFromModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOnlineBlockFromModelResponse) ProtoMessage() {}

func (x *GetOnlineBlockFromModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOnlineBlockFromModelResponse.ProtoReflect.Descriptor instead.
func (*GetOnlineBlockFromModelResponse) Descriptor() ([]byte, []int) {
	return file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetOnlineBlockFromModelResponse) GetData() *OnlineBlockTemplate {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetOnlineBlockFromModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 在线任务 id
	TaskId       uint64 `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	MajorVersion uint64 `protobuf:"varint,2,opt,name=major_version,json=majorVersion,proto3" json:"major_version,omitempty"`
	MinorVersion uint64 `protobuf:"varint,3,opt,name=minor_version,json=minorVersion,proto3" json:"minor_version,omitempty"`
	// 请求会转发到的中心节点ID
	// 若非空，则覆盖grpc metadata中设置的to-tusita
	ToTusita string `protobuf:"bytes,4,opt,name=to_tusita,json=toTusita,proto3" json:"to_tusita,omitempty"`
}

func (x *GetOnlineBlockFromModelRequest) Reset() {
	*x = GetOnlineBlockFromModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOnlineBlockFromModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOnlineBlockFromModelRequest) ProtoMessage() {}

func (x *GetOnlineBlockFromModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOnlineBlockFromModelRequest.ProtoReflect.Descriptor instead.
func (*GetOnlineBlockFromModelRequest) Descriptor() ([]byte, []int) {
	return file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetOnlineBlockFromModelRequest) GetTaskId() uint64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *GetOnlineBlockFromModelRequest) GetMajorVersion() uint64 {
	if x != nil {
		return x.MajorVersion
	}
	return 0
}

func (x *GetOnlineBlockFromModelRequest) GetMinorVersion() uint64 {
	if x != nil {
		return x.MinorVersion
	}
	return 0
}

func (x *GetOnlineBlockFromModelRequest) GetToTusita() string {
	if x != nil {
		return x.ToTusita
	}
	return ""
}

type PredictTaskInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId       uint64 `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	BeHidden     bool   `protobuf:"varint,3,opt,name=be_hidden,json=beHidden,proto3" json:"be_hidden,omitempty"`
	MajorVersion uint64 `protobuf:"varint,4,opt,name=major_version,json=majorVersion,proto3" json:"major_version,omitempty"`
	MinorVersion uint64 `protobuf:"varint,5,opt,name=minor_version,json=minorVersion,proto3" json:"minor_version,omitempty"`
}

func (x *PredictTaskInfo) Reset() {
	*x = PredictTaskInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PredictTaskInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PredictTaskInfo) ProtoMessage() {}

func (x *PredictTaskInfo) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PredictTaskInfo.ProtoReflect.Descriptor instead.
func (*PredictTaskInfo) Descriptor() ([]byte, []int) {
	return file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_rawDescGZIP(), []int{7}
}

func (x *PredictTaskInfo) GetTaskId() uint64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *PredictTaskInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PredictTaskInfo) GetBeHidden() bool {
	if x != nil {
		return x.BeHidden
	}
	return false
}

func (x *PredictTaskInfo) GetMajorVersion() uint64 {
	if x != nil {
		return x.MajorVersion
	}
	return 0
}

func (x *PredictTaskInfo) GetMinorVersion() uint64 {
	if x != nil {
		return x.MinorVersion
	}
	return 0
}

type ReviewInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReviewerName string        `protobuf:"bytes,1,opt,name=reviewer_name,json=reviewerName,proto3" json:"reviewer_name,omitempty"`
	Base         *apl.Reviewer `protobuf:"bytes,2,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *ReviewInfo) Reset() {
	*x = ReviewInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReviewInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReviewInfo) ProtoMessage() {}

func (x *ReviewInfo) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReviewInfo.ProtoReflect.Descriptor instead.
func (*ReviewInfo) Descriptor() ([]byte, []int) {
	return file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_rawDescGZIP(), []int{8}
}

func (x *ReviewInfo) GetReviewerName() string {
	if x != nil {
		return x.ReviewerName
	}
	return ""
}

func (x *ReviewInfo) GetBase() *apl.Reviewer {
	if x != nil {
		return x.Base
	}
	return nil
}

type Service struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base        *ServiceModel        `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Status      string               `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	ServiceType string               `protobuf:"bytes,3,opt,name=service_type,json=serviceType,proto3" json:"service_type,omitempty"`
	ApiPath     string               `protobuf:"bytes,4,opt,name=api_path,json=apiPath,proto3" json:"api_path,omitempty"`
	OnlineBlock *OnlineBlockTemplate `protobuf:"bytes,5,opt,name=online_block,json=onlineBlock,proto3" json:"online_block,omitempty"`
	ProjectName string               `protobuf:"bytes,6,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	UserName    string               `protobuf:"bytes,7,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	TaskInfo    *PredictTaskInfo     `protobuf:"bytes,8,opt,name=task_info,json=taskInfo,proto3" json:"task_info,omitempty"`
	Reviewers   []*ReviewInfo        `protobuf:"bytes,9,rep,name=reviewers,proto3" json:"reviewers,omitempty"`
}

func (x *Service) Reset() {
	*x = Service{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service) ProtoMessage() {}

func (x *Service) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service.ProtoReflect.Descriptor instead.
func (*Service) Descriptor() ([]byte, []int) {
	return file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_rawDescGZIP(), []int{9}
}

func (x *Service) GetBase() *ServiceModel {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *Service) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Service) GetServiceType() string {
	if x != nil {
		return x.ServiceType
	}
	return ""
}

func (x *Service) GetApiPath() string {
	if x != nil {
		return x.ApiPath
	}
	return ""
}

func (x *Service) GetOnlineBlock() *OnlineBlockTemplate {
	if x != nil {
		return x.OnlineBlock
	}
	return nil
}

func (x *Service) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *Service) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *Service) GetTaskInfo() *PredictTaskInfo {
	if x != nil {
		return x.TaskInfo
	}
	return nil
}

func (x *Service) GetReviewers() []*ReviewInfo {
	if x != nil {
		return x.Reviewers
	}
	return nil
}

type ServiceParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId       uint64                     `protobuf:"varint,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	Name            string                     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description     string                     `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	ServiceType     enums.Service_Type         `protobuf:"varint,4,opt,name=service_type,json=serviceType,proto3,enum=sudo.protobuf.enums.Service_Type" json:"service_type,omitempty"`
	ProjectId       uint64                     `protobuf:"varint,5,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Path            string                     `protobuf:"bytes,6,opt,name=path,proto3" json:"path,omitempty"`
	Token           string                     `protobuf:"bytes,7,opt,name=token,proto3" json:"token,omitempty"`
	ProtectId       bool                       `protobuf:"varint,8,opt,name=protect_id,json=protectId,proto3" json:"protect_id,omitempty"`
	TaskId          uint64                     `protobuf:"varint,9,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	MajorVersion    uint64                     `protobuf:"varint,10,opt,name=major_version,json=majorVersion,proto3" json:"major_version,omitempty"`
	MinorVersion    uint64                     `protobuf:"varint,11,opt,name=minor_version,json=minorVersion,proto3" json:"minor_version,omitempty"`
	TripletsBitInfo enums.TripletsBitInfo_Type `protobuf:"varint,12,opt,name=triplets_bit_info,json=tripletsBitInfo,proto3,enum=sudo.protobuf.enums.TripletsBitInfo_Type" json:"triplets_bit_info,omitempty"`
	OnlineBlock     *OnlineBlockTemplate       `protobuf:"bytes,13,opt,name=online_block,json=onlineBlock,proto3" json:"online_block,omitempty"`
}

func (x *ServiceParam) Reset() {
	*x = ServiceParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceParam) ProtoMessage() {}

func (x *ServiceParam) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceParam.ProtoReflect.Descriptor instead.
func (*ServiceParam) Descriptor() ([]byte, []int) {
	return file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_rawDescGZIP(), []int{10}
}

func (x *ServiceParam) GetServiceId() uint64 {
	if x != nil {
		return x.ServiceId
	}
	return 0
}

func (x *ServiceParam) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServiceParam) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ServiceParam) GetServiceType() enums.Service_Type {
	if x != nil {
		return x.ServiceType
	}
	return enums.Service_UNKNOWN_TYPE
}

func (x *ServiceParam) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ServiceParam) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ServiceParam) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ServiceParam) GetProtectId() bool {
	if x != nil {
		return x.ProtectId
	}
	return false
}

func (x *ServiceParam) GetTaskId() uint64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *ServiceParam) GetMajorVersion() uint64 {
	if x != nil {
		return x.MajorVersion
	}
	return 0
}

func (x *ServiceParam) GetMinorVersion() uint64 {
	if x != nil {
		return x.MinorVersion
	}
	return 0
}

func (x *ServiceParam) GetTripletsBitInfo() enums.TripletsBitInfo_Type {
	if x != nil {
		return x.TripletsBitInfo
	}
	return enums.TripletsBitInfo_DEFAULT
}

func (x *ServiceParam) GetOnlineBlock() *OnlineBlockTemplate {
	if x != nil {
		return x.OnlineBlock
	}
	return nil
}

type CreateServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service *ServiceParam `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	// 请求会转发到的中心节点ID
	// 若非空，则覆盖grpc metadata中设置的to-tusita
	ToTusita string `protobuf:"bytes,2,opt,name=to_tusita,json=toTusita,proto3" json:"to_tusita,omitempty"`
}

func (x *CreateServiceRequest) Reset() {
	*x = CreateServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateServiceRequest) ProtoMessage() {}

func (x *CreateServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateServiceRequest.ProtoReflect.Descriptor instead.
func (*CreateServiceRequest) Descriptor() ([]byte, []int) {
	return file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_rawDescGZIP(), []int{11}
}

func (x *CreateServiceRequest) GetService() *ServiceParam {
	if x != nil {
		return x.Service
	}
	return nil
}

func (x *CreateServiceRequest) GetToTusita() string {
	if x != nil {
		return x.ToTusita
	}
	return ""
}

type CreateServiceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *Service `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateServiceResponse) Reset() {
	*x = CreateServiceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateServiceResponse) ProtoMessage() {}

func (x *CreateServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateServiceResponse.ProtoReflect.Descriptor instead.
func (*CreateServiceResponse) Descriptor() ([]byte, []int) {
	return file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_rawDescGZIP(), []int{12}
}

func (x *CreateServiceResponse) GetData() *Service {
	if x != nil {
		return x.Data
	}
	return nil
}

type ServiceResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service *Service        `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	Config  *structpb.Value `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *ServiceResp) Reset() {
	*x = ServiceResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceResp) ProtoMessage() {}

func (x *ServiceResp) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceResp.ProtoReflect.Descriptor instead.
func (*ServiceResp) Descriptor() ([]byte, []int) {
	return file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_rawDescGZIP(), []int{13}
}

func (x *ServiceResp) GetService() *Service {
	if x != nil {
		return x.Service
	}
	return nil
}

func (x *ServiceResp) GetConfig() *structpb.Value {
	if x != nil {
		return x.Config
	}
	return nil
}

type ServiceFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pager      *paginator.Paginator `protobuf:"bytes,1,opt,name=pager,proto3" json:"pager,omitempty"`
	ServiceIds []uint64             `protobuf:"varint,2,rep,packed,name=service_ids,json=serviceIds,proto3" json:"service_ids,omitempty"`
	// 暂时未使用
	// repeated uint64 project_ids = 3;
	OwnerPartyId       string `protobuf:"bytes,4,opt,name=owner_party_id,json=ownerPartyId,proto3" json:"owner_party_id,omitempty"`
	OwnerUserId        uint64 `protobuf:"varint,5,opt,name=owner_user_id,json=ownerUserId,proto3" json:"owner_user_id,omitempty"`
	ServiceType        string `protobuf:"bytes,6,opt,name=service_type,json=serviceType,proto3" json:"service_type,omitempty"`
	ExceptOwnerPartyId string `protobuf:"bytes,7,opt,name=except_owner_party_id,json=exceptOwnerPartyId,proto3" json:"except_owner_party_id,omitempty"`
	FuzzyText          string `protobuf:"bytes,8,opt,name=fuzzy_text,json=fuzzyText,proto3" json:"fuzzy_text,omitempty"`
	Status             string `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
	IncludeSoftDeleted bool   `protobuf:"varint,10,opt,name=include_soft_deleted,json=includeSoftDeleted,proto3" json:"include_soft_deleted,omitempty"`
	WithReviwers       bool   `protobuf:"varint,11,opt,name=with_reviwers,json=withReviwers,proto3" json:"with_reviwers,omitempty"`
}

func (x *ServiceFilter) Reset() {
	*x = ServiceFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceFilter) ProtoMessage() {}

func (x *ServiceFilter) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceFilter.ProtoReflect.Descriptor instead.
func (*ServiceFilter) Descriptor() ([]byte, []int) {
	return file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_rawDescGZIP(), []int{14}
}

func (x *ServiceFilter) GetPager() *paginator.Paginator {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *ServiceFilter) GetServiceIds() []uint64 {
	if x != nil {
		return x.ServiceIds
	}
	return nil
}

func (x *ServiceFilter) GetOwnerPartyId() string {
	if x != nil {
		return x.OwnerPartyId
	}
	return ""
}

func (x *ServiceFilter) GetOwnerUserId() uint64 {
	if x != nil {
		return x.OwnerUserId
	}
	return 0
}

func (x *ServiceFilter) GetServiceType() string {
	if x != nil {
		return x.ServiceType
	}
	return ""
}

func (x *ServiceFilter) GetExceptOwnerPartyId() string {
	if x != nil {
		return x.ExceptOwnerPartyId
	}
	return ""
}

func (x *ServiceFilter) GetFuzzyText() string {
	if x != nil {
		return x.FuzzyText
	}
	return ""
}

func (x *ServiceFilter) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ServiceFilter) GetIncludeSoftDeleted() bool {
	if x != nil {
		return x.IncludeSoftDeleted
	}
	return false
}

func (x *ServiceFilter) GetWithReviwers() bool {
	if x != nil {
		return x.WithReviwers
	}
	return false
}

type GetServicesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter *ServiceFilter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	Tab    string         `protobuf:"bytes,2,opt,name=tab,proto3" json:"tab,omitempty"`
	// 请求会转发到的中心节点ID
	// 若非空，则覆盖grpc metadata中设置的to-tusita
	ToTusita string `protobuf:"bytes,3,opt,name=to_tusita,json=toTusita,proto3" json:"to_tusita,omitempty"`
}

func (x *GetServicesRequest) Reset() {
	*x = GetServicesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServicesRequest) ProtoMessage() {}

func (x *GetServicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServicesRequest.ProtoReflect.Descriptor instead.
func (*GetServicesRequest) Descriptor() ([]byte, []int) {
	return file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_rawDescGZIP(), []int{15}
}

func (x *GetServicesRequest) GetFilter() *ServiceFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *GetServicesRequest) GetTab() string {
	if x != nil {
		return x.Tab
	}
	return ""
}

func (x *GetServicesRequest) GetToTusita() string {
	if x != nil {
		return x.ToTusita
	}
	return ""
}

type GetServicesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  []*Service `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Total uint64     `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *GetServicesResponse) Reset() {
	*x = GetServicesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServicesResponse) ProtoMessage() {}

func (x *GetServicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServicesResponse.ProtoReflect.Descriptor instead.
func (*GetServicesResponse) Descriptor() ([]byte, []int) {
	return file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_rawDescGZIP(), []int{16}
}

func (x *GetServicesResponse) GetData() []*Service {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetServicesResponse) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId string `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// 请求会转发到的中心节点ID
	// 若非空，则覆盖grpc metadata中设置的to-tusita
	ToTusita string `protobuf:"bytes,2,opt,name=to_tusita,json=toTusita,proto3" json:"to_tusita,omitempty"`
}

func (x *GetServiceRequest) Reset() {
	*x = GetServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServiceRequest) ProtoMessage() {}

func (x *GetServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServiceRequest.ProtoReflect.Descriptor instead.
func (*GetServiceRequest) Descriptor() ([]byte, []int) {
	return file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_rawDescGZIP(), []int{17}
}

func (x *GetServiceRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *GetServiceRequest) GetToTusita() string {
	if x != nil {
		return x.ToTusita
	}
	return ""
}

type GetServiceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *ServiceResp `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetServiceResponse) Reset() {
	*x = GetServiceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServiceResponse) ProtoMessage() {}

func (x *GetServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServiceResponse.ProtoReflect.Descriptor instead.
func (*GetServiceResponse) Descriptor() ([]byte, []int) {
	return file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_rawDescGZIP(), []int{18}
}

func (x *GetServiceResponse) GetData() *ServiceResp {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service *ServiceParam `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	// 请求会转发到的中心节点ID
	// 若非空，则覆盖grpc metadata中设置的to-tusita
	ToTusita string `protobuf:"bytes,2,opt,name=to_tusita,json=toTusita,proto3" json:"to_tusita,omitempty"`
}

func (x *UpdateServiceRequest) Reset() {
	*x = UpdateServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServiceRequest) ProtoMessage() {}

func (x *UpdateServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServiceRequest.ProtoReflect.Descriptor instead.
func (*UpdateServiceRequest) Descriptor() ([]byte, []int) {
	return file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateServiceRequest) GetService() *ServiceParam {
	if x != nil {
		return x.Service
	}
	return nil
}

func (x *UpdateServiceRequest) GetToTusita() string {
	if x != nil {
		return x.ToTusita
	}
	return ""
}

type DeleteServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId uint64 `protobuf:"varint,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// 请求会转发到的中心节点ID
	// 若非空，则覆盖grpc metadata中设置的to-tusita
	ToTusita string `protobuf:"bytes,2,opt,name=to_tusita,json=toTusita,proto3" json:"to_tusita,omitempty"`
}

func (x *DeleteServiceRequest) Reset() {
	*x = DeleteServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteServiceRequest) ProtoMessage() {}

func (x *DeleteServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteServiceRequest.ProtoReflect.Descriptor instead.
func (*DeleteServiceRequest) Descriptor() ([]byte, []int) {
	return file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteServiceRequest) GetServiceId() uint64 {
	if x != nil {
		return x.ServiceId
	}
	return 0
}

func (x *DeleteServiceRequest) GetToTusita() string {
	if x != nil {
		return x.ToTusita
	}
	return ""
}

type ServiceTakeActionParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId uint64               `protobuf:"varint,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	Action    enums.Service_Action `protobuf:"varint,2,opt,name=action,proto3,enum=sudo.protobuf.enums.Service_Action" json:"action,omitempty"`
	Msg       string               `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ServiceTakeActionParam) Reset() {
	*x = ServiceTakeActionParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceTakeActionParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceTakeActionParam) ProtoMessage() {}

func (x *ServiceTakeActionParam) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceTakeActionParam.ProtoReflect.Descriptor instead.
func (*ServiceTakeActionParam) Descriptor() ([]byte, []int) {
	return file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_rawDescGZIP(), []int{21}
}

func (x *ServiceTakeActionParam) GetServiceId() uint64 {
	if x != nil {
		return x.ServiceId
	}
	return 0
}

func (x *ServiceTakeActionParam) GetAction() enums.Service_Action {
	if x != nil {
		return x.Action
	}
	return enums.Service_UNKNOWN_ACTION
}

func (x *ServiceTakeActionParam) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ServiceTakeActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Param        *ServiceTakeActionParam `protobuf:"bytes,1,opt,name=param,proto3" json:"param,omitempty"`
	ServiceIdStr string                  `protobuf:"bytes,2,opt,name=service_id_str,json=serviceIdStr,proto3" json:"service_id_str,omitempty"`
	// 请求会转发到的中心节点ID
	// 若非空，则覆盖grpc metadata中设置的to-tusita
	ToTusita string `protobuf:"bytes,3,opt,name=to_tusita,json=toTusita,proto3" json:"to_tusita,omitempty"`
}

func (x *ServiceTakeActionRequest) Reset() {
	*x = ServiceTakeActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceTakeActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceTakeActionRequest) ProtoMessage() {}

func (x *ServiceTakeActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceTakeActionRequest.ProtoReflect.Descriptor instead.
func (*ServiceTakeActionRequest) Descriptor() ([]byte, []int) {
	return file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_rawDescGZIP(), []int{22}
}

func (x *ServiceTakeActionRequest) GetParam() *ServiceTakeActionParam {
	if x != nil {
		return x.Param
	}
	return nil
}

func (x *ServiceTakeActionRequest) GetServiceIdStr() string {
	if x != nil {
		return x.ServiceIdStr
	}
	return ""
}

func (x *ServiceTakeActionRequest) GetToTusita() string {
	if x != nil {
		return x.ToTusita
	}
	return ""
}

type ServiceTakeActionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *Service `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ServiceTakeActionResponse) Reset() {
	*x = ServiceTakeActionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceTakeActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceTakeActionResponse) ProtoMessage() {}

func (x *ServiceTakeActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceTakeActionResponse.ProtoReflect.Descriptor instead.
func (*ServiceTakeActionResponse) Descriptor() ([]byte, []int) {
	return file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_rawDescGZIP(), []int{23}
}

func (x *ServiceTakeActionResponse) GetData() *Service {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetServiceUsageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pager        *paginator.Paginator `protobuf:"bytes,1,opt,name=pager,proto3" json:"pager,omitempty"`
	ServiceIdStr string               `protobuf:"bytes,2,opt,name=service_id_str,json=serviceIdStr,proto3" json:"service_id_str,omitempty"`
	IsClient     bool                 `protobuf:"varint,3,opt,name=is_client,json=isClient,proto3" json:"is_client,omitempty"`
}

func (x *GetServiceUsageRequest) Reset() {
	*x = GetServiceUsageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServiceUsageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServiceUsageRequest) ProtoMessage() {}

func (x *GetServiceUsageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServiceUsageRequest.ProtoReflect.Descriptor instead.
func (*GetServiceUsageRequest) Descriptor() ([]byte, []int) {
	return file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_rawDescGZIP(), []int{24}
}

func (x *GetServiceUsageRequest) GetPager() *paginator.Paginator {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *GetServiceUsageRequest) GetServiceIdStr() string {
	if x != nil {
		return x.ServiceIdStr
	}
	return ""
}

func (x *GetServiceUsageRequest) GetIsClient() bool {
	if x != nil {
		return x.IsClient
	}
	return false
}

type PredictServiceUsageModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId    uint64 `protobuf:"varint,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	RequestId    string `protobuf:"bytes,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	RequestCount uint64 `protobuf:"varint,3,opt,name=request_count,json=requestCount,proto3" json:"request_count,omitempty"`
	UsageCount   uint64 `protobuf:"varint,4,opt,name=usage_count,json=usageCount,proto3" json:"usage_count,omitempty"`
	ApiRequest   string `protobuf:"bytes,5,opt,name=api_request,json=apiRequest,proto3" json:"api_request,omitempty"`
	ApiResponse  string `protobuf:"bytes,6,opt,name=api_response,json=apiResponse,proto3" json:"api_response,omitempty"`
	IsClient     bool   `protobuf:"varint,7,opt,name=is_client,json=isClient,proto3" json:"is_client,omitempty"`
	Succeeded    bool   `protobuf:"varint,8,opt,name=succeeded,proto3" json:"succeeded,omitempty"`
	Message      string `protobuf:"bytes,9,opt,name=message,proto3" json:"message,omitempty"`
	CreatedTs    int64  `protobuf:"varint,10,opt,name=created_ts,json=createdTs,proto3" json:"created_ts,omitempty"`
}

func (x *PredictServiceUsageModel) Reset() {
	*x = PredictServiceUsageModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PredictServiceUsageModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PredictServiceUsageModel) ProtoMessage() {}

func (x *PredictServiceUsageModel) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PredictServiceUsageModel.ProtoReflect.Descriptor instead.
func (*PredictServiceUsageModel) Descriptor() ([]byte, []int) {
	return file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_rawDescGZIP(), []int{25}
}

func (x *PredictServiceUsageModel) GetServiceId() uint64 {
	if x != nil {
		return x.ServiceId
	}
	return 0
}

func (x *PredictServiceUsageModel) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *PredictServiceUsageModel) GetRequestCount() uint64 {
	if x != nil {
		return x.RequestCount
	}
	return 0
}

func (x *PredictServiceUsageModel) GetUsageCount() uint64 {
	if x != nil {
		return x.UsageCount
	}
	return 0
}

func (x *PredictServiceUsageModel) GetApiRequest() string {
	if x != nil {
		return x.ApiRequest
	}
	return ""
}

func (x *PredictServiceUsageModel) GetApiResponse() string {
	if x != nil {
		return x.ApiResponse
	}
	return ""
}

func (x *PredictServiceUsageModel) GetIsClient() bool {
	if x != nil {
		return x.IsClient
	}
	return false
}

func (x *PredictServiceUsageModel) GetSucceeded() bool {
	if x != nil {
		return x.Succeeded
	}
	return false
}

func (x *PredictServiceUsageModel) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PredictServiceUsageModel) GetCreatedTs() int64 {
	if x != nil {
		return x.CreatedTs
	}
	return 0
}

type GetServiceUsageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  []*PredictServiceUsageModel `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Total int64                       `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *GetServiceUsageResponse) Reset() {
	*x = GetServiceUsageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServiceUsageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServiceUsageResponse) ProtoMessage() {}

func (x *GetServiceUsageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServiceUsageResponse.ProtoReflect.Descriptor instead.
func (*GetServiceUsageResponse) Descriptor() ([]byte, []int) {
	return file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_rawDescGZIP(), []int{26}
}

func (x *GetServiceUsageResponse) GetData() []*PredictServiceUsageModel {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetServiceUsageResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type FeatureValues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []string `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *FeatureValues) Reset() {
	*x = FeatureValues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeatureValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeatureValues) ProtoMessage() {}

func (x *FeatureValues) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeatureValues.ProtoReflect.Descriptor instead.
func (*FeatureValues) Descriptor() ([]byte, []int) {
	return file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_rawDescGZIP(), []int{27}
}

func (x *FeatureValues) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type PredictRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubPath        string           `protobuf:"bytes,1,opt,name=sub_path,json=subPath,proto3" json:"sub_path,omitempty"`
	Ids            []string         `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids,omitempty"`
	FeatureColumns []string         `protobuf:"bytes,3,rep,name=feature_columns,json=featureColumns,proto3" json:"feature_columns,omitempty"`
	Features       []*FeatureValues `protobuf:"bytes,4,rep,name=features,proto3" json:"features,omitempty"`
}

func (x *PredictRequest) Reset() {
	*x = PredictRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PredictRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PredictRequest) ProtoMessage() {}

func (x *PredictRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PredictRequest.ProtoReflect.Descriptor instead.
func (*PredictRequest) Descriptor() ([]byte, []int) {
	return file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_rawDescGZIP(), []int{28}
}

func (x *PredictRequest) GetSubPath() string {
	if x != nil {
		return x.SubPath
	}
	return ""
}

func (x *PredictRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *PredictRequest) GetFeatureColumns() []string {
	if x != nil {
		return x.FeatureColumns
	}
	return nil
}

func (x *PredictRequest) GetFeatures() []*FeatureValues {
	if x != nil {
		return x.Features
	}
	return nil
}

type PredictSingleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response map[string]string `protobuf:"bytes,1,rep,name=response,proto3" json:"response,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *PredictSingleResponse) Reset() {
	*x = PredictSingleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PredictSingleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PredictSingleResponse) ProtoMessage() {}

func (x *PredictSingleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PredictSingleResponse.ProtoReflect.Descriptor instead.
func (*PredictSingleResponse) Descriptor() ([]byte, []int) {
	return file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_rawDescGZIP(), []int{29}
}

func (x *PredictSingleResponse) GetResponse() map[string]string {
	if x != nil {
		return x.Response
	}
	return nil
}

type PredictResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Responses []*PredictSingleResponse `protobuf:"bytes,1,rep,name=responses,proto3" json:"responses,omitempty"`
}

func (x *PredictResponse) Reset() {
	*x = PredictResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PredictResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PredictResponse) ProtoMessage() {}

func (x *PredictResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PredictResponse.ProtoReflect.Descriptor instead.
func (*PredictResponse) Descriptor() ([]byte, []int) {
	return file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_rawDescGZIP(), []int{30}
}

func (x *PredictResponse) GetResponses() []*PredictSingleResponse {
	if x != nil {
		return x.Responses
	}
	return nil
}

var File_sudo_protobuf_mpc_virtual_service_platform_online_service_proto protoreflect.FileDescriptor

var file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_rawDesc = []byte{
	0x0a, 0x3f, 0x73, 0x75, 0x64, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x6d, 0x70, 0x63, 0x5f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x25, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x73, 0x75, 0x64, 0x6f, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x65, 0x6e, 0x75, 0x6d,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f, 0x73, 0x75, 0x64, 0x6f, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61,
	0x70, 0x74, 0x65, 0x72, 0x2f, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x33, 0x73, 0x75, 0x64, 0x6f, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64,
	0x61, 0x70, 0x74, 0x65, 0x72, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x38, 0x73,
	0x75, 0x64, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x6d, 0x70, 0x63,
	0x5f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x34, 0x73, 0x75, 0x64, 0x6f, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x6d, 0x70, 0x63, 0x5f, 0x76, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2f, 0x61, 0x70, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3a, 0x73,
	0x75, 0x64, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x6d, 0x70, 0x63,
	0x5f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xda, 0x04, 0x0a, 0x0c, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x65,
	0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74,
	0x65, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x61, 0x70, 0x6c, 0x49, 0x64, 0x12,
	0x55, 0x0a, 0x11, 0x74, 0x72, 0x69, 0x70, 0x6c, 0x65, 0x74, 0x73, 0x5f, 0x62, 0x69, 0x74, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x73, 0x75, 0x64,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73,
	0x2e, 0x54, 0x72, 0x69, 0x70, 0x6c, 0x65, 0x74, 0x73, 0x42, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x74, 0x72, 0x69, 0x70, 0x6c, 0x65, 0x74, 0x73, 0x42,
	0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xad, 0x01, 0x0a, 0x0b, 0x4f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x76,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6b, 0x65, 0x79, 0x5f, 0x63,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6b, 0x65, 0x79,
	0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x0f, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xf7, 0x05, 0x0a, 0x11, 0x4f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x77, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x6c, 0x6f,
	0x61, 0x64, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x4b, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x2e, 0x50, 0x72, 0x65, 0x6c, 0x6f, 0x61,
	0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x03, 0xd0, 0x3e,
	0x01, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73,
	0x12, 0x7a, 0x0a, 0x0f, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x73, 0x75, 0x64, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x03, 0xd0, 0x3e, 0x01, 0x52, 0x0e, 0x75, 0x70,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x74, 0x0a, 0x0d,
	0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x2e, 0x4f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42,
	0x03, 0xd0, 0x3e, 0x01, 0x52, 0x0c, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x73, 0x1a, 0x77, 0x0a, 0x12, 0x50, 0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x4b, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x73, 0x75, 0x64, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f,
	0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x46, 0x75, 0x72, 0x6e, 0x61, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x6e, 0x0a, 0x13, 0x55,
	0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x41, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65,
	0x72, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x4b, 0x65, 0x79,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x73, 0x0a, 0x11, 0x4f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x48, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x32, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0xf0, 0x01, 0x0a, 0x16, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x3e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x2e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x73, 0x74, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x24, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x73, 0x74,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x53, 0x74, 0x72, 0x12, 0x5c, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x73, 0x75,
	0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x73, 0x22, 0xe3, 0x01, 0x0a, 0x13, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x47, 0x0a, 0x0b, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x50,
	0x61, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x12, 0x5b, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x73, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x22, 0x71, 0x0a, 0x1f, 0x47, 0x65, 0x74,
	0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x46, 0x72, 0x6f, 0x6d, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x73, 0x75, 0x64,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa0, 0x01, 0x0a,
	0x1e, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x46,
	0x72, 0x6f, 0x6d, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x61, 0x6a, 0x6f,
	0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0c, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a,
	0x0d, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x5f, 0x74, 0x75, 0x73, 0x69, 0x74, 0x61, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x54, 0x75, 0x73, 0x69, 0x74, 0x61, 0x22,
	0xa5, 0x01, 0x0a, 0x0f, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x62, 0x65, 0x5f, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x62, 0x65, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x12, 0x23, 0x0a,
	0x0d, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x6d, 0x69, 0x6e, 0x6f, 0x72,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x70, 0x0a, 0x0a, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x62, 0x61,
	0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x61, 0x70, 0x6c, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x42, 0x03,
	0xc8, 0x3e, 0x01, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x22, 0xf2, 0x03, 0x0a, 0x07, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x42, 0x03, 0xc8, 0x3e, 0x01, 0x52, 0x04, 0x62,
	0x61, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x70, 0x69, 0x50, 0x61, 0x74, 0x68, 0x12, 0x5d, 0x0a, 0x0c, 0x6f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3a, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x6f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x53, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x73, 0x75,
	0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4f, 0x0a,
	0x09, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x31, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x09, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x73, 0x22, 0xaa,
	0x04, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x73, 0x75, 0x64,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6d,
	0x61, 0x6a, 0x6f, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0c, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x55, 0x0a, 0x11, 0x74, 0x72, 0x69, 0x70, 0x6c, 0x65, 0x74,
	0x73, 0x5f, 0x62, 0x69, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x29, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x54, 0x72, 0x69, 0x70, 0x6c, 0x65, 0x74, 0x73, 0x42,
	0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x74, 0x72, 0x69,
	0x70, 0x6c, 0x65, 0x74, 0x73, 0x42, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x5d, 0x0a, 0x0c,
	0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x0b,
	0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x87, 0x01, 0x0a, 0x14,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x52, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x42, 0x03, 0xc8, 0x3e, 0x01, 0x52,
	0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x5f, 0x74,
	0x75, 0x73, 0x69, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x54,
	0x75, 0x73, 0x69, 0x74, 0x61, 0x22, 0x5b, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x73,
	0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x8c, 0x01, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x4d, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x42, 0x03, 0xc8, 0x3e, 0x01, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x2e, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x22, 0xa6, 0x03, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x46, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x42,
	0x03, 0xc0, 0x3e, 0x01, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04,
	0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x73, 0x12, 0x24, 0x0a, 0x0e,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x31, 0x0a, 0x15, 0x65, 0x78, 0x63,
	0x65, 0x70, 0x74, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74,
	0x4f, 0x77, 0x6e, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x66, 0x75, 0x7a, 0x7a, 0x79, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x66, 0x75, 0x7a, 0x7a, 0x79, 0x54, 0x65, 0x78, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x73,
	0x6f, 0x66, 0x74, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x12, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x53, 0x6f, 0x66, 0x74, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x72, 0x65,
	0x76, 0x69, 0x77, 0x65, 0x72, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x77, 0x69,
	0x74, 0x68, 0x52, 0x65, 0x76, 0x69, 0x77, 0x65, 0x72, 0x73, 0x22, 0x96, 0x01, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x51, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x34, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x03, 0xc0, 0x3e, 0x01, 0x52, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x74, 0x61, 0x62, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x5f, 0x74, 0x75, 0x73,
	0x69, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x54, 0x75, 0x73,
	0x69, 0x74, 0x61, 0x22, 0x6f, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x22, 0x4f, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x5f, 0x74,
	0x75, 0x73, 0x69, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x54,
	0x75, 0x73, 0x69, 0x74, 0x61, 0x22, 0x5c, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x73, 0x75, 0x64, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x87, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x52, 0x0a, 0x07,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e,
	0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x42, 0x03, 0xc8, 0x3e, 0x01, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x5f, 0x74, 0x75, 0x73, 0x69, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x54, 0x75, 0x73, 0x69, 0x74, 0x61, 0x22, 0x52, 0x0a,
	0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x5f, 0x74, 0x75, 0x73, 0x69, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x54, 0x75, 0x73, 0x69, 0x74,
	0x61, 0x22, 0x86, 0x01, 0x0a, 0x16, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x61, 0x6b,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x73, 0x75,
	0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x65, 0x6e, 0x75, 0x6d,
	0x73, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xb7, 0x01, 0x0a, 0x18, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x61, 0x6b, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x58, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x61, 0x6b, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x42, 0x03, 0xc8, 0x3e, 0x01, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x5f,
	0x73, 0x74, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x53, 0x74, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x5f, 0x74, 0x75,
	0x73, 0x69, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x54, 0x75,
	0x73, 0x69, 0x74, 0x61, 0x22, 0x5f, 0x0a, 0x19, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54,
	0x61, 0x6b, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x42, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa3, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x46, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x42, 0x03, 0xc0, 0x3e,
	0x01, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x53, 0x74, 0x72, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x69, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22, 0xd6, 0x02, 0x0a, 0x18,
	0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x75,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x75, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x61, 0x70, 0x69, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x61, 0x70, 0x69, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x73, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x54, 0x73, 0x22, 0x84, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x53, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f,
	0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x2c, 0x0a, 0x0d, 0x46,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x3a, 0x03, 0xc0, 0x3e, 0x01, 0x22, 0xb8, 0x01, 0x0a, 0x0e, 0x50, 0x72,
	0x65, 0x64, 0x69, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x75, 0x62, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x75, 0x62, 0x50, 0x61, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x73, 0x12, 0x50, 0x0a, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x08, 0x66, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x73, 0x22, 0xc1, 0x01, 0x0a, 0x15, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x4a, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x3b, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x3a, 0x03, 0xc0, 0x3e, 0x01, 0x22, 0x72, 0x0a, 0x0f, 0x50, 0x72, 0x65, 0x64,
	0x69, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x09, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c,
	0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x53, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x09, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x3a, 0x03, 0xc0, 0x3e, 0x01, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_rawDescOnce sync.Once
	file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_rawDescData = file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_rawDesc
)

func file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_rawDescGZIP() []byte {
	file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_rawDescOnce.Do(func() {
		file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_rawDescData)
	})
	return file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_rawDescData
}

var file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_goTypes = []interface{}{
	(*ServiceModel)(nil),                    // 0: sudo.protobuf.platform.online_service.ServiceModel
	(*OnlineInput)(nil),                     // 1: sudo.protobuf.platform.online_service.OnlineInput
	(*OnlineParticipant)(nil),               // 2: sudo.protobuf.platform.online_service.OnlineParticipant
	(*OnlineOperatorTemplate)(nil),          // 3: sudo.protobuf.platform.online_service.OnlineOperatorTemplate
	(*OnlineBlockTemplate)(nil),             // 4: sudo.protobuf.platform.online_service.OnlineBlockTemplate
	(*GetOnlineBlockFromModelResponse)(nil), // 5: sudo.protobuf.platform.online_service.GetOnlineBlockFromModelResponse
	(*GetOnlineBlockFromModelRequest)(nil),  // 6: sudo.protobuf.platform.online_service.GetOnlineBlockFromModelRequest
	(*PredictTaskInfo)(nil),                 // 7: sudo.protobuf.platform.online_service.PredictTaskInfo
	(*ReviewInfo)(nil),                      // 8: sudo.protobuf.platform.online_service.ReviewInfo
	(*Service)(nil),                         // 9: sudo.protobuf.platform.online_service.Service
	(*ServiceParam)(nil),                    // 10: sudo.protobuf.platform.online_service.ServiceParam
	(*CreateServiceRequest)(nil),            // 11: sudo.protobuf.platform.online_service.CreateServiceRequest
	(*CreateServiceResponse)(nil),           // 12: sudo.protobuf.platform.online_service.CreateServiceResponse
	(*ServiceResp)(nil),                     // 13: sudo.protobuf.platform.online_service.ServiceResp
	(*ServiceFilter)(nil),                   // 14: sudo.protobuf.platform.online_service.ServiceFilter
	(*GetServicesRequest)(nil),              // 15: sudo.protobuf.platform.online_service.GetServicesRequest
	(*GetServicesResponse)(nil),             // 16: sudo.protobuf.platform.online_service.GetServicesResponse
	(*GetServiceRequest)(nil),               // 17: sudo.protobuf.platform.online_service.GetServiceRequest
	(*GetServiceResponse)(nil),              // 18: sudo.protobuf.platform.online_service.GetServiceResponse
	(*UpdateServiceRequest)(nil),            // 19: sudo.protobuf.platform.online_service.UpdateServiceRequest
	(*DeleteServiceRequest)(nil),            // 20: sudo.protobuf.platform.online_service.DeleteServiceRequest
	(*ServiceTakeActionParam)(nil),          // 21: sudo.protobuf.platform.online_service.ServiceTakeActionParam
	(*ServiceTakeActionRequest)(nil),        // 22: sudo.protobuf.platform.online_service.ServiceTakeActionRequest
	(*ServiceTakeActionResponse)(nil),       // 23: sudo.protobuf.platform.online_service.ServiceTakeActionResponse
	(*GetServiceUsageRequest)(nil),          // 24: sudo.protobuf.platform.online_service.GetServiceUsageRequest
	(*PredictServiceUsageModel)(nil),        // 25: sudo.protobuf.platform.online_service.PredictServiceUsageModel
	(*GetServiceUsageResponse)(nil),         // 26: sudo.protobuf.platform.online_service.GetServiceUsageResponse
	(*FeatureValues)(nil),                   // 27: sudo.protobuf.platform.online_service.FeatureValues
	(*PredictRequest)(nil),                  // 28: sudo.protobuf.platform.online_service.PredictRequest
	(*PredictSingleResponse)(nil),           // 29: sudo.protobuf.platform.online_service.PredictSingleResponse
	(*PredictResponse)(nil),                 // 30: sudo.protobuf.platform.online_service.PredictResponse
	nil,                                     // 31: sudo.protobuf.platform.online_service.OnlineParticipant.PreloadInputsEntry
	nil,                                     // 32: sudo.protobuf.platform.online_service.OnlineParticipant.UpstreamInputsEntry
	nil,                                     // 33: sudo.protobuf.platform.online_service.OnlineParticipant.OnlineInputsEntry
	nil,                                     // 34: sudo.protobuf.platform.online_service.PredictSingleResponse.ResponseEntry
	(enums.TripletsBitInfo_Type)(0),         // 35: sudo.protobuf.enums.TripletsBitInfo.Type
	(enums.Stage_Type)(0),                   // 36: sudo.protobuf.enums.Stage.Type
	(*protobuf.PartyInfo)(nil),              // 37: sudo.protobuf.infra_adapter.PartyInfo
	(*apl.Reviewer)(nil),                    // 38: sudo.protobuf.platform.apl.Reviewer
	(enums.Service_Type)(0),                 // 39: sudo.protobuf.enums.Service.Type
	(*structpb.Value)(nil),                  // 40: google.protobuf.Value
	(*paginator.Paginator)(nil),             // 41: sudo.protobuf.platform.paginator.Paginator
	(enums.Service_Action)(0),               // 42: sudo.protobuf.enums.Service.Action
	(*infra_adapter.FurnaceProperty)(nil),   // 43: sudo.protobuf.infra_adapter.location.FurnaceProperty
	(*protobuf.OnlineParamKey)(nil),         // 44: sudo.protobuf.infra_adapter.OnlineParamKey
}
var file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_depIdxs = []int32{
	35, // 0: sudo.protobuf.platform.online_service.ServiceModel.triplets_bit_info:type_name -> sudo.protobuf.enums.TripletsBitInfo.Type
	31, // 1: sudo.protobuf.platform.online_service.OnlineParticipant.preload_inputs:type_name -> sudo.protobuf.platform.online_service.OnlineParticipant.PreloadInputsEntry
	32, // 2: sudo.protobuf.platform.online_service.OnlineParticipant.upstream_inputs:type_name -> sudo.protobuf.platform.online_service.OnlineParticipant.UpstreamInputsEntry
	33, // 3: sudo.protobuf.platform.online_service.OnlineParticipant.online_inputs:type_name -> sudo.protobuf.platform.online_service.OnlineParticipant.OnlineInputsEntry
	36, // 4: sudo.protobuf.platform.online_service.OnlineOperatorTemplate.stage_type:type_name -> sudo.protobuf.enums.Stage.Type
	2,  // 5: sudo.protobuf.platform.online_service.OnlineOperatorTemplate.participants:type_name -> sudo.protobuf.platform.online_service.OnlineParticipant
	37, // 6: sudo.protobuf.platform.online_service.OnlineBlockTemplate.party_infos:type_name -> sudo.protobuf.infra_adapter.PartyInfo
	3,  // 7: sudo.protobuf.platform.online_service.OnlineBlockTemplate.operators:type_name -> sudo.protobuf.platform.online_service.OnlineOperatorTemplate
	4,  // 8: sudo.protobuf.platform.online_service.GetOnlineBlockFromModelResponse.data:type_name -> sudo.protobuf.platform.online_service.OnlineBlockTemplate
	38, // 9: sudo.protobuf.platform.online_service.ReviewInfo.base:type_name -> sudo.protobuf.platform.apl.Reviewer
	0,  // 10: sudo.protobuf.platform.online_service.Service.base:type_name -> sudo.protobuf.platform.online_service.ServiceModel
	4,  // 11: sudo.protobuf.platform.online_service.Service.online_block:type_name -> sudo.protobuf.platform.online_service.OnlineBlockTemplate
	7,  // 12: sudo.protobuf.platform.online_service.Service.task_info:type_name -> sudo.protobuf.platform.online_service.PredictTaskInfo
	8,  // 13: sudo.protobuf.platform.online_service.Service.reviewers:type_name -> sudo.protobuf.platform.online_service.ReviewInfo
	39, // 14: sudo.protobuf.platform.online_service.ServiceParam.service_type:type_name -> sudo.protobuf.enums.Service.Type
	35, // 15: sudo.protobuf.platform.online_service.ServiceParam.triplets_bit_info:type_name -> sudo.protobuf.enums.TripletsBitInfo.Type
	4,  // 16: sudo.protobuf.platform.online_service.ServiceParam.online_block:type_name -> sudo.protobuf.platform.online_service.OnlineBlockTemplate
	10, // 17: sudo.protobuf.platform.online_service.CreateServiceRequest.service:type_name -> sudo.protobuf.platform.online_service.ServiceParam
	9,  // 18: sudo.protobuf.platform.online_service.CreateServiceResponse.data:type_name -> sudo.protobuf.platform.online_service.Service
	9,  // 19: sudo.protobuf.platform.online_service.ServiceResp.service:type_name -> sudo.protobuf.platform.online_service.Service
	40, // 20: sudo.protobuf.platform.online_service.ServiceResp.config:type_name -> google.protobuf.Value
	41, // 21: sudo.protobuf.platform.online_service.ServiceFilter.pager:type_name -> sudo.protobuf.platform.paginator.Paginator
	14, // 22: sudo.protobuf.platform.online_service.GetServicesRequest.filter:type_name -> sudo.protobuf.platform.online_service.ServiceFilter
	9,  // 23: sudo.protobuf.platform.online_service.GetServicesResponse.data:type_name -> sudo.protobuf.platform.online_service.Service
	13, // 24: sudo.protobuf.platform.online_service.GetServiceResponse.data:type_name -> sudo.protobuf.platform.online_service.ServiceResp
	10, // 25: sudo.protobuf.platform.online_service.UpdateServiceRequest.service:type_name -> sudo.protobuf.platform.online_service.ServiceParam
	42, // 26: sudo.protobuf.platform.online_service.ServiceTakeActionParam.action:type_name -> sudo.protobuf.enums.Service.Action
	21, // 27: sudo.protobuf.platform.online_service.ServiceTakeActionRequest.param:type_name -> sudo.protobuf.platform.online_service.ServiceTakeActionParam
	9,  // 28: sudo.protobuf.platform.online_service.ServiceTakeActionResponse.data:type_name -> sudo.protobuf.platform.online_service.Service
	41, // 29: sudo.protobuf.platform.online_service.GetServiceUsageRequest.pager:type_name -> sudo.protobuf.platform.paginator.Paginator
	25, // 30: sudo.protobuf.platform.online_service.GetServiceUsageResponse.data:type_name -> sudo.protobuf.platform.online_service.PredictServiceUsageModel
	27, // 31: sudo.protobuf.platform.online_service.PredictRequest.features:type_name -> sudo.protobuf.platform.online_service.FeatureValues
	34, // 32: sudo.protobuf.platform.online_service.PredictSingleResponse.response:type_name -> sudo.protobuf.platform.online_service.PredictSingleResponse.ResponseEntry
	29, // 33: sudo.protobuf.platform.online_service.PredictResponse.responses:type_name -> sudo.protobuf.platform.online_service.PredictSingleResponse
	43, // 34: sudo.protobuf.platform.online_service.OnlineParticipant.PreloadInputsEntry.value:type_name -> sudo.protobuf.infra_adapter.location.FurnaceProperty
	44, // 35: sudo.protobuf.platform.online_service.OnlineParticipant.UpstreamInputsEntry.value:type_name -> sudo.protobuf.infra_adapter.OnlineParamKey
	1,  // 36: sudo.protobuf.platform.online_service.OnlineParticipant.OnlineInputsEntry.value:type_name -> sudo.protobuf.platform.online_service.OnlineInput
	37, // [37:37] is the sub-list for method output_type
	37, // [37:37] is the sub-list for method input_type
	37, // [37:37] is the sub-list for extension type_name
	37, // [37:37] is the sub-list for extension extendee
	0,  // [0:37] is the sub-list for field type_name
}

func init() { file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_init() }
func file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_init() {
	if File_sudo_protobuf_mpc_virtual_service_platform_online_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnlineInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnlineParticipant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnlineOperatorTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnlineBlockTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOnlineBlockFromModelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOnlineBlockFromModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PredictTaskInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReviewInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateServiceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServicesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServicesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServiceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceTakeActionParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceTakeActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceTakeActionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServiceUsageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PredictServiceUsageModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServiceUsageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeatureValues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PredictRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PredictSingleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PredictResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_goTypes,
		DependencyIndexes: file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_depIdxs,
		MessageInfos:      file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_msgTypes,
	}.Build()
	File_sudo_protobuf_mpc_virtual_service_platform_online_service_proto = out.File
	file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_rawDesc = nil
	file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_goTypes = nil
	file_sudo_protobuf_mpc_virtual_service_platform_online_service_proto_depIdxs = nil
}
