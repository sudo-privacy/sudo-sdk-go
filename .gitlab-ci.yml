variables:
  BUILD_IMAGE: 10.0.1.22:80/dev/paas_go/build:v1.0.2
  DEPLOY_IMAGE: 10.0.1.22:80/dev/paas_go/deploy:v1.0.1
  GIT_SUBMODULE_STRATEGY: recursive

default:
  image: '10.0.1.22:80/dev/paas_go/base:v1.1.3'
  before_script:
    - go version
    - go env
    - git log -1
    - touch ./sudo-apis/go.mod
    - sh scripts/sync_protobuf.sh

workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH =~ /^master.*/ || $CI_COMMIT_BRANCH =~ /^release.*/ || $CI_COMMIT_BRANCH =~ /^pre-release.*/'

stages:
  - lint
  - test
  - build
  - deploy_devops_cluster

# 定义了cache的相关配置
.go_lint_cache:
  variables:
    GOCACHE: ${CI_PROJECT_DIR}/cache/go
    GOLANGCI_LINT_CACHE: ${CI_PROJECT_DIR}/cache/go
    KUBERNETES_CPU_REQUEST: 1
    KUBERNETES_MEMORY_REQUEST: 2Gi
  cache:
    key: sudo_sdk_go_linter_cache
    paths:
      - cache/go

lint:
  stage: lint
  tags:
    - k8s
  needs: [ ]
  rules:
    - changes:
        - "**/*.go"
      allow_failure: false
    - when: manual
      allow_failure: true
  extends: .go_lint_cache
  script:
    - cd v2
    - ../scripts/run_lint.sh
    - ../scripts/check_go_mod_tidiness.sh

lint:check_protobuf:
  stage: lint
  tags:
    - k8s
  needs: [ ]
  only:
    - merge_requests
  allow_failure: false
  script:
    - cd v2
    - ../scripts/check_protobuf.sh

test:
  stage: test
  tags:
    - k8s
  needs: [ ]
  rules:
    - changes:
        - "**/*.go"
      allow_failure: false
    - when: manual
      allow_failure: true
  script:
    - cd v2
    - ../scripts/run_coverage.sh
  artifacts:
    paths:
      - ./coverage.html

build:
  stage: build
  image: ${BUILD_IMAGE}
  tags:
    - k8s
  needs: [ ]
  before_script:
    - git log -1
    - touch ./sudo-apis/go.mod
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^master.*/ || $CI_COMMIT_BRANCH =~ /^release.*/ || $CI_COMMIT_BRANCH =~ /^pre-release.*/'
      when: always
      allow_failure: false
    - when: manual
      allow_failure: true
  script:
    - cd v2
    - ../scripts/cicd_scripts/ci_build_helper.sh -c sudosdk_godoc -f "godoc.dockerfile"

godoc_deploy_devops:
  stage: deploy_devops_cluster
  image: ${DEPLOY_IMAGE}
  inherit:
    default: false
  tags:
    - k8s
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^master.*/ || $CI_COMMIT_BRANCH =~ /^release.*/ || $CI_COMMIT_BRANCH =~ /^pre-release.*/'
      when: always
      allow_failure: false
    - when: manual
      allow_failure: true
  allow_failure: true
  needs: [ "build" ]
  script:
    - cd v2
    - ../scripts/cicd_scripts/change_image_tag.sh -n sudosdk_godoc -f "./sudosdk-godoc/values.yaml" -a