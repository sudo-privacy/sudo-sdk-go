// Copyright 2022 Sudo Technology Co., Ltd.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.18.1
// source: sudo/protobuf/mpc_virtual_service/platform/options.proto

package options

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PermTag int32

const (
	PermTag_PROJECT_ACCESS                          PermTag = 0
	PermTag_PROJECT_CREATE_PROJECT                  PermTag = 1
	PermTag_DATA_DATA_SOURCE_ACCESS                 PermTag = 2
	PermTag_DATA_DATA_SOURCE_UPDATE                 PermTag = 3
	PermTag_DATA_DATA_LIST_ACCESS                   PermTag = 4
	PermTag_DATA_DATA_LIST_CREATE_VTABLE            PermTag = 5
	PermTag_DATA_DATA_LIST_DELETE_SELF_PARTY_VTABLE PermTag = 6
	PermTag_SERVICE_SERVICE_LIST_ACCESS             PermTag = 7
	PermTag_SERVICE_SERVICE_LIST_APPLY_SERVICE      PermTag = 8
	PermTag_SERVICE_SERVICE_LIST_APPROVAL_SERVICE   PermTag = 9
	PermTag_MANAGEMENT_PARTY_ACCESS                 PermTag = 10
	PermTag_MANAGEMENT_PARTY_UPDATE                 PermTag = 11
	PermTag_MANAGEMENT_OPERATOR_ACCESS              PermTag = 12
	PermTag_MANAGEMENT_OPERATOR_UPDATE              PermTag = 13
	PermTag_MANAGEMENT_DEPARTMENT_ACCESS            PermTag = 14
	PermTag_MANAGEMENT_DEPARTMENT_UPDATE            PermTag = 15
	PermTag_MANAGEMENT_ROLE_ACCESS                  PermTag = 16
	PermTag_MANAGEMENT_ROLE_UPDATE                  PermTag = 17
	PermTag_CONSOLE_DASHBOARD_ACCESS                PermTag = 18
	PermTag_CONSOLE_MONITORING_ACCESS               PermTag = 19
	PermTag_CONSOLE_MONITORING_MANAGE_RULES         PermTag = 20
	PermTag_CONSOLE_LOG_ACCESS                      PermTag = 21
	PermTag_GUIDE_HELP_DOC_ACCESS                   PermTag = 22
	PermTag_GUIDE_TEMPLATE_ACCESS                   PermTag = 23
	PermTag_GUIDE_TEMPLATE_USE_TEMPLATE             PermTag = 24
)

// Enum value maps for PermTag.
var (
	PermTag_name = map[int32]string{
		0:  "PROJECT_ACCESS",
		1:  "PROJECT_CREATE_PROJECT",
		2:  "DATA_DATA_SOURCE_ACCESS",
		3:  "DATA_DATA_SOURCE_UPDATE",
		4:  "DATA_DATA_LIST_ACCESS",
		5:  "DATA_DATA_LIST_CREATE_VTABLE",
		6:  "DATA_DATA_LIST_DELETE_SELF_PARTY_VTABLE",
		7:  "SERVICE_SERVICE_LIST_ACCESS",
		8:  "SERVICE_SERVICE_LIST_APPLY_SERVICE",
		9:  "SERVICE_SERVICE_LIST_APPROVAL_SERVICE",
		10: "MANAGEMENT_PARTY_ACCESS",
		11: "MANAGEMENT_PARTY_UPDATE",
		12: "MANAGEMENT_OPERATOR_ACCESS",
		13: "MANAGEMENT_OPERATOR_UPDATE",
		14: "MANAGEMENT_DEPARTMENT_ACCESS",
		15: "MANAGEMENT_DEPARTMENT_UPDATE",
		16: "MANAGEMENT_ROLE_ACCESS",
		17: "MANAGEMENT_ROLE_UPDATE",
		18: "CONSOLE_DASHBOARD_ACCESS",
		19: "CONSOLE_MONITORING_ACCESS",
		20: "CONSOLE_MONITORING_MANAGE_RULES",
		21: "CONSOLE_LOG_ACCESS",
		22: "GUIDE_HELP_DOC_ACCESS",
		23: "GUIDE_TEMPLATE_ACCESS",
		24: "GUIDE_TEMPLATE_USE_TEMPLATE",
	}
	PermTag_value = map[string]int32{
		"PROJECT_ACCESS":                          0,
		"PROJECT_CREATE_PROJECT":                  1,
		"DATA_DATA_SOURCE_ACCESS":                 2,
		"DATA_DATA_SOURCE_UPDATE":                 3,
		"DATA_DATA_LIST_ACCESS":                   4,
		"DATA_DATA_LIST_CREATE_VTABLE":            5,
		"DATA_DATA_LIST_DELETE_SELF_PARTY_VTABLE": 6,
		"SERVICE_SERVICE_LIST_ACCESS":             7,
		"SERVICE_SERVICE_LIST_APPLY_SERVICE":      8,
		"SERVICE_SERVICE_LIST_APPROVAL_SERVICE":   9,
		"MANAGEMENT_PARTY_ACCESS":                 10,
		"MANAGEMENT_PARTY_UPDATE":                 11,
		"MANAGEMENT_OPERATOR_ACCESS":              12,
		"MANAGEMENT_OPERATOR_UPDATE":              13,
		"MANAGEMENT_DEPARTMENT_ACCESS":            14,
		"MANAGEMENT_DEPARTMENT_UPDATE":            15,
		"MANAGEMENT_ROLE_ACCESS":                  16,
		"MANAGEMENT_ROLE_UPDATE":                  17,
		"CONSOLE_DASHBOARD_ACCESS":                18,
		"CONSOLE_MONITORING_ACCESS":               19,
		"CONSOLE_MONITORING_MANAGE_RULES":         20,
		"CONSOLE_LOG_ACCESS":                      21,
		"GUIDE_HELP_DOC_ACCESS":                   22,
		"GUIDE_TEMPLATE_ACCESS":                   23,
		"GUIDE_TEMPLATE_USE_TEMPLATE":             24,
	}
)

func (x PermTag) Enum() *PermTag {
	p := new(PermTag)
	*p = x
	return p
}

func (x PermTag) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PermTag) Descriptor() protoreflect.EnumDescriptor {
	return file_sudo_protobuf_mpc_virtual_service_platform_options_proto_enumTypes[0].Descriptor()
}

func (PermTag) Type() protoreflect.EnumType {
	return &file_sudo_protobuf_mpc_virtual_service_platform_options_proto_enumTypes[0]
}

func (x PermTag) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PermTag.Descriptor instead.
func (PermTag) EnumDescriptor() ([]byte, []int) {
	return file_sudo_protobuf_mpc_virtual_service_platform_options_proto_rawDescGZIP(), []int{0}
}

type PermOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PermTags []PermTag `protobuf:"varint,1,rep,packed,name=perm_tags,json=permTags,proto3,enum=sudo.protobuf.platform.options.PermTag" json:"perm_tags,omitempty"`
}

func (x *PermOption) Reset() {
	*x = PermOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sudo_protobuf_mpc_virtual_service_platform_options_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermOption) ProtoMessage() {}

func (x *PermOption) ProtoReflect() protoreflect.Message {
	mi := &file_sudo_protobuf_mpc_virtual_service_platform_options_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermOption.ProtoReflect.Descriptor instead.
func (*PermOption) Descriptor() ([]byte, []int) {
	return file_sudo_protobuf_mpc_virtual_service_platform_options_proto_rawDescGZIP(), []int{0}
}

func (x *PermOption) GetPermTags() []PermTag {
	if x != nil {
		return x.PermTags
	}
	return nil
}

var file_sudo_protobuf_mpc_virtual_service_platform_options_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.MethodOptions)(nil),
		ExtensionType: (*PermOption)(nil),
		Field:         1000,
		Name:          "sudo.protobuf.platform.options.perm_option",
		Tag:           "bytes,1000,opt,name=perm_option",
		Filename:      "sudo/protobuf/mpc_virtual_service/platform/options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         1000,
		Name:          "sudo.protobuf.platform.options.flatten_query_param",
		Tag:           "varint,1000,opt,name=flatten_query_param",
		Filename:      "sudo/protobuf/mpc_virtual_service/platform/options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         1001,
		Name:          "sudo.protobuf.platform.options.json_squash",
		Tag:           "varint,1001,opt,name=json_squash",
		Filename:      "sudo/protobuf/mpc_virtual_service/platform/options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         1002,
		Name:          "sudo.protobuf.platform.options.keep_empty",
		Tag:           "varint,1002,opt,name=keep_empty",
		Filename:      "sudo/protobuf/mpc_virtual_service/platform/options.proto",
	},
}

// Extension fields to descriptorpb.MethodOptions.
var (
	// optional sudo.protobuf.platform.options.PermOption perm_option = 1000;
	E_PermOption = &file_sudo_protobuf_mpc_virtual_service_platform_options_proto_extTypes[0]
)

// Extension fields to descriptorpb.FieldOptions.
var (
	// optional bool flatten_query_param = 1000;
	E_FlattenQueryParam = &file_sudo_protobuf_mpc_virtual_service_platform_options_proto_extTypes[1]
	// optional bool json_squash = 1001;
	E_JsonSquash = &file_sudo_protobuf_mpc_virtual_service_platform_options_proto_extTypes[2]
	// optional bool keep_empty = 1002;
	E_KeepEmpty = &file_sudo_protobuf_mpc_virtual_service_platform_options_proto_extTypes[3]
)

var File_sudo_protobuf_mpc_virtual_service_platform_options_proto protoreflect.FileDescriptor

var file_sudo_protobuf_mpc_virtual_service_platform_options_proto_rawDesc = []byte{
	0x0a, 0x38, 0x73, 0x75, 0x64, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x6d, 0x70, 0x63, 0x5f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x73, 0x75, 0x64, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x52, 0x0a, 0x0a,
	0x50, 0x65, 0x72, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x09, 0x70, 0x65,
	0x72, 0x6d, 0x5f, 0x74, 0x61, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x27, 0x2e,
	0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50,
	0x65, 0x72, 0x6d, 0x54, 0x61, 0x67, 0x52, 0x08, 0x70, 0x65, 0x72, 0x6d, 0x54, 0x61, 0x67, 0x73,
	0x2a, 0x98, 0x06, 0x0a, 0x07, 0x50, 0x65, 0x72, 0x6d, 0x54, 0x61, 0x67, 0x12, 0x12, 0x0a, 0x0e,
	0x50, 0x52, 0x4f, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x00,
	0x12, 0x1a, 0x0a, 0x16, 0x50, 0x52, 0x4f, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x43, 0x52, 0x45, 0x41,
	0x54, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x4a, 0x45, 0x43, 0x54, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17,
	0x44, 0x41, 0x54, 0x41, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45,
	0x5f, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x44, 0x41, 0x54,
	0x41, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x55, 0x50,
	0x44, 0x41, 0x54, 0x45, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x44,
	0x41, 0x54, 0x41, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10,
	0x04, 0x12, 0x20, 0x0a, 0x1c, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4c,
	0x49, 0x53, 0x54, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x56, 0x54, 0x41, 0x42, 0x4c,
	0x45, 0x10, 0x05, 0x12, 0x2b, 0x0a, 0x27, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x53, 0x45, 0x4c,
	0x46, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x59, 0x5f, 0x56, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x06,
	0x12, 0x1f, 0x0a, 0x1b, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x53, 0x45, 0x52, 0x56,
	0x49, 0x43, 0x45, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10,
	0x07, 0x12, 0x26, 0x0a, 0x22, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x53, 0x45, 0x52,
	0x56, 0x49, 0x43, 0x45, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x41, 0x50, 0x50, 0x4c, 0x59, 0x5f,
	0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x10, 0x08, 0x12, 0x29, 0x0a, 0x25, 0x53, 0x45, 0x52,
	0x56, 0x49, 0x43, 0x45, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x4c, 0x49, 0x53,
	0x54, 0x5f, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x56, 0x41, 0x4c, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49,
	0x43, 0x45, 0x10, 0x09, 0x12, 0x1b, 0x0a, 0x17, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x4d, 0x45,
	0x4e, 0x54, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x59, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10,
	0x0a, 0x12, 0x1b, 0x0a, 0x17, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f,
	0x50, 0x41, 0x52, 0x54, 0x59, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x0b, 0x12, 0x1e,
	0x0a, 0x1a, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4f, 0x50, 0x45,
	0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x0c, 0x12, 0x1e,
	0x0a, 0x1a, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4f, 0x50, 0x45,
	0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x0d, 0x12, 0x20,
	0x0a, 0x1c, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x45, 0x50,
	0x41, 0x52, 0x54, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x0e,
	0x12, 0x20, 0x0a, 0x1c, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x44,
	0x45, 0x50, 0x41, 0x52, 0x54, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45,
	0x10, 0x0f, 0x12, 0x1a, 0x0a, 0x16, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x4d, 0x45, 0x4e, 0x54,
	0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x10, 0x12, 0x1a,
	0x0a, 0x16, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x52, 0x4f, 0x4c,
	0x45, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x11, 0x12, 0x1c, 0x0a, 0x18, 0x43, 0x4f,
	0x4e, 0x53, 0x4f, 0x4c, 0x45, 0x5f, 0x44, 0x41, 0x53, 0x48, 0x42, 0x4f, 0x41, 0x52, 0x44, 0x5f,
	0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x12, 0x12, 0x1d, 0x0a, 0x19, 0x43, 0x4f, 0x4e, 0x53,
	0x4f, 0x4c, 0x45, 0x5f, 0x4d, 0x4f, 0x4e, 0x49, 0x54, 0x4f, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x41,
	0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x13, 0x12, 0x23, 0x0a, 0x1f, 0x43, 0x4f, 0x4e, 0x53, 0x4f,
	0x4c, 0x45, 0x5f, 0x4d, 0x4f, 0x4e, 0x49, 0x54, 0x4f, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x4d, 0x41,
	0x4e, 0x41, 0x47, 0x45, 0x5f, 0x52, 0x55, 0x4c, 0x45, 0x53, 0x10, 0x14, 0x12, 0x16, 0x0a, 0x12,
	0x43, 0x4f, 0x4e, 0x53, 0x4f, 0x4c, 0x45, 0x5f, 0x4c, 0x4f, 0x47, 0x5f, 0x41, 0x43, 0x43, 0x45,
	0x53, 0x53, 0x10, 0x15, 0x12, 0x19, 0x0a, 0x15, 0x47, 0x55, 0x49, 0x44, 0x45, 0x5f, 0x48, 0x45,
	0x4c, 0x50, 0x5f, 0x44, 0x4f, 0x43, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x16, 0x12,
	0x19, 0x0a, 0x15, 0x47, 0x55, 0x49, 0x44, 0x45, 0x5f, 0x54, 0x45, 0x4d, 0x50, 0x4c, 0x41, 0x54,
	0x45, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x17, 0x12, 0x1f, 0x0a, 0x1b, 0x47, 0x55,
	0x49, 0x44, 0x45, 0x5f, 0x54, 0x45, 0x4d, 0x50, 0x4c, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x53, 0x45,
	0x5f, 0x54, 0x45, 0x4d, 0x50, 0x4c, 0x41, 0x54, 0x45, 0x10, 0x18, 0x3a, 0x6c, 0x0a, 0x0b, 0x70,
	0x65, 0x72, 0x6d, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x75, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70,
	0x65, 0x72, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x4e, 0x0a, 0x13, 0x66, 0x6c, 0x61,
	0x74, 0x74, 0x65, 0x6e, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0xe8, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x66, 0x6c, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x3a, 0x3f, 0x0a, 0x0b, 0x6a, 0x73, 0x6f,
	0x6e, 0x5f, 0x73, 0x71, 0x75, 0x61, 0x73, 0x68, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xe9, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x6a, 0x73, 0x6f, 0x6e, 0x53, 0x71, 0x75, 0x61, 0x73, 0x68, 0x3a, 0x3d, 0x0a, 0x0a, 0x6b, 0x65,
	0x65, 0x70, 0x5f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xea, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x6b, 0x65, 0x65, 0x70, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_sudo_protobuf_mpc_virtual_service_platform_options_proto_rawDescOnce sync.Once
	file_sudo_protobuf_mpc_virtual_service_platform_options_proto_rawDescData = file_sudo_protobuf_mpc_virtual_service_platform_options_proto_rawDesc
)

func file_sudo_protobuf_mpc_virtual_service_platform_options_proto_rawDescGZIP() []byte {
	file_sudo_protobuf_mpc_virtual_service_platform_options_proto_rawDescOnce.Do(func() {
		file_sudo_protobuf_mpc_virtual_service_platform_options_proto_rawDescData = protoimpl.X.CompressGZIP(file_sudo_protobuf_mpc_virtual_service_platform_options_proto_rawDescData)
	})
	return file_sudo_protobuf_mpc_virtual_service_platform_options_proto_rawDescData
}

var file_sudo_protobuf_mpc_virtual_service_platform_options_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_sudo_protobuf_mpc_virtual_service_platform_options_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_sudo_protobuf_mpc_virtual_service_platform_options_proto_goTypes = []interface{}{
	(PermTag)(0),                       // 0: sudo.protobuf.platform.options.PermTag
	(*PermOption)(nil),                 // 1: sudo.protobuf.platform.options.PermOption
	(*descriptorpb.MethodOptions)(nil), // 2: google.protobuf.MethodOptions
	(*descriptorpb.FieldOptions)(nil),  // 3: google.protobuf.FieldOptions
}
var file_sudo_protobuf_mpc_virtual_service_platform_options_proto_depIdxs = []int32{
	0, // 0: sudo.protobuf.platform.options.PermOption.perm_tags:type_name -> sudo.protobuf.platform.options.PermTag
	2, // 1: sudo.protobuf.platform.options.perm_option:extendee -> google.protobuf.MethodOptions
	3, // 2: sudo.protobuf.platform.options.flatten_query_param:extendee -> google.protobuf.FieldOptions
	3, // 3: sudo.protobuf.platform.options.json_squash:extendee -> google.protobuf.FieldOptions
	3, // 4: sudo.protobuf.platform.options.keep_empty:extendee -> google.protobuf.FieldOptions
	1, // 5: sudo.protobuf.platform.options.perm_option:type_name -> sudo.protobuf.platform.options.PermOption
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	5, // [5:6] is the sub-list for extension type_name
	1, // [1:5] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_sudo_protobuf_mpc_virtual_service_platform_options_proto_init() }
func file_sudo_protobuf_mpc_virtual_service_platform_options_proto_init() {
	if File_sudo_protobuf_mpc_virtual_service_platform_options_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sudo_protobuf_mpc_virtual_service_platform_options_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sudo_protobuf_mpc_virtual_service_platform_options_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 4,
			NumServices:   0,
		},
		GoTypes:           file_sudo_protobuf_mpc_virtual_service_platform_options_proto_goTypes,
		DependencyIndexes: file_sudo_protobuf_mpc_virtual_service_platform_options_proto_depIdxs,
		EnumInfos:         file_sudo_protobuf_mpc_virtual_service_platform_options_proto_enumTypes,
		MessageInfos:      file_sudo_protobuf_mpc_virtual_service_platform_options_proto_msgTypes,
		ExtensionInfos:    file_sudo_protobuf_mpc_virtual_service_platform_options_proto_extTypes,
	}.Build()
	File_sudo_protobuf_mpc_virtual_service_platform_options_proto = out.File
	file_sudo_protobuf_mpc_virtual_service_platform_options_proto_rawDesc = nil
	file_sudo_protobuf_mpc_virtual_service_platform_options_proto_goTypes = nil
	file_sudo_protobuf_mpc_virtual_service_platform_options_proto_depIdxs = nil
}
